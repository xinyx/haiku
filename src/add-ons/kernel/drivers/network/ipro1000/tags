!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADDRESS_LENGTH_PAIR	dev/e1000/if_lem.h	/^} ADDRESS_LENGTH_PAIR, *PADDRESS_LENGTH_PAIR;$/;"	t	typeref:struct:_ADDRESS_LENGTH_PAIR
ADDRESS_LENGTH_PAIR	if_em.h	/^} ADDRESS_LENGTH_PAIR, *PADDRESS_LENGTH_PAIR;$/;"	t	typeref:struct:_ADDRESS_LENGTH_PAIR
ADVERTISE_1000_FULL	dev/e1000/e1000_defines.h	349;"	d
ADVERTISE_1000_FULL	if_em_hw.h	2115;"	d
ADVERTISE_1000_HALF	dev/e1000/e1000_defines.h	348;"	d
ADVERTISE_1000_HALF	if_em_hw.h	2114;"	d
ADVERTISE_100_FULL	dev/e1000/e1000_defines.h	347;"	d
ADVERTISE_100_FULL	if_em_hw.h	2113;"	d
ADVERTISE_100_HALF	dev/e1000/e1000_defines.h	346;"	d
ADVERTISE_100_HALF	if_em_hw.h	2112;"	d
ADVERTISE_10_FULL	dev/e1000/e1000_defines.h	345;"	d
ADVERTISE_10_FULL	if_em_hw.h	2111;"	d
ADVERTISE_10_HALF	dev/e1000/e1000_defines.h	344;"	d
ADVERTISE_10_HALF	if_em_hw.h	2110;"	d
ALL_QUEUES	dev/e1000/e1000_82575.h	473;"	d
AN_RETRY_COUNT	dev/e1000/e1000_82571.h	45;"	d
ASSERT	debug.h	34;"	d
ASSERT	debug.h	69;"	d
ASSERT	dev/e1000/e1000_osdep.h	60;"	d
AUTONEG_ADVERTISE_10_100_ALL	if_em_hw.h	2117;"	d
AUTONEG_ADVERTISE_10_ALL	if_em_hw.h	2118;"	d
AUTONEG_ADVERTISE_SPEED_DEFAULT	dev/e1000/e1000_defines.h	362;"	d
AUTONEG_ADVERTISE_SPEED_DEFAULT	if_em_hw.h	2116;"	d
AUTONEG_ADV_DEFAULT	dev/e1000/if_em.h	163;"	d
AUTONEG_ADV_DEFAULT	dev/e1000/if_igb.h	156;"	d
AUTONEG_ADV_DEFAULT	dev/e1000/if_lem.h	166;"	d
AUTONEG_ADV_DEFAULT	if_em.h	181;"	d
AUTO_ALL_MODES	dev/e1000/if_em.h	167;"	d
AUTO_ALL_MODES	dev/e1000/if_igb.h	160;"	d
AUTO_ALL_MODES	dev/e1000/if_lem.h	170;"	d
AUTO_POLARITY_DISABLE	if_em_hw.h	1912;"	d
AUTO_READ_DONE_TIMEOUT	dev/e1000/e1000_defines.h	720;"	d
BME1000_E_PHY_ID	dev/e1000/e1000_defines.h	1180;"	d
BME1000_E_PHY_ID_R2	dev/e1000/e1000_defines.h	1181;"	d
BME1000_PSCR_ENABLE_DOWNSHIFT	dev/e1000/e1000_defines.h	1282;"	d
BM_CS_CTRL1	dev/e1000/e1000_phy.h	205;"	d
BM_CS_STATUS	dev/e1000/e1000_phy.h	208;"	d
BM_CS_STATUS_LINK_UP	dev/e1000/e1000_phy.h	209;"	d
BM_CS_STATUS_RESOLVED	dev/e1000/e1000_phy.h	210;"	d
BM_CS_STATUS_SPEED_1000	dev/e1000/e1000_phy.h	212;"	d
BM_CS_STATUS_SPEED_MASK	dev/e1000/e1000_phy.h	211;"	d
BM_MTA	dev/e1000/e1000_ich8lan.h	128;"	d
BM_PHY_PAGE_SELECT	dev/e1000/e1000_phy.h	130;"	d
BM_PHY_REG	dev/e1000/e1000_phy.h	157;"	d
BM_PHY_REG_NUM	dev/e1000/e1000_phy.h	163;"	d
BM_PHY_REG_PAGE	dev/e1000/e1000_phy.h	161;"	d
BM_PORT_CTRL_PAGE	dev/e1000/e1000_phy.h	146;"	d
BM_PORT_GEN_CFG	dev/e1000/e1000_ich8lan.h	119;"	d
BM_RAR_CTRL	dev/e1000/e1000_ich8lan.h	127;"	d
BM_RAR_H	dev/e1000/e1000_ich8lan.h	126;"	d
BM_RAR_L	dev/e1000/e1000_ich8lan.h	124;"	d
BM_RAR_M	dev/e1000/e1000_ich8lan.h	125;"	d
BM_RCTL	dev/e1000/e1000_ich8lan.h	120;"	d
BM_RCTL_BAM	dev/e1000/e1000_ich8lan.h	134;"	d
BM_RCTL_MO_MASK	dev/e1000/e1000_ich8lan.h	133;"	d
BM_RCTL_MO_SHIFT	dev/e1000/e1000_ich8lan.h	132;"	d
BM_RCTL_MPE	dev/e1000/e1000_ich8lan.h	131;"	d
BM_RCTL_PMCF	dev/e1000/e1000_ich8lan.h	135;"	d
BM_RCTL_RFCE	dev/e1000/e1000_ich8lan.h	136;"	d
BM_RCTL_UPE	dev/e1000/e1000_ich8lan.h	130;"	d
BM_WUC	dev/e1000/e1000_ich8lan.h	121;"	d
BM_WUC_ADDRESS_OPCODE	dev/e1000/e1000_phy.h	148;"	d
BM_WUC_DATA_OPCODE	dev/e1000/e1000_phy.h	149;"	d
BM_WUC_ENABLE_BIT	dev/e1000/e1000_phy.h	152;"	d
BM_WUC_ENABLE_PAGE	dev/e1000/e1000_phy.h	150;"	d
BM_WUC_ENABLE_REG	dev/e1000/e1000_phy.h	151;"	d
BM_WUC_HOST_WU_BIT	dev/e1000/e1000_phy.h	153;"	d
BM_WUC_ME_WU_BIT	dev/e1000/e1000_phy.h	154;"	d
BM_WUC_PAGE	dev/e1000/e1000_phy.h	147;"	d
BM_WUFC	dev/e1000/e1000_ich8lan.h	122;"	d
BM_WUS	dev/e1000/e1000_ich8lan.h	123;"	d
BPF_MTAP	if_compat.h	95;"	d
CARRIER_EXTENSION	dev/e1000/e1000_api.h	152;"	d
CARRIER_EXTENSION	if_em_hw.h	1653;"	d
CMD_MEM_WRT_INVALIDATE	dev/e1000/e1000_osdep.h	82;"	d
CMD_MEM_WRT_INVALIDATE	if_em_osdep.h	93;"	d
COPPER_LINK_UP_LIMIT	dev/e1000/e1000_defines.h	710;"	d
CRC_LENGTH	if_em_hw.h	395;"	d
CR_1000T_ASYM_PAUSE	dev/e1000/e1000_defines.h	919;"	d
CR_1000T_ASYM_PAUSE	if_em_hw.h	1873;"	d
CR_1000T_FD_CAPS	dev/e1000/e1000_defines.h	921;"	d
CR_1000T_FD_CAPS	if_em_hw.h	1875;"	d
CR_1000T_HD_CAPS	dev/e1000/e1000_defines.h	920;"	d
CR_1000T_HD_CAPS	if_em_hw.h	1874;"	d
CR_1000T_MS_ENABLE	dev/e1000/e1000_defines.h	927;"	d
CR_1000T_MS_ENABLE	if_em_hw.h	1880;"	d
CR_1000T_MS_VALUE	dev/e1000/e1000_defines.h	925;"	d
CR_1000T_MS_VALUE	if_em_hw.h	1878;"	d
CR_1000T_REPEATER_DTE	dev/e1000/e1000_defines.h	923;"	d
CR_1000T_REPEATER_DTE	if_em_hw.h	1876;"	d
CR_1000T_TEST_MODE_1	dev/e1000/e1000_defines.h	929;"	d
CR_1000T_TEST_MODE_1	if_em_hw.h	1883;"	d
CR_1000T_TEST_MODE_2	dev/e1000/e1000_defines.h	930;"	d
CR_1000T_TEST_MODE_2	if_em_hw.h	1884;"	d
CR_1000T_TEST_MODE_3	dev/e1000/e1000_defines.h	931;"	d
CR_1000T_TEST_MODE_3	if_em_hw.h	1885;"	d
CR_1000T_TEST_MODE_4	dev/e1000/e1000_defines.h	932;"	d
CR_1000T_TEST_MODE_4	if_em_hw.h	1886;"	d
CR_1000T_TEST_MODE_NORMAL	dev/e1000/e1000_defines.h	928;"	d
CR_1000T_TEST_MODE_NORMAL	if_em_hw.h	1882;"	d
CSUM_DATA_VALID	if_compat.h	69;"	d
CSUM_IP_CHECKED	if_compat.h	67;"	d
CSUM_IP_VALID	if_compat.h	68;"	d
CSUM_OFFLOAD	dev/e1000/if_em.h	245;"	d
CSUM_OFFLOAD	dev/e1000/if_igb.h	238;"	d
CSUM_OFFLOAD	dev/e1000/if_igb.h	240;"	d
CSUM_OFFLOAD	dev/e1000/if_lem.h	248;"	d
CSUM_PSEUDO_HDR	if_compat.h	70;"	d
CSUM_TCP	if_compat.h	65;"	d
CSUM_TSO	dev/e1000/if_em.c	350;"	d	file:
CSUM_UDP	if_compat.h	66;"	d
CV_SMB_CTRL	dev/e1000/e1000_ich8lan.h	164;"	d
CV_SMB_CTRL_FORCE_SMBUS	dev/e1000/e1000_ich8lan.h	165;"	d
DEBUGFUNC	debug.h	35;"	d
DEBUGFUNC	debug.h	53;"	d
DEBUGFUNC	dev/e1000/e1000_osdep.h	67;"	d
DEBUGOUT	dev/e1000/e1000_osdep.h	68;"	d
DEBUGOUT1	dev/e1000/e1000_osdep.h	70;"	d
DEBUGOUT2	dev/e1000/e1000_osdep.h	71;"	d
DEBUGOUT3	dev/e1000/e1000_osdep.h	72;"	d
DEBUGOUT7	dev/e1000/e1000_osdep.h	73;"	d
DEBUG_DEVICE	debug.h	27;"	d
DEBUG_DISPLAY_STATS	debug.h	32;"	d
DEBUG_DISPLAY_STATS	debug.h	52;"	d
DEBUG_FUNC_CALLS	debug.h	31;"	d
DEBUG_HW	debug.h	30;"	d
DEBUG_HW	dev/e1000/if_em.h	225;"	d
DEBUG_HW	dev/e1000/if_igb.h	214;"	d
DEBUG_HW	dev/e1000/if_lem.h	229;"	d
DEBUG_INIT	debug.h	28;"	d
DEBUG_INIT	dev/e1000/if_em.h	223;"	d
DEBUG_INIT	dev/e1000/if_igb.h	212;"	d
DEBUG_INIT	dev/e1000/if_lem.h	227;"	d
DEBUG_IOCTL	debug.h	29;"	d
DEBUG_IOCTL	dev/e1000/if_em.h	224;"	d
DEBUG_IOCTL	dev/e1000/if_igb.h	213;"	d
DEBUG_IOCTL	dev/e1000/if_lem.h	228;"	d
DEFAULT_80003ES2LAN_TIPG_IPGR2	dev/e1000/e1000_defines.h	451;"	d
DEFAULT_82542_TIPG_IPGR1	dev/e1000/e1000_defines.h	445;"	d
DEFAULT_82542_TIPG_IPGR1	if_em_hw.h	1570;"	d
DEFAULT_82542_TIPG_IPGR2	dev/e1000/e1000_defines.h	449;"	d
DEFAULT_82542_TIPG_IPGR2	if_em_hw.h	1574;"	d
DEFAULT_82542_TIPG_IPGT	dev/e1000/e1000_defines.h	439;"	d
DEFAULT_82542_TIPG_IPGT	if_em_hw.h	1562;"	d
DEFAULT_82543_TIPG_IPGR1	dev/e1000/e1000_defines.h	446;"	d
DEFAULT_82543_TIPG_IPGR1	if_em_hw.h	1571;"	d
DEFAULT_82543_TIPG_IPGR2	dev/e1000/e1000_defines.h	450;"	d
DEFAULT_82543_TIPG_IPGR2	if_em_hw.h	1575;"	d
DEFAULT_82543_TIPG_IPGT_COPPER	dev/e1000/e1000_defines.h	441;"	d
DEFAULT_82543_TIPG_IPGT_COPPER	if_em_hw.h	1564;"	d
DEFAULT_82543_TIPG_IPGT_FIBER	dev/e1000/e1000_defines.h	440;"	d
DEFAULT_82543_TIPG_IPGT_FIBER	if_em_hw.h	1563;"	d
DEFAULT_ITR	dev/e1000/if_em.c	346;"	d	file:
DEFAULT_ITR	dev/e1000/if_lem.c	299;"	d	file:
DEFAULT_ITR	if_em.c	2203;"	d	file:
DEFAULT_TCTL_EXT_GCEX_80003ES2LAN	dev/e1000/e1000_80003es2lan.h	55;"	d
DEFAULT_TIPG_IPGT_1000_80003ES2LAN	dev/e1000/e1000_80003es2lan.h	57;"	d
DEFAULT_TIPG_IPGT_10_100_80003ES2LAN	dev/e1000/e1000_80003es2lan.h	58;"	d
DESC_ARRAY	dev/e1000/if_lem.h	/^} DESC_ARRAY, *PDESC_ARRAY;$/;"	t	typeref:struct:_DESCRIPTOR_PAIR
DESC_ARRAY	if_em.h	/^} DESC_ARRAY, *PDESC_ARRAY;$/;"	t	typeref:struct:_DESCRIPTOR_PAIR
DEVICE_DEBUGOUT	debug.h	36;"	d
DEVICE_DEBUGOUT	debug.h	54;"	d
DEVICE_DEBUGOUT1	debug.h	37;"	d
DEVICE_DEBUGOUT1	debug.h	55;"	d
DEVICE_DEBUGOUT2	debug.h	38;"	d
DEVICE_DEBUGOUT2	debug.h	56;"	d
DEVICE_SPEED_MASK	if_em_hw.h	2107;"	d
DO_AUTO_NEG	dev/e1000/if_em.h	151;"	d
DO_AUTO_NEG	dev/e1000/if_igb.h	144;"	d
DO_AUTO_NEG	dev/e1000/if_lem.h	154;"	d
DO_AUTO_NEG	if_em.h	157;"	d
DSP_RESET_DISABLE	if_em_hw.h	2045;"	d
DSP_RESET_ENABLE	if_em_hw.h	2044;"	d
E1000_82542_2_0_REV_ID	if_em_hw.h	377;"	d
E1000_82542_2_1_REV_ID	if_em_hw.h	378;"	d
E1000_82542_AIT	if_em_hw.h	822;"	d
E1000_82542_ALGNERRC	if_em_hw.h	837;"	d
E1000_82542_BPRC	if_em_hw.h	863;"	d
E1000_82542_BPTC	if_em_hw.h	891;"	d
E1000_82542_CEXTERR	if_em_hw.h	849;"	d
E1000_82542_COLC	if_em_hw.h	845;"	d
E1000_82542_CRCERRS	if_em_hw.h	836;"	d
E1000_82542_CTRL	if_em_hw.h	782;"	d
E1000_82542_CTRL_DUP	if_em_hw.h	783;"	d
E1000_82542_CTRL_EXT	if_em_hw.h	787;"	d
E1000_82542_DC	if_em_hw.h	846;"	d
E1000_82542_ECOL	if_em_hw.h	842;"	d
E1000_82542_EECD	if_em_hw.h	785;"	d
E1000_82542_EERD	if_em_hw.h	786;"	d
E1000_82542_FCAH	if_em_hw.h	791;"	d
E1000_82542_FCAL	if_em_hw.h	790;"	d
E1000_82542_FCRTH	if_em_hw.h	807;"	d
E1000_82542_FCRTL	if_em_hw.h	808;"	d
E1000_82542_FCRUC	if_em_hw.h	855;"	d
E1000_82542_FCT	if_em_hw.h	792;"	d
E1000_82542_FCTTV	if_em_hw.h	809;"	d
E1000_82542_FFLT	if_em_hw.h	904;"	d
E1000_82542_FFMT	if_em_hw.h	907;"	d
E1000_82542_FFVT	if_em_hw.h	908;"	d
E1000_82542_FLA	if_em_hw.h	788;"	d
E1000_82542_GORCH	if_em_hw.h	867;"	d
E1000_82542_GORCL	if_em_hw.h	866;"	d
E1000_82542_GOTCH	if_em_hw.h	869;"	d
E1000_82542_GOTCL	if_em_hw.h	868;"	d
E1000_82542_GPRC	if_em_hw.h	862;"	d
E1000_82542_GPTC	if_em_hw.h	865;"	d
E1000_82542_ICR	if_em_hw.h	795;"	d
E1000_82542_ICS	if_em_hw.h	797;"	d
E1000_82542_IMC	if_em_hw.h	799;"	d
E1000_82542_IMS	if_em_hw.h	798;"	d
E1000_82542_IP4AT	if_em_hw.h	900;"	d
E1000_82542_IP6AT	if_em_hw.h	901;"	d
E1000_82542_IPAV	if_em_hw.h	899;"	d
E1000_82542_ITR	if_em_hw.h	796;"	d
E1000_82542_LATECOL	if_em_hw.h	844;"	d
E1000_82542_LEDCTL	if_em_hw.h	824;"	d
E1000_82542_MANC	if_em_hw.h	898;"	d
E1000_82542_MANC2H	dev/e1000/if_em.c	4820;"	d	file:
E1000_82542_MCC	if_em_hw.h	843;"	d
E1000_82542_MDIC	if_em_hw.h	789;"	d
E1000_82542_MGTPDC	if_em_hw.h	876;"	d
E1000_82542_MGTPRC	if_em_hw.h	875;"	d
E1000_82542_MGTPTC	if_em_hw.h	877;"	d
E1000_82542_MPC	if_em_hw.h	840;"	d
E1000_82542_MPRC	if_em_hw.h	864;"	d
E1000_82542_MPTC	if_em_hw.h	890;"	d
E1000_82542_MTA	if_em_hw.h	812;"	d
E1000_82542_PBA	if_em_hw.h	825;"	d
E1000_82542_PRC1023	if_em_hw.h	860;"	d
E1000_82542_PRC127	if_em_hw.h	857;"	d
E1000_82542_PRC1522	if_em_hw.h	861;"	d
E1000_82542_PRC255	if_em_hw.h	858;"	d
E1000_82542_PRC511	if_em_hw.h	859;"	d
E1000_82542_PRC64	if_em_hw.h	856;"	d
E1000_82542_PTC1023	if_em_hw.h	888;"	d
E1000_82542_PTC127	if_em_hw.h	885;"	d
E1000_82542_PTC1522	if_em_hw.h	889;"	d
E1000_82542_PTC255	if_em_hw.h	886;"	d
E1000_82542_PTC511	if_em_hw.h	887;"	d
E1000_82542_PTC64	if_em_hw.h	884;"	d
E1000_82542_RA	if_em_hw.h	794;"	d
E1000_82542_RADV	if_em_hw.h	827;"	d
E1000_82542_RCTL	if_em_hw.h	800;"	d
E1000_82542_RDBAH	if_em_hw.h	803;"	d
E1000_82542_RDBAL	if_em_hw.h	802;"	d
E1000_82542_RDH	if_em_hw.h	805;"	d
E1000_82542_RDLEN	if_em_hw.h	804;"	d
E1000_82542_RDT	if_em_hw.h	806;"	d
E1000_82542_RDTR	if_em_hw.h	801;"	d
E1000_82542_RFC	if_em_hw.h	872;"	d
E1000_82542_RJC	if_em_hw.h	874;"	d
E1000_82542_RLEC	if_em_hw.h	850;"	d
E1000_82542_RNBC	if_em_hw.h	870;"	d
E1000_82542_ROC	if_em_hw.h	873;"	d
E1000_82542_RSRPD	if_em_hw.h	828;"	d
E1000_82542_RUC	if_em_hw.h	871;"	d
E1000_82542_RXCSUM	if_em_hw.h	894;"	d
E1000_82542_RXCW	if_em_hw.h	811;"	d
E1000_82542_RXDCTL	if_em_hw.h	826;"	d
E1000_82542_RXERRC	if_em_hw.h	839;"	d
E1000_82542_SCC	if_em_hw.h	841;"	d
E1000_82542_SEC	if_em_hw.h	848;"	d
E1000_82542_STATUS	if_em_hw.h	784;"	d
E1000_82542_SYMERRS	if_em_hw.h	838;"	d
E1000_82542_TADV	if_em_hw.h	834;"	d
E1000_82542_TBT	if_em_hw.h	821;"	d
E1000_82542_TCTL	if_em_hw.h	813;"	d
E1000_82542_TDBAH	if_em_hw.h	816;"	d
E1000_82542_TDBAL	if_em_hw.h	815;"	d
E1000_82542_TDFH	if_em_hw.h	905;"	d
E1000_82542_TDFHS	if_em_hw.h	830;"	d
E1000_82542_TDFPC	if_em_hw.h	832;"	d
E1000_82542_TDFT	if_em_hw.h	906;"	d
E1000_82542_TDFTS	if_em_hw.h	831;"	d
E1000_82542_TDH	if_em_hw.h	818;"	d
E1000_82542_TDLEN	if_em_hw.h	817;"	d
E1000_82542_TDT	if_em_hw.h	819;"	d
E1000_82542_TIDV	if_em_hw.h	820;"	d
E1000_82542_TIPG	if_em_hw.h	814;"	d
E1000_82542_TNCRS	if_em_hw.h	847;"	d
E1000_82542_TORH	if_em_hw.h	879;"	d
E1000_82542_TORL	if_em_hw.h	878;"	d
E1000_82542_TOTH	if_em_hw.h	881;"	d
E1000_82542_TOTL	if_em_hw.h	880;"	d
E1000_82542_TPR	if_em_hw.h	882;"	d
E1000_82542_TPT	if_em_hw.h	883;"	d
E1000_82542_TSCTC	if_em_hw.h	892;"	d
E1000_82542_TSCTFC	if_em_hw.h	893;"	d
E1000_82542_TSPMT	if_em_hw.h	835;"	d
E1000_82542_TXCW	if_em_hw.h	810;"	d
E1000_82542_TXDCTL	if_em_hw.h	833;"	d
E1000_82542_TXDMAC	if_em_hw.h	829;"	d
E1000_82542_VET	if_em_hw.h	793;"	d
E1000_82542_VFTA	if_em_hw.h	823;"	d
E1000_82542_WUC	if_em_hw.h	895;"	d
E1000_82542_WUFC	if_em_hw.h	896;"	d
E1000_82542_WUPL	if_em_hw.h	902;"	d
E1000_82542_WUPM	if_em_hw.h	903;"	d
E1000_82542_WUS	if_em_hw.h	897;"	d
E1000_82542_XOFFRXC	if_em_hw.h	853;"	d
E1000_82542_XOFFTXC	if_em_hw.h	854;"	d
E1000_82542_XONRXC	if_em_hw.h	851;"	d
E1000_82542_XONTXC	if_em_hw.h	852;"	d
E1000_82580_PHY_POWER_MGMT	dev/e1000/e1000_phy.h	198;"	d
E1000_82580_PM_D0_LPLU	dev/e1000/e1000_phy.h	200;"	d
E1000_82580_PM_D3_LPLU	dev/e1000/e1000_phy.h	201;"	d
E1000_82580_PM_GO_LINKD	dev/e1000/e1000_phy.h	202;"	d
E1000_82580_PM_SPD	dev/e1000/e1000_phy.h	199;"	d
E1000_82580_RXPBS_TABLE_SIZE	dev/e1000/e1000_82575.c	121;"	d	file:
E1000_ADVTXD_DCMD_DDTYP_ISCSI	dev/e1000/e1000_82575.h	299;"	d
E1000_ADVTXD_DCMD_DEXT	dev/e1000/e1000_82575.h	300;"	d
E1000_ADVTXD_DCMD_DEXT	dev/e1000/e1000_vf.h	137;"	d
E1000_ADVTXD_DCMD_EOP	dev/e1000/e1000_82575.h	296;"	d
E1000_ADVTXD_DCMD_EOP	dev/e1000/e1000_vf.h	134;"	d
E1000_ADVTXD_DCMD_IFCS	dev/e1000/e1000_82575.h	297;"	d
E1000_ADVTXD_DCMD_IFCS	dev/e1000/e1000_vf.h	135;"	d
E1000_ADVTXD_DCMD_RS	dev/e1000/e1000_82575.h	298;"	d
E1000_ADVTXD_DCMD_RS	dev/e1000/e1000_vf.h	136;"	d
E1000_ADVTXD_DCMD_TSE	dev/e1000/e1000_82575.h	302;"	d
E1000_ADVTXD_DCMD_TSE	dev/e1000/e1000_vf.h	139;"	d
E1000_ADVTXD_DCMD_VLE	dev/e1000/e1000_82575.h	301;"	d
E1000_ADVTXD_DCMD_VLE	dev/e1000/e1000_vf.h	138;"	d
E1000_ADVTXD_DTYP_CTXT	dev/e1000/e1000_82575.h	294;"	d
E1000_ADVTXD_DTYP_CTXT	dev/e1000/e1000_vf.h	132;"	d
E1000_ADVTXD_DTYP_DATA	dev/e1000/e1000_82575.h	295;"	d
E1000_ADVTXD_DTYP_DATA	dev/e1000/e1000_vf.h	133;"	d
E1000_ADVTXD_IDX_SHIFT	dev/e1000/e1000_82575.h	306;"	d
E1000_ADVTXD_IPSEC_ESP_LEN_MASK	dev/e1000/e1000_82575.h	340;"	d
E1000_ADVTXD_IPSEC_SA_INDEX_MASK	dev/e1000/e1000_82575.h	338;"	d
E1000_ADVTXD_L4LEN_SHIFT	dev/e1000/e1000_82575.h	335;"	d
E1000_ADVTXD_L4LEN_SHIFT	dev/e1000/e1000_vf.h	153;"	d
E1000_ADVTXD_MACLEN_SHIFT	dev/e1000/e1000_82575.h	323;"	d
E1000_ADVTXD_MACLEN_SHIFT	dev/e1000/e1000_vf.h	150;"	d
E1000_ADVTXD_MAC_LINKSEC	dev/e1000/e1000_82575.h	303;"	d
E1000_ADVTXD_MAC_TSTAMP	dev/e1000/e1000_82575.h	304;"	d
E1000_ADVTXD_MSS_SHIFT	dev/e1000/e1000_82575.h	336;"	d
E1000_ADVTXD_MSS_SHIFT	dev/e1000/e1000_vf.h	154;"	d
E1000_ADVTXD_PAYLEN_SHIFT	dev/e1000/e1000_82575.h	313;"	d
E1000_ADVTXD_PAYLEN_SHIFT	dev/e1000/e1000_vf.h	140;"	d
E1000_ADVTXD_POPTS_IPSEC	dev/e1000/e1000_82575.h	312;"	d
E1000_ADVTXD_POPTS_ISCO_1ST	dev/e1000/e1000_82575.h	307;"	d
E1000_ADVTXD_POPTS_ISCO_FULL	dev/e1000/e1000_82575.h	311;"	d
E1000_ADVTXD_POPTS_ISCO_LAST	dev/e1000/e1000_82575.h	309;"	d
E1000_ADVTXD_POPTS_ISCO_MDL	dev/e1000/e1000_82575.h	308;"	d
E1000_ADVTXD_STAT_SN_CRC	dev/e1000/e1000_82575.h	305;"	d
E1000_ADVTXD_TUCMD_IPSEC_ENCRYPT_EN	dev/e1000/e1000_82575.h	332;"	d
E1000_ADVTXD_TUCMD_IPSEC_TYPE_ESP	dev/e1000/e1000_82575.h	330;"	d
E1000_ADVTXD_TUCMD_IPV4	dev/e1000/e1000_82575.h	325;"	d
E1000_ADVTXD_TUCMD_IPV4	dev/e1000/e1000_vf.h	151;"	d
E1000_ADVTXD_TUCMD_IPV6	dev/e1000/e1000_82575.h	326;"	d
E1000_ADVTXD_TUCMD_L4T_SCTP	dev/e1000/e1000_82575.h	329;"	d
E1000_ADVTXD_TUCMD_L4T_TCP	dev/e1000/e1000_82575.h	328;"	d
E1000_ADVTXD_TUCMD_L4T_TCP	dev/e1000/e1000_vf.h	152;"	d
E1000_ADVTXD_TUCMD_L4T_UDP	dev/e1000/e1000_82575.h	327;"	d
E1000_ADVTXD_TUCMD_MKRREQ	dev/e1000/e1000_82575.h	334;"	d
E1000_ADVTXD_VLAN_SHIFT	dev/e1000/e1000_82575.h	324;"	d
E1000_ADV_DCMD_EOP	dev/e1000/e1000_82575.h	91;"	d
E1000_ADV_DCMD_IFCS	dev/e1000/e1000_82575.h	92;"	d
E1000_ADV_DCMD_RS	dev/e1000/e1000_82575.h	93;"	d
E1000_ADV_DCMD_TSE	dev/e1000/e1000_82575.h	95;"	d
E1000_ADV_DCMD_VLE	dev/e1000/e1000_82575.h	94;"	d
E1000_ADV_TUCMD_IPV4	dev/e1000/e1000_82575.h	86;"	d
E1000_ADV_TUCMD_IPV6	dev/e1000/e1000_82575.h	87;"	d
E1000_ADV_TUCMD_L4T_TCP	dev/e1000/e1000_82575.h	89;"	d
E1000_ADV_TUCMD_L4T_UDP	dev/e1000/e1000_82575.h	88;"	d
E1000_ADV_TUCMD_MKRREQ	dev/e1000/e1000_82575.h	90;"	d
E1000_ADV_TXD_CMD_DEXT	dev/e1000/e1000_82575.h	85;"	d
E1000_AIT	dev/e1000/e1000_regs.h	95;"	d
E1000_AIT	if_em_hw.h	672;"	d
E1000_ALGNERRC	dev/e1000/e1000_regs.h	298;"	d
E1000_ALGNERRC	if_em_hw.h	702;"	d
E1000_ALL_100_SPEED	dev/e1000/e1000_defines.h	358;"	d
E1000_ALL_10_SPEED	dev/e1000/e1000_defines.h	359;"	d
E1000_ALL_HALF_DUPLEX	dev/e1000/e1000_defines.h	360;"	d
E1000_ALL_NOT_GIG	dev/e1000/e1000_defines.h	355;"	d
E1000_ALL_SPEED_DUPLEX	dev/e1000/e1000_defines.h	352;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN0	dev/e1000/e1000_hw.h	185;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN1	dev/e1000/e1000_hw.h	186;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN2	dev/e1000/e1000_hw.h	187;"	d
E1000_ALT_MAC_ADDRESS_OFFSET_LAN3	dev/e1000/e1000_hw.h	188;"	d
E1000_B2OGPRC	dev/e1000/e1000_regs.h	669;"	d
E1000_B2OSPC	dev/e1000/e1000_regs.h	668;"	d
E1000_BARCTRL	dev/e1000/e1000_regs.h	50;"	d
E1000_BARCTRL_CSRSIZE	dev/e1000/e1000_regs.h	52;"	d
E1000_BARCTRL_FLSIZE	dev/e1000/e1000_regs.h	51;"	d
E1000_BASE1000T_STATUS	dev/e1000/e1000_82571.h	57;"	d
E1000_BLK_PHY_RESET	dev/e1000/e1000_defines.h	698;"	d
E1000_BPRC	dev/e1000/e1000_regs.h	324;"	d
E1000_BPRC	if_em_hw.h	728;"	d
E1000_BPTC	dev/e1000/e1000_regs.h	352;"	d
E1000_BPTC	if_em_hw.h	756;"	d
E1000_BSCTRH	dev/e1000/e1000_regs.h	553;"	d
E1000_CABLE_LENGTH_UNDEFINED	dev/e1000/e1000_phy.h	254;"	d
E1000_CBRDPC	dev/e1000/e1000_regs.h	447;"	d
E1000_CBRMPC	dev/e1000/e1000_regs.h	448;"	d
E1000_CBTMPC	dev/e1000/e1000_regs.h	445;"	d
E1000_CCMCTL	dev/e1000/e1000_regs.h	501;"	d
E1000_CEXTERR	dev/e1000/e1000_regs.h	310;"	d
E1000_CEXTERR	if_em_hw.h	714;"	d
E1000_CIAA	dev/e1000/e1000_regs.h	471;"	d
E1000_CIAD	dev/e1000/e1000_regs.h	472;"	d
E1000_COLC	dev/e1000/e1000_regs.h	306;"	d
E1000_COLC	if_em_hw.h	710;"	d
E1000_COLD_SHIFT	dev/e1000/e1000_defines.h	436;"	d
E1000_COLD_SHIFT	if_em_hw.h	1555;"	d
E1000_COLLISION_DISTANCE	dev/e1000/e1000_defines.h	435;"	d
E1000_COLLISION_DISTANCE	if_em_hw.h	1552;"	d
E1000_COLLISION_THRESHOLD	dev/e1000/e1000_defines.h	433;"	d
E1000_COLLISION_THRESHOLD	if_em_hw.h	1550;"	d
E1000_CONNSW	dev/e1000/e1000_regs.h	64;"	d
E1000_CONNSW_ENRGSRC	dev/e1000/e1000_defines.h	288;"	d
E1000_CONNSW_PHYSD	dev/e1000/e1000_defines.h	289;"	d
E1000_CONNSW_SERDESD	dev/e1000/e1000_defines.h	290;"	d
E1000_CPUVEC	dev/e1000/e1000_regs.h	523;"	d
E1000_CRCERRS	dev/e1000/e1000_regs.h	297;"	d
E1000_CRCERRS	if_em_hw.h	701;"	d
E1000_CRC_OFFSET	dev/e1000/e1000_regs.h	364;"	d
E1000_CTRL	dev/e1000/e1000_regs.h	38;"	d
E1000_CTRL	if_em_hw.h	648;"	d
E1000_CTRL_ADVD3WUC	dev/e1000/e1000_defines.h	270;"	d
E1000_CTRL_ASDE	dev/e1000/e1000_defines.h	255;"	d
E1000_CTRL_ASDE	if_em_hw.h	1055;"	d
E1000_CTRL_BEM	if_em_hw.h	1050;"	d
E1000_CTRL_BEM32	if_em_hw.h	1062;"	d
E1000_CTRL_DEV_RST	dev/e1000/e1000_82575.h	58;"	d
E1000_CTRL_DUP	dev/e1000/e1000_regs.h	39;"	d
E1000_CTRL_DUP	if_em_hw.h	649;"	d
E1000_CTRL_EN_PHY_PWR_MGMT	dev/e1000/e1000_defines.h	271;"	d
E1000_CTRL_EXT	dev/e1000/e1000_regs.h	43;"	d
E1000_CTRL_EXT	if_em_hw.h	653;"	d
E1000_CTRL_EXT_ASDCHK	if_em_hw.h	1154;"	d
E1000_CTRL_EXT_DMA_DYN_CLK_EN	dev/e1000/e1000_defines.h	80;"	d
E1000_CTRL_EXT_DRV_LOAD	dev/e1000/e1000_defines.h	90;"	d
E1000_CTRL_EXT_EE_RST	dev/e1000/e1000_defines.h	75;"	d
E1000_CTRL_EXT_EE_RST	if_em_hw.h	1155;"	d
E1000_CTRL_EXT_EIAME	dev/e1000/e1000_defines.h	88;"	d
E1000_CTRL_EXT_FORCE_SMBUS	dev/e1000/e1000_defines.h	74;"	d
E1000_CTRL_EXT_GPI0_EN	if_em_hw.h	1140;"	d
E1000_CTRL_EXT_GPI1_EN	if_em_hw.h	1141;"	d
E1000_CTRL_EXT_GPI2_EN	if_em_hw.h	1143;"	d
E1000_CTRL_EXT_GPI3_EN	if_em_hw.h	1144;"	d
E1000_CTRL_EXT_IAME	dev/e1000/e1000_defines.h	91;"	d
E1000_CTRL_EXT_IPS	if_em_hw.h	1156;"	d
E1000_CTRL_EXT_IRCA	dev/e1000/e1000_defines.h	89;"	d
E1000_CTRL_EXT_LINK_MODE_1000BASE_KX	dev/e1000/e1000_defines.h	84;"	d
E1000_CTRL_EXT_LINK_MODE_GMII	dev/e1000/e1000_defines.h	85;"	d
E1000_CTRL_EXT_LINK_MODE_GMII	if_em_hw.h	1159;"	d
E1000_CTRL_EXT_LINK_MODE_MASK	dev/e1000/e1000_defines.h	81;"	d
E1000_CTRL_EXT_LINK_MODE_MASK	if_em_hw.h	1158;"	d
E1000_CTRL_EXT_LINK_MODE_OFFSET	dev/e1000/e1000_defines.h	83;"	d
E1000_CTRL_EXT_LINK_MODE_PCIE_SERDES	dev/e1000/e1000_defines.h	86;"	d
E1000_CTRL_EXT_LINK_MODE_SGMII	dev/e1000/e1000_defines.h	87;"	d
E1000_CTRL_EXT_LINK_MODE_TBI	if_em_hw.h	1160;"	d
E1000_CTRL_EXT_LPCD	dev/e1000/e1000_defines.h	66;"	d
E1000_CTRL_EXT_LSECCK	dev/e1000/e1000_defines.h	93;"	d
E1000_CTRL_EXT_NSICR	dev/e1000/e1000_82575.h	97;"	d
E1000_CTRL_EXT_PBA_CLR	dev/e1000/e1000_defines.h	92;"	d
E1000_CTRL_EXT_PFRSTD	dev/e1000/e1000_defines.h	77;"	d
E1000_CTRL_EXT_PHYINT_EN	if_em_hw.h	1142;"	d
E1000_CTRL_EXT_PHYPDEN	dev/e1000/e1000_defines.h	94;"	d
E1000_CTRL_EXT_PHY_INT	if_em_hw.h	1147;"	d
E1000_CTRL_EXT_RO_DIS	dev/e1000/e1000_defines.h	79;"	d
E1000_CTRL_EXT_SDP3_DATA	dev/e1000/e1000_defines.h	69;"	d
E1000_CTRL_EXT_SDP3_DIR	dev/e1000/e1000_defines.h	73;"	d
E1000_CTRL_EXT_SDP4_DATA	dev/e1000/e1000_defines.h	67;"	d
E1000_CTRL_EXT_SDP4_DATA	if_em_hw.h	1145;"	d
E1000_CTRL_EXT_SDP4_DIR	dev/e1000/e1000_defines.h	71;"	d
E1000_CTRL_EXT_SDP4_DIR	if_em_hw.h	1150;"	d
E1000_CTRL_EXT_SDP5_DATA	if_em_hw.h	1146;"	d
E1000_CTRL_EXT_SDP5_DIR	if_em_hw.h	1151;"	d
E1000_CTRL_EXT_SDP6_DATA	dev/e1000/e1000_defines.h	68;"	d
E1000_CTRL_EXT_SDP6_DATA	if_em_hw.h	1148;"	d
E1000_CTRL_EXT_SDP6_DIR	dev/e1000/e1000_defines.h	72;"	d
E1000_CTRL_EXT_SDP6_DIR	if_em_hw.h	1152;"	d
E1000_CTRL_EXT_SDP7_DATA	if_em_hw.h	1149;"	d
E1000_CTRL_EXT_SDP7_DIR	if_em_hw.h	1153;"	d
E1000_CTRL_EXT_SPD_BYPS	dev/e1000/e1000_defines.h	78;"	d
E1000_CTRL_EXT_SPD_BYPS	if_em_hw.h	1157;"	d
E1000_CTRL_EXT_WR_WMARK_256	if_em_hw.h	1162;"	d
E1000_CTRL_EXT_WR_WMARK_320	if_em_hw.h	1163;"	d
E1000_CTRL_EXT_WR_WMARK_384	if_em_hw.h	1164;"	d
E1000_CTRL_EXT_WR_WMARK_448	if_em_hw.h	1165;"	d
E1000_CTRL_EXT_WR_WMARK_MASK	if_em_hw.h	1161;"	d
E1000_CTRL_FD	dev/e1000/e1000_defines.h	251;"	d
E1000_CTRL_FD	if_em_hw.h	1049;"	d
E1000_CTRL_FRCDPX	dev/e1000/e1000_defines.h	263;"	d
E1000_CTRL_FRCDPX	if_em_hw.h	1064;"	d
E1000_CTRL_FRCSPD	dev/e1000/e1000_defines.h	262;"	d
E1000_CTRL_FRCSPD	if_em_hw.h	1063;"	d
E1000_CTRL_GIO_MASTER_DISABLE	dev/e1000/e1000_defines.h	253;"	d
E1000_CTRL_I2C_ENA	dev/e1000/e1000_defines.h	281;"	d
E1000_CTRL_ILOS	dev/e1000/e1000_defines.h	257;"	d
E1000_CTRL_ILOS	if_em_hw.h	1057;"	d
E1000_CTRL_LANPHYPC_OVERRIDE	dev/e1000/e1000_defines.h	264;"	d
E1000_CTRL_LANPHYPC_VALUE	dev/e1000/e1000_defines.h	265;"	d
E1000_CTRL_LRST	dev/e1000/e1000_defines.h	254;"	d
E1000_CTRL_LRST	if_em_hw.h	1052;"	d
E1000_CTRL_MDC	dev/e1000/e1000_defines.h	286;"	d
E1000_CTRL_MDC	if_em_hw.h	1703;"	d
E1000_CTRL_MDC_DIR	dev/e1000/e1000_defines.h	285;"	d
E1000_CTRL_MDC_DIR	if_em_hw.h	1702;"	d
E1000_CTRL_MDIO	dev/e1000/e1000_defines.h	284;"	d
E1000_CTRL_MDIO	if_em_hw.h	1701;"	d
E1000_CTRL_MDIO_DIR	dev/e1000/e1000_defines.h	283;"	d
E1000_CTRL_MDIO_DIR	if_em_hw.h	1700;"	d
E1000_CTRL_MEHE	dev/e1000/e1000_defines.h	266;"	d
E1000_CTRL_PHY_RESET	if_em_hw.h	1699;"	d
E1000_CTRL_PHY_RESET4	if_em_hw.h	1705;"	d
E1000_CTRL_PHY_RESET_DIR	if_em_hw.h	1698;"	d
E1000_CTRL_PHY_RESET_DIR4	if_em_hw.h	1704;"	d
E1000_CTRL_PHY_RST	dev/e1000/e1000_defines.h	280;"	d
E1000_CTRL_PHY_RST	if_em_hw.h	1078;"	d
E1000_CTRL_PRIOR	dev/e1000/e1000_defines.h	252;"	d
E1000_CTRL_PRIOR	if_em_hw.h	1051;"	d
E1000_CTRL_RFCE	dev/e1000/e1000_defines.h	277;"	d
E1000_CTRL_RFCE	if_em_hw.h	1074;"	d
E1000_CTRL_RST	dev/e1000/e1000_defines.h	276;"	d
E1000_CTRL_RST	if_em_hw.h	1073;"	d
E1000_CTRL_RTE	if_em_hw.h	1076;"	d
E1000_CTRL_SLE	if_em_hw.h	1054;"	d
E1000_CTRL_SLU	dev/e1000/e1000_defines.h	256;"	d
E1000_CTRL_SLU	if_em_hw.h	1056;"	d
E1000_CTRL_SPD_10	dev/e1000/e1000_defines.h	259;"	d
E1000_CTRL_SPD_10	if_em_hw.h	1059;"	d
E1000_CTRL_SPD_100	dev/e1000/e1000_defines.h	260;"	d
E1000_CTRL_SPD_100	if_em_hw.h	1060;"	d
E1000_CTRL_SPD_1000	dev/e1000/e1000_defines.h	261;"	d
E1000_CTRL_SPD_1000	if_em_hw.h	1061;"	d
E1000_CTRL_SPD_SEL	dev/e1000/e1000_defines.h	258;"	d
E1000_CTRL_SPD_SEL	if_em_hw.h	1058;"	d
E1000_CTRL_SWDPIN0	dev/e1000/e1000_defines.h	267;"	d
E1000_CTRL_SWDPIN0	if_em_hw.h	1065;"	d
E1000_CTRL_SWDPIN1	dev/e1000/e1000_defines.h	268;"	d
E1000_CTRL_SWDPIN1	if_em_hw.h	1066;"	d
E1000_CTRL_SWDPIN2	dev/e1000/e1000_defines.h	269;"	d
E1000_CTRL_SWDPIN2	if_em_hw.h	1067;"	d
E1000_CTRL_SWDPIN3	dev/e1000/e1000_defines.h	272;"	d
E1000_CTRL_SWDPIN3	if_em_hw.h	1068;"	d
E1000_CTRL_SWDPIO0	dev/e1000/e1000_defines.h	273;"	d
E1000_CTRL_SWDPIO0	if_em_hw.h	1069;"	d
E1000_CTRL_SWDPIO1	if_em_hw.h	1070;"	d
E1000_CTRL_SWDPIO2	dev/e1000/e1000_defines.h	274;"	d
E1000_CTRL_SWDPIO2	if_em_hw.h	1071;"	d
E1000_CTRL_SWDPIO3	dev/e1000/e1000_defines.h	275;"	d
E1000_CTRL_SWDPIO3	if_em_hw.h	1072;"	d
E1000_CTRL_TFCE	dev/e1000/e1000_defines.h	278;"	d
E1000_CTRL_TFCE	if_em_hw.h	1075;"	d
E1000_CTRL_TME	if_em_hw.h	1053;"	d
E1000_CTRL_VME	dev/e1000/e1000_defines.h	279;"	d
E1000_CTRL_VME	if_em_hw.h	1077;"	d
E1000_CT_SHIFT	dev/e1000/e1000_defines.h	434;"	d
E1000_CT_SHIFT	if_em_hw.h	1551;"	d
E1000_DAQF	dev/e1000/e1000_regs.h	589;"	d
E1000_DC	dev/e1000/e1000_regs.h	307;"	d
E1000_DC	if_em_hw.h	711;"	d
E1000_DCA_CTRL	dev/e1000/e1000_regs.h	516;"	d
E1000_DCA_CTRL_DCA_DISABLE	dev/e1000/e1000_82575.h	354;"	d
E1000_DCA_CTRL_DCA_ENABLE	dev/e1000/e1000_82575.h	353;"	d
E1000_DCA_CTRL_DCA_MODE_CB1	dev/e1000/e1000_82575.h	356;"	d
E1000_DCA_CTRL_DCA_MODE_CB2	dev/e1000/e1000_82575.h	357;"	d
E1000_DCA_ID	dev/e1000/e1000_regs.h	515;"	d
E1000_DCA_RXCTRL	dev/e1000/e1000_regs.h	230;"	d
E1000_DCA_RXCTRL_CPUID_MASK	dev/e1000/e1000_82575.h	359;"	d
E1000_DCA_RXCTRL_CPUID_MASK_82576	dev/e1000/e1000_82575.h	372;"	d
E1000_DCA_RXCTRL_CPUID_SHIFT_82576	dev/e1000/e1000_82575.h	374;"	d
E1000_DCA_RXCTRL_DATA_DCA_EN	dev/e1000/e1000_82575.h	362;"	d
E1000_DCA_RXCTRL_DESC_DCA_EN	dev/e1000/e1000_82575.h	360;"	d
E1000_DCA_RXCTRL_DESC_RRO_EN	dev/e1000/e1000_82575.h	363;"	d
E1000_DCA_RXCTRL_HEAD_DCA_EN	dev/e1000/e1000_82575.h	361;"	d
E1000_DCA_TXCTRL	dev/e1000/e1000_regs.h	247;"	d
E1000_DCA_TXCTRL_CPUID_MASK	dev/e1000/e1000_82575.h	365;"	d
E1000_DCA_TXCTRL_CPUID_MASK_82576	dev/e1000/e1000_82575.h	371;"	d
E1000_DCA_TXCTRL_CPUID_SHIFT_82576	dev/e1000/e1000_82575.h	373;"	d
E1000_DCA_TXCTRL_DATA_RRO_EN	dev/e1000/e1000_82575.h	369;"	d
E1000_DCA_TXCTRL_DESC_DCA_EN	dev/e1000/e1000_82575.h	366;"	d
E1000_DCA_TXCTRL_DESC_RRO_EN	dev/e1000/e1000_82575.h	367;"	d
E1000_DCA_TXCTRL_TX_WB_RO_EN	dev/e1000/e1000_82575.h	368;"	d
E1000_DEV_ID_80003ES2LAN_COPPER_DPT	dev/e1000/e1000_hw.h	99;"	d
E1000_DEV_ID_80003ES2LAN_COPPER_SPT	dev/e1000/e1000_hw.h	101;"	d
E1000_DEV_ID_80003ES2LAN_SERDES_DPT	dev/e1000/e1000_hw.h	100;"	d
E1000_DEV_ID_80003ES2LAN_SERDES_SPT	dev/e1000/e1000_hw.h	102;"	d
E1000_DEV_ID_82540EM	dev/e1000/e1000_hw.h	51;"	d
E1000_DEV_ID_82540EM	if_em_hw.h	346;"	d
E1000_DEV_ID_82540EM_LOM	dev/e1000/e1000_hw.h	52;"	d
E1000_DEV_ID_82540EM_LOM	if_em_hw.h	347;"	d
E1000_DEV_ID_82540EP	dev/e1000/e1000_hw.h	54;"	d
E1000_DEV_ID_82540EP	if_em_hw.h	349;"	d
E1000_DEV_ID_82540EP_LOM	dev/e1000/e1000_hw.h	53;"	d
E1000_DEV_ID_82540EP_LOM	if_em_hw.h	348;"	d
E1000_DEV_ID_82540EP_LP	dev/e1000/e1000_hw.h	55;"	d
E1000_DEV_ID_82540EP_LP	if_em_hw.h	350;"	d
E1000_DEV_ID_82541EI	dev/e1000/e1000_hw.h	70;"	d
E1000_DEV_ID_82541EI	if_em_hw.h	359;"	d
E1000_DEV_ID_82541EI_MOBILE	dev/e1000/e1000_hw.h	71;"	d
E1000_DEV_ID_82541EI_MOBILE	if_em_hw.h	360;"	d
E1000_DEV_ID_82541ER	dev/e1000/e1000_hw.h	73;"	d
E1000_DEV_ID_82541ER	if_em_hw.h	361;"	d
E1000_DEV_ID_82541ER_LOM	dev/e1000/e1000_hw.h	72;"	d
E1000_DEV_ID_82541GI	dev/e1000/e1000_hw.h	74;"	d
E1000_DEV_ID_82541GI	if_em_hw.h	363;"	d
E1000_DEV_ID_82541GI_LF	dev/e1000/e1000_hw.h	75;"	d
E1000_DEV_ID_82541GI_MOBILE	dev/e1000/e1000_hw.h	76;"	d
E1000_DEV_ID_82541GI_MOBILE	if_em_hw.h	364;"	d
E1000_DEV_ID_82541PI	if_em_hw.h	369;"	d
E1000_DEV_ID_82542	dev/e1000/e1000_hw.h	44;"	d
E1000_DEV_ID_82542	if_em_hw.h	339;"	d
E1000_DEV_ID_82543GC_COPPER	dev/e1000/e1000_hw.h	46;"	d
E1000_DEV_ID_82543GC_COPPER	if_em_hw.h	341;"	d
E1000_DEV_ID_82543GC_FIBER	dev/e1000/e1000_hw.h	45;"	d
E1000_DEV_ID_82543GC_FIBER	if_em_hw.h	340;"	d
E1000_DEV_ID_82544EI_COPPER	dev/e1000/e1000_hw.h	47;"	d
E1000_DEV_ID_82544EI_COPPER	if_em_hw.h	342;"	d
E1000_DEV_ID_82544EI_FIBER	dev/e1000/e1000_hw.h	48;"	d
E1000_DEV_ID_82544EI_FIBER	if_em_hw.h	343;"	d
E1000_DEV_ID_82544GC_COPPER	dev/e1000/e1000_hw.h	49;"	d
E1000_DEV_ID_82544GC_COPPER	if_em_hw.h	344;"	d
E1000_DEV_ID_82544GC_LOM	dev/e1000/e1000_hw.h	50;"	d
E1000_DEV_ID_82544GC_LOM	if_em_hw.h	345;"	d
E1000_DEV_ID_82545EM_COPPER	dev/e1000/e1000_hw.h	56;"	d
E1000_DEV_ID_82545EM_COPPER	if_em_hw.h	351;"	d
E1000_DEV_ID_82545EM_FIBER	dev/e1000/e1000_hw.h	57;"	d
E1000_DEV_ID_82545EM_FIBER	if_em_hw.h	352;"	d
E1000_DEV_ID_82545GM_COPPER	dev/e1000/e1000_hw.h	58;"	d
E1000_DEV_ID_82545GM_COPPER	if_em_hw.h	353;"	d
E1000_DEV_ID_82545GM_FIBER	dev/e1000/e1000_hw.h	59;"	d
E1000_DEV_ID_82545GM_FIBER	if_em_hw.h	354;"	d
E1000_DEV_ID_82545GM_SERDES	dev/e1000/e1000_hw.h	60;"	d
E1000_DEV_ID_82545GM_SERDES	if_em_hw.h	355;"	d
E1000_DEV_ID_82546EB_COPPER	dev/e1000/e1000_hw.h	61;"	d
E1000_DEV_ID_82546EB_COPPER	if_em_hw.h	356;"	d
E1000_DEV_ID_82546EB_FIBER	dev/e1000/e1000_hw.h	62;"	d
E1000_DEV_ID_82546EB_FIBER	if_em_hw.h	357;"	d
E1000_DEV_ID_82546EB_QUAD_COPPER	dev/e1000/e1000_hw.h	63;"	d
E1000_DEV_ID_82546EB_QUAD_COPPER	if_em_hw.h	358;"	d
E1000_DEV_ID_82546GB_COPPER	dev/e1000/e1000_hw.h	64;"	d
E1000_DEV_ID_82546GB_COPPER	if_em_hw.h	365;"	d
E1000_DEV_ID_82546GB_FIBER	dev/e1000/e1000_hw.h	65;"	d
E1000_DEV_ID_82546GB_FIBER	if_em_hw.h	366;"	d
E1000_DEV_ID_82546GB_PCIE	dev/e1000/e1000_hw.h	67;"	d
E1000_DEV_ID_82546GB_QUAD_COPPER	dev/e1000/e1000_hw.h	68;"	d
E1000_DEV_ID_82546GB_QUAD_COPPER_KSP3	dev/e1000/e1000_hw.h	69;"	d
E1000_DEV_ID_82546GB_SERDES	dev/e1000/e1000_hw.h	66;"	d
E1000_DEV_ID_82546GB_SERDES	if_em_hw.h	367;"	d
E1000_DEV_ID_82547EI	dev/e1000/e1000_hw.h	77;"	d
E1000_DEV_ID_82547EI	if_em_hw.h	368;"	d
E1000_DEV_ID_82547EI_MOBILE	dev/e1000/e1000_hw.h	78;"	d
E1000_DEV_ID_82547GI	dev/e1000/e1000_hw.h	79;"	d
E1000_DEV_ID_82547GI	if_em_hw.h	362;"	d
E1000_DEV_ID_82571EB_COPPER	dev/e1000/e1000_hw.h	80;"	d
E1000_DEV_ID_82571EB_FIBER	dev/e1000/e1000_hw.h	81;"	d
E1000_DEV_ID_82571EB_QUAD_COPPER	dev/e1000/e1000_hw.h	85;"	d
E1000_DEV_ID_82571EB_QUAD_COPPER_LP	dev/e1000/e1000_hw.h	88;"	d
E1000_DEV_ID_82571EB_QUAD_FIBER	dev/e1000/e1000_hw.h	87;"	d
E1000_DEV_ID_82571EB_SERDES	dev/e1000/e1000_hw.h	82;"	d
E1000_DEV_ID_82571EB_SERDES_DUAL	dev/e1000/e1000_hw.h	83;"	d
E1000_DEV_ID_82571EB_SERDES_QUAD	dev/e1000/e1000_hw.h	84;"	d
E1000_DEV_ID_82571PT_QUAD_COPPER	dev/e1000/e1000_hw.h	86;"	d
E1000_DEV_ID_82572EI	dev/e1000/e1000_hw.h	92;"	d
E1000_DEV_ID_82572EI_COPPER	dev/e1000/e1000_hw.h	89;"	d
E1000_DEV_ID_82572EI_FIBER	dev/e1000/e1000_hw.h	90;"	d
E1000_DEV_ID_82572EI_SERDES	dev/e1000/e1000_hw.h	91;"	d
E1000_DEV_ID_82573E	dev/e1000/e1000_hw.h	93;"	d
E1000_DEV_ID_82573E_IAMT	dev/e1000/e1000_hw.h	94;"	d
E1000_DEV_ID_82573L	dev/e1000/e1000_hw.h	95;"	d
E1000_DEV_ID_82574L	dev/e1000/e1000_hw.h	96;"	d
E1000_DEV_ID_82574LA	dev/e1000/e1000_hw.h	97;"	d
E1000_DEV_ID_82575EB_COPPER	dev/e1000/e1000_hw.h	148;"	d
E1000_DEV_ID_82575EB_FIBER_SERDES	dev/e1000/e1000_hw.h	149;"	d
E1000_DEV_ID_82575GB_QUAD_COPPER	dev/e1000/e1000_hw.h	150;"	d
E1000_DEV_ID_82576	dev/e1000/e1000_hw.h	136;"	d
E1000_DEV_ID_82576_FIBER	dev/e1000/e1000_hw.h	137;"	d
E1000_DEV_ID_82576_NS	dev/e1000/e1000_hw.h	141;"	d
E1000_DEV_ID_82576_NS_SERDES	dev/e1000/e1000_hw.h	142;"	d
E1000_DEV_ID_82576_QUAD_COPPER	dev/e1000/e1000_hw.h	139;"	d
E1000_DEV_ID_82576_QUAD_COPPER_ET2	dev/e1000/e1000_hw.h	140;"	d
E1000_DEV_ID_82576_SERDES	dev/e1000/e1000_hw.h	138;"	d
E1000_DEV_ID_82576_SERDES_QUAD	dev/e1000/e1000_hw.h	143;"	d
E1000_DEV_ID_82576_VF	dev/e1000/e1000_hw.h	144;"	d
E1000_DEV_ID_82576_VF	dev/e1000/e1000_vf.h	44;"	d
E1000_DEV_ID_82576_VF_HV	dev/e1000/e1000_hw.h	145;"	d
E1000_DEV_ID_82580_COPPER	dev/e1000/e1000_hw.h	151;"	d
E1000_DEV_ID_82580_COPPER_DUAL	dev/e1000/e1000_hw.h	155;"	d
E1000_DEV_ID_82580_FIBER	dev/e1000/e1000_hw.h	152;"	d
E1000_DEV_ID_82580_QUAD_FIBER	dev/e1000/e1000_hw.h	156;"	d
E1000_DEV_ID_82580_SERDES	dev/e1000/e1000_hw.h	153;"	d
E1000_DEV_ID_82580_SGMII	dev/e1000/e1000_hw.h	154;"	d
E1000_DEV_ID_82583V	dev/e1000/e1000_hw.h	98;"	d
E1000_DEV_ID_DH89XXCC_BACKPLANE	dev/e1000/e1000_hw.h	171;"	d
E1000_DEV_ID_DH89XXCC_SERDES	dev/e1000/e1000_hw.h	170;"	d
E1000_DEV_ID_DH89XXCC_SFP	dev/e1000/e1000_hw.h	172;"	d
E1000_DEV_ID_DH89XXCC_SGMII	dev/e1000/e1000_hw.h	169;"	d
E1000_DEV_ID_I210_COPPER	dev/e1000/e1000_hw.h	162;"	d
E1000_DEV_ID_I210_COPPER_IT	dev/e1000/e1000_hw.h	164;"	d
E1000_DEV_ID_I210_COPPER_OEM1	dev/e1000/e1000_hw.h	163;"	d
E1000_DEV_ID_I210_FIBER	dev/e1000/e1000_hw.h	165;"	d
E1000_DEV_ID_I210_SERDES	dev/e1000/e1000_hw.h	166;"	d
E1000_DEV_ID_I210_SGMII	dev/e1000/e1000_hw.h	167;"	d
E1000_DEV_ID_I211_COPPER	dev/e1000/e1000_hw.h	168;"	d
E1000_DEV_ID_I350_COPPER	dev/e1000/e1000_hw.h	157;"	d
E1000_DEV_ID_I350_DA4	dev/e1000/e1000_hw.h	161;"	d
E1000_DEV_ID_I350_FIBER	dev/e1000/e1000_hw.h	158;"	d
E1000_DEV_ID_I350_SERDES	dev/e1000/e1000_hw.h	159;"	d
E1000_DEV_ID_I350_SGMII	dev/e1000/e1000_hw.h	160;"	d
E1000_DEV_ID_I350_VF	dev/e1000/e1000_hw.h	146;"	d
E1000_DEV_ID_I350_VF	dev/e1000/e1000_vf.h	45;"	d
E1000_DEV_ID_I350_VF_HV	dev/e1000/e1000_hw.h	147;"	d
E1000_DEV_ID_ICH10_D_BM_LF	dev/e1000/e1000_hw.h	124;"	d
E1000_DEV_ID_ICH10_D_BM_LM	dev/e1000/e1000_hw.h	123;"	d
E1000_DEV_ID_ICH10_D_BM_V	dev/e1000/e1000_hw.h	125;"	d
E1000_DEV_ID_ICH10_R_BM_LF	dev/e1000/e1000_hw.h	121;"	d
E1000_DEV_ID_ICH10_R_BM_LM	dev/e1000/e1000_hw.h	120;"	d
E1000_DEV_ID_ICH10_R_BM_V	dev/e1000/e1000_hw.h	122;"	d
E1000_DEV_ID_ICH8_82567V_3	dev/e1000/e1000_hw.h	103;"	d
E1000_DEV_ID_ICH8_IFE	dev/e1000/e1000_hw.h	107;"	d
E1000_DEV_ID_ICH8_IFE_G	dev/e1000/e1000_hw.h	109;"	d
E1000_DEV_ID_ICH8_IFE_GT	dev/e1000/e1000_hw.h	108;"	d
E1000_DEV_ID_ICH8_IGP_AMT	dev/e1000/e1000_hw.h	105;"	d
E1000_DEV_ID_ICH8_IGP_C	dev/e1000/e1000_hw.h	106;"	d
E1000_DEV_ID_ICH8_IGP_M	dev/e1000/e1000_hw.h	110;"	d
E1000_DEV_ID_ICH8_IGP_M_AMT	dev/e1000/e1000_hw.h	104;"	d
E1000_DEV_ID_ICH9_BM	dev/e1000/e1000_hw.h	115;"	d
E1000_DEV_ID_ICH9_IFE	dev/e1000/e1000_hw.h	117;"	d
E1000_DEV_ID_ICH9_IFE_G	dev/e1000/e1000_hw.h	119;"	d
E1000_DEV_ID_ICH9_IFE_GT	dev/e1000/e1000_hw.h	118;"	d
E1000_DEV_ID_ICH9_IGP_AMT	dev/e1000/e1000_hw.h	114;"	d
E1000_DEV_ID_ICH9_IGP_C	dev/e1000/e1000_hw.h	116;"	d
E1000_DEV_ID_ICH9_IGP_M	dev/e1000/e1000_hw.h	111;"	d
E1000_DEV_ID_ICH9_IGP_M_AMT	dev/e1000/e1000_hw.h	112;"	d
E1000_DEV_ID_ICH9_IGP_M_V	dev/e1000/e1000_hw.h	113;"	d
E1000_DEV_ID_PCH2_LV_LM	dev/e1000/e1000_hw.h	130;"	d
E1000_DEV_ID_PCH2_LV_V	dev/e1000/e1000_hw.h	131;"	d
E1000_DEV_ID_PCH_D_HV_DC	dev/e1000/e1000_hw.h	129;"	d
E1000_DEV_ID_PCH_D_HV_DM	dev/e1000/e1000_hw.h	128;"	d
E1000_DEV_ID_PCH_LPTLP_I218_LM	dev/e1000/e1000_hw.h	134;"	d
E1000_DEV_ID_PCH_LPTLP_I218_V	dev/e1000/e1000_hw.h	135;"	d
E1000_DEV_ID_PCH_LPT_I217_LM	dev/e1000/e1000_hw.h	132;"	d
E1000_DEV_ID_PCH_LPT_I217_V	dev/e1000/e1000_hw.h	133;"	d
E1000_DEV_ID_PCH_M_HV_LC	dev/e1000/e1000_hw.h	127;"	d
E1000_DEV_ID_PCH_M_HV_LM	dev/e1000/e1000_hw.h	126;"	d
E1000_DIVIDE_ROUND_UP	dev/e1000/e1000_api.h	166;"	d
E1000_DMACR	dev/e1000/e1000_regs.h	639;"	d
E1000_DMACR_DC_BMC2OSW_EN	dev/e1000/e1000_defines.h	1370;"	d
E1000_DMACR_DMACTHR_MASK	dev/e1000/e1000_defines.h	1363;"	d
E1000_DMACR_DMACTHR_SHIFT	dev/e1000/e1000_defines.h	1364;"	d
E1000_DMACR_DMACWT_MASK	dev/e1000/e1000_defines.h	1361;"	d
E1000_DMACR_DMAC_EN	dev/e1000/e1000_defines.h	1368;"	d
E1000_DMACR_DMAC_LX_MASK	dev/e1000/e1000_defines.h	1366;"	d
E1000_DMACR_DMAC_LX_SHIFT	dev/e1000/e1000_defines.h	1367;"	d
E1000_DMCCNT	dev/e1000/e1000_regs.h	643;"	d
E1000_DMCCNT_CCOUNT_MASK	dev/e1000/e1000_defines.h	1383;"	d
E1000_DMCRTRH	dev/e1000/e1000_regs.h	642;"	d
E1000_DMCRTRH_LRPRCW	dev/e1000/e1000_defines.h	1380;"	d
E1000_DMCRTRH_UTRESH_MASK	dev/e1000/e1000_defines.h	1378;"	d
E1000_DMCTLX	dev/e1000/e1000_regs.h	641;"	d
E1000_DMCTLX_TTLX_MASK	dev/e1000/e1000_defines.h	1375;"	d
E1000_DMCTXTH	dev/e1000/e1000_regs.h	640;"	d
E1000_DMCTXTH_DMCTTHR_MASK	dev/e1000/e1000_defines.h	1373;"	d
E1000_DOBFFCTL	dev/e1000/e1000_regs.h	673;"	d
E1000_DOBFFCTL_EXIT_ACT_MASK	dev/e1000/e1000_defines.h	1395;"	d
E1000_DOBFFCTL_OBFFTHR_MASK	dev/e1000/e1000_defines.h	1394;"	d
E1000_DTXCTL	dev/e1000/e1000_regs.h	289;"	d
E1000_DTXCTL_8023LL	dev/e1000/e1000_82575.h	465;"	d
E1000_DTXCTL_MDP_EN	dev/e1000/e1000_82575.h	468;"	d
E1000_DTXCTL_OOS_ENABLE	dev/e1000/e1000_82575.h	467;"	d
E1000_DTXCTL_SPOOF_INT	dev/e1000/e1000_82575.h	469;"	d
E1000_DTXCTL_VLAN_ADDED	dev/e1000/e1000_82575.h	466;"	d
E1000_DTXMXSZRQ	dev/e1000/e1000_regs.h	293;"	d
E1000_DTXSWC	dev/e1000/e1000_regs.h	541;"	d
E1000_DTXSWC_LLE_MASK	dev/e1000/e1000_82575.h	409;"	d
E1000_DTXSWC_LLE_SHIFT	dev/e1000/e1000_82575.h	411;"	d
E1000_DTXSWC_MAC_SPOOF_MASK	dev/e1000/e1000_82575.h	407;"	d
E1000_DTXSWC_VLAN_SPOOF_MASK	dev/e1000/e1000_82575.h	408;"	d
E1000_DTXSWC_VLAN_SPOOF_SHIFT	dev/e1000/e1000_82575.h	410;"	d
E1000_DTXSWC_VMDQ_LOOPBACK_EN	dev/e1000/e1000_82575.h	412;"	d
E1000_DTXTCPFLGH	dev/e1000/e1000_regs.h	291;"	d
E1000_DTXTCPFLGL	dev/e1000/e1000_regs.h	290;"	d
E1000_DVMOLR	dev/e1000/e1000_regs.h	564;"	d
E1000_DVMOLR_HIDVLAN	dev/e1000/e1000_82575.h	437;"	d
E1000_DVMOLR_STRCRC	dev/e1000/e1000_82575.h	439;"	d
E1000_DVMOLR_STRVLAN	dev/e1000/e1000_82575.h	438;"	d
E1000_ECOL	dev/e1000/e1000_regs.h	303;"	d
E1000_ECOL	if_em_hw.h	707;"	d
E1000_EEARBC	dev/e1000/e1000_regs.h	105;"	d
E1000_EECD	dev/e1000/e1000_regs.h	41;"	d
E1000_EECD	if_em_hw.h	651;"	d
E1000_EECD_ABORT	dev/e1000/e1000_defines.h	973;"	d
E1000_EECD_ADDR_BITS	dev/e1000/e1000_defines.h	977;"	d
E1000_EECD_ADDR_BITS	if_em_hw.h	1117;"	d
E1000_EECD_AUPDEN	dev/e1000/e1000_defines.h	986;"	d
E1000_EECD_AUTO_RD	dev/e1000/e1000_defines.h	982;"	d
E1000_EECD_BLOCKED	dev/e1000/e1000_defines.h	972;"	d
E1000_EECD_CS	dev/e1000/e1000_defines.h	965;"	d
E1000_EECD_CS	if_em_hw.h	1106;"	d
E1000_EECD_DI	dev/e1000/e1000_defines.h	966;"	d
E1000_EECD_DI	if_em_hw.h	1107;"	d
E1000_EECD_DO	dev/e1000/e1000_defines.h	967;"	d
E1000_EECD_DO	if_em_hw.h	1108;"	d
E1000_EECD_ERROR_CLR	dev/e1000/e1000_defines.h	975;"	d
E1000_EECD_FLASH_DETECTED_I210	dev/e1000/e1000_defines.h	991;"	d
E1000_EECD_FLUDONE_I210	dev/e1000/e1000_defines.h	990;"	d
E1000_EECD_FLUPD	dev/e1000/e1000_defines.h	985;"	d
E1000_EECD_FLUPD_I210	dev/e1000/e1000_defines.h	989;"	d
E1000_EECD_FWE_DIS	if_em_hw.h	1110;"	d
E1000_EECD_FWE_EN	if_em_hw.h	1111;"	d
E1000_EECD_FWE_MASK	if_em_hw.h	1109;"	d
E1000_EECD_FWE_SHIFT	if_em_hw.h	1112;"	d
E1000_EECD_GNT	dev/e1000/e1000_defines.h	969;"	d
E1000_EECD_GNT	if_em_hw.h	1114;"	d
E1000_EECD_PRES	dev/e1000/e1000_defines.h	970;"	d
E1000_EECD_PRES	if_em_hw.h	1115;"	d
E1000_EECD_REQ	dev/e1000/e1000_defines.h	968;"	d
E1000_EECD_REQ	if_em_hw.h	1113;"	d
E1000_EECD_SEC1VAL	dev/e1000/e1000_defines.h	987;"	d
E1000_EECD_SEC1VAL_I210	dev/e1000/e1000_defines.h	992;"	d
E1000_EECD_SEC1VAL_VALID_MASK	dev/e1000/e1000_defines.h	988;"	d
E1000_EECD_SIZE	dev/e1000/e1000_defines.h	971;"	d
E1000_EECD_SIZE	if_em_hw.h	1116;"	d
E1000_EECD_SIZE_EX_MASK	dev/e1000/e1000_defines.h	983;"	d
E1000_EECD_SIZE_EX_SHIFT	dev/e1000/e1000_defines.h	984;"	d
E1000_EECD_SK	dev/e1000/e1000_defines.h	964;"	d
E1000_EECD_SK	if_em_hw.h	1105;"	d
E1000_EECD_TIMEOUT	dev/e1000/e1000_defines.h	974;"	d
E1000_EECD_TYPE	dev/e1000/e1000_defines.h	978;"	d
E1000_EECD_TYPE	if_em_hw.h	1119;"	d
E1000_EEER	dev/e1000/e1000_regs.h	662;"	d
E1000_EEER_EEE_NEG	dev/e1000/e1000_defines.h	821;"	d
E1000_EEER_LPI_FC	dev/e1000/e1000_defines.h	819;"	d
E1000_EEER_RX_LPI_EN	dev/e1000/e1000_defines.h	818;"	d
E1000_EEER_RX_LPI_STATUS	dev/e1000/e1000_defines.h	822;"	d
E1000_EEER_TX_LPI_EN	dev/e1000/e1000_defines.h	817;"	d
E1000_EEER_TX_LPI_STATUS	dev/e1000/e1000_defines.h	823;"	d
E1000_EEE_RX_LPI_RCVD	dev/e1000/e1000_ich8lan.h	230;"	d
E1000_EEE_SU	dev/e1000/e1000_regs.h	663;"	d
E1000_EEE_SU_LPI_CLK_STP	dev/e1000/e1000_defines.h	824;"	d
E1000_EEE_TX_LPI_RCVD	dev/e1000/e1000_ich8lan.h	231;"	d
E1000_EEMNGCTL	dev/e1000/e1000_regs.h	104;"	d
E1000_EEPROM_FLASH_SIZE_WORD	dev/e1000/e1000_i210.h	50;"	d
E1000_EEPROM_GRANT_ATTEMPTS	if_em_hw.h	1121;"	d
E1000_EEPROM_INIT_CTRL_WORD_2	dev/e1000/e1000_regs.h	48;"	d
E1000_EEPROM_LED_LOGIC	if_em_hw.h	1045;"	d
E1000_EEPROM_PCIE_CTRL_WORD_2	dev/e1000/e1000_regs.h	49;"	d
E1000_EEPROM_PCS_AUTONEG_DISABLE_BIT	dev/e1000/e1000_82575.h	471;"	d
E1000_EEPROM_SWDPIN0	if_em_hw.h	1044;"	d
E1000_EERD	dev/e1000/e1000_regs.h	42;"	d
E1000_EERD	if_em_hw.h	652;"	d
E1000_EERD_ADDR_MASK	if_em_hw.h	1128;"	d
E1000_EERD_ADDR_SHIFT	if_em_hw.h	1127;"	d
E1000_EERD_DATA_MASK	if_em_hw.h	1130;"	d
E1000_EERD_DATA_SHIFT	if_em_hw.h	1129;"	d
E1000_EERD_DONE	if_em_hw.h	1126;"	d
E1000_EERD_EEWR_MAX_COUNT	dev/e1000/e1000_defines.h	994;"	d
E1000_EERD_START	if_em_hw.h	1125;"	d
E1000_EEWR	dev/e1000/e1000_regs.h	107;"	d
E1000_EIAC	dev/e1000/e1000_regs.h	86;"	d
E1000_EIAC	dev/e1000/e1000_vf.h	75;"	d
E1000_EIAC_82574	dev/e1000/e1000_82571.h	50;"	d
E1000_EIAC_MASK_82574	dev/e1000/e1000_82571.h	51;"	d
E1000_EIAM	dev/e1000/e1000_regs.h	87;"	d
E1000_EIAM	dev/e1000/e1000_vf.h	76;"	d
E1000_EICR	dev/e1000/e1000_regs.h	81;"	d
E1000_EICR	dev/e1000/e1000_vf.h	70;"	d
E1000_EICR_OTHER	dev/e1000/e1000_defines.h	576;"	d
E1000_EICR_RX_QUEUE	dev/e1000/e1000_82575.h	166;"	d
E1000_EICR_RX_QUEUE0	dev/e1000/e1000_defines.h	567;"	d
E1000_EICR_RX_QUEUE1	dev/e1000/e1000_defines.h	568;"	d
E1000_EICR_RX_QUEUE2	dev/e1000/e1000_defines.h	569;"	d
E1000_EICR_RX_QUEUE3	dev/e1000/e1000_defines.h	570;"	d
E1000_EICR_TCP_TIMER	dev/e1000/e1000_defines.h	575;"	d
E1000_EICR_TX_QUEUE	dev/e1000/e1000_82575.h	160;"	d
E1000_EICR_TX_QUEUE0	dev/e1000/e1000_defines.h	571;"	d
E1000_EICR_TX_QUEUE1	dev/e1000/e1000_defines.h	572;"	d
E1000_EICR_TX_QUEUE2	dev/e1000/e1000_defines.h	573;"	d
E1000_EICR_TX_QUEUE3	dev/e1000/e1000_defines.h	574;"	d
E1000_EICS	dev/e1000/e1000_regs.h	83;"	d
E1000_EICS	dev/e1000/e1000_vf.h	72;"	d
E1000_EICS_OTHER	dev/e1000/e1000_defines.h	648;"	d
E1000_EICS_RX_QUEUE0	dev/e1000/e1000_defines.h	639;"	d
E1000_EICS_RX_QUEUE1	dev/e1000/e1000_defines.h	640;"	d
E1000_EICS_RX_QUEUE2	dev/e1000/e1000_defines.h	641;"	d
E1000_EICS_RX_QUEUE3	dev/e1000/e1000_defines.h	642;"	d
E1000_EICS_TCP_TIMER	dev/e1000/e1000_defines.h	647;"	d
E1000_EICS_TX_QUEUE0	dev/e1000/e1000_defines.h	643;"	d
E1000_EICS_TX_QUEUE1	dev/e1000/e1000_defines.h	644;"	d
E1000_EICS_TX_QUEUE2	dev/e1000/e1000_defines.h	645;"	d
E1000_EICS_TX_QUEUE3	dev/e1000/e1000_defines.h	646;"	d
E1000_EIMC	dev/e1000/e1000_regs.h	85;"	d
E1000_EIMC	dev/e1000/e1000_vf.h	74;"	d
E1000_EIMS	dev/e1000/e1000_regs.h	84;"	d
E1000_EIMS	dev/e1000/e1000_vf.h	73;"	d
E1000_EIMS_OTHER	dev/e1000/e1000_defines.h	631;"	d
E1000_EIMS_RX_QUEUE	dev/e1000/e1000_82575.h	172;"	d
E1000_EIMS_RX_QUEUE0	dev/e1000/e1000_defines.h	622;"	d
E1000_EIMS_RX_QUEUE1	dev/e1000/e1000_defines.h	623;"	d
E1000_EIMS_RX_QUEUE2	dev/e1000/e1000_defines.h	624;"	d
E1000_EIMS_RX_QUEUE3	dev/e1000/e1000_defines.h	625;"	d
E1000_EIMS_TCP_TIMER	dev/e1000/e1000_defines.h	630;"	d
E1000_EIMS_TX_QUEUE	dev/e1000/e1000_82575.h	173;"	d
E1000_EIMS_TX_QUEUE0	dev/e1000/e1000_defines.h	626;"	d
E1000_EIMS_TX_QUEUE1	dev/e1000/e1000_defines.h	627;"	d
E1000_EIMS_TX_QUEUE2	dev/e1000/e1000_defines.h	628;"	d
E1000_EIMS_TX_QUEUE3	dev/e1000/e1000_defines.h	629;"	d
E1000_EITR	dev/e1000/e1000_regs.h	82;"	d
E1000_EITR	dev/e1000/e1000_vf.h	71;"	d
E1000_EITR_82574	dev/e1000/e1000_82571.h	48;"	d
E1000_EITR_CNT_IGNR	dev/e1000/e1000_defines.h	652;"	d
E1000_EITR_ITR_INT_MASK	dev/e1000/e1000_defines.h	650;"	d
E1000_ENABLE_SERDES_LOOPBACK	dev/e1000/e1000_defines.h	303;"	d
E1000_ERR_CONFIG	dev/e1000/e1000_defines.h	691;"	d
E1000_ERR_CONFIG	if_em_hw.h	253;"	d
E1000_ERR_EEPROM	if_em_hw.h	251;"	d
E1000_ERR_HOST_INTERFACE_COMMAND	dev/e1000/e1000_defines.h	697;"	d
E1000_ERR_I2C	dev/e1000/e1000_defines.h	705;"	d
E1000_ERR_INVALID_ARGUMENT	dev/e1000/e1000_defines.h	702;"	d
E1000_ERR_INVM_VALUE_NOT_FOUND	dev/e1000/e1000_defines.h	706;"	d
E1000_ERR_MAC_INIT	dev/e1000/e1000_defines.h	693;"	d
E1000_ERR_MAC_TYPE	if_em_hw.h	255;"	d
E1000_ERR_MASTER_REQUESTS_PENDING	dev/e1000/e1000_defines.h	696;"	d
E1000_ERR_MBX	dev/e1000/e1000_defines.h	701;"	d
E1000_ERR_NO_SPACE	dev/e1000/e1000_defines.h	703;"	d
E1000_ERR_NVM	dev/e1000/e1000_defines.h	689;"	d
E1000_ERR_NVM_PBA_SECTION	dev/e1000/e1000_defines.h	704;"	d
E1000_ERR_PARAM	dev/e1000/e1000_defines.h	692;"	d
E1000_ERR_PARAM	if_em_hw.h	254;"	d
E1000_ERR_PHY	dev/e1000/e1000_defines.h	690;"	d
E1000_ERR_PHY	if_em_hw.h	252;"	d
E1000_ERR_PHY_TYPE	dev/e1000/e1000_defines.h	694;"	d
E1000_ERR_PHY_TYPE	if_em_hw.h	256;"	d
E1000_ERR_RESET	dev/e1000/e1000_defines.h	695;"	d
E1000_ERR_SWFW_SYNC	dev/e1000/e1000_defines.h	699;"	d
E1000_ERT	dev/e1000/e1000_regs.h	132;"	d
E1000_ETQF	dev/e1000/e1000_regs.h	594;"	d
E1000_ETQF_1588	dev/e1000/e1000_82575.h	384;"	d
E1000_ETQF_FILTER_EAPOL	dev/e1000/e1000_82575.h	394;"	d
E1000_ETQF_FILTER_ENABLE	dev/e1000/e1000_82575.h	382;"	d
E1000_ETQF_IMM_INT	dev/e1000/e1000_82575.h	383;"	d
E1000_ETQF_QUEUE_ENABLE	dev/e1000/e1000_82575.h	385;"	d
E1000_EXTCNF_CTRL	dev/e1000/e1000_regs.h	97;"	d
E1000_EXTCNF_CTRL_EXT_CNF_POINTER_MASK	dev/e1000/e1000_defines.h	468;"	d
E1000_EXTCNF_CTRL_EXT_CNF_POINTER_SHIFT	dev/e1000/e1000_defines.h	469;"	d
E1000_EXTCNF_CTRL_GATE_PHY_CFG	dev/e1000/e1000_defines.h	465;"	d
E1000_EXTCNF_CTRL_LCD_WRITE_ENABLE	dev/e1000/e1000_defines.h	462;"	d
E1000_EXTCNF_CTRL_MDIO_SW_OWNERSHIP	dev/e1000/e1000_defines.h	461;"	d
E1000_EXTCNF_CTRL_OEM_WRITE_ENABLE	dev/e1000/e1000_defines.h	463;"	d
E1000_EXTCNF_CTRL_SWFLAG	dev/e1000/e1000_defines.h	464;"	d
E1000_EXTCNF_SIZE	dev/e1000/e1000_regs.h	98;"	d
E1000_EXTCNF_SIZE_EXT_PCIE_LENGTH_MASK	dev/e1000/e1000_defines.h	466;"	d
E1000_EXTCNF_SIZE_EXT_PCIE_LENGTH_SHIFT	dev/e1000/e1000_defines.h	467;"	d
E1000_FACTPS	dev/e1000/e1000_regs.h	510;"	d
E1000_FACTPS_MNGCG	dev/e1000/e1000_manage.h	60;"	d
E1000_FCAH	dev/e1000/e1000_regs.h	57;"	d
E1000_FCAH	if_em_hw.h	657;"	d
E1000_FCAL	dev/e1000/e1000_regs.h	56;"	d
E1000_FCAL	if_em_hw.h	656;"	d
E1000_FCRTC	dev/e1000/e1000_regs.h	644;"	d
E1000_FCRTC_RTH_COAL_MASK	dev/e1000/e1000_defines.h	1386;"	d
E1000_FCRTC_RTH_COAL_SHIFT	dev/e1000/e1000_defines.h	1387;"	d
E1000_FCRTH	dev/e1000/e1000_regs.h	134;"	d
E1000_FCRTH	if_em_hw.h	676;"	d
E1000_FCRTH_RTH	dev/e1000/e1000_defines.h	723;"	d
E1000_FCRTH_RTH	if_em_hw.h	1331;"	d
E1000_FCRTH_XFCE	if_em_hw.h	1332;"	d
E1000_FCRTL	dev/e1000/e1000_regs.h	133;"	d
E1000_FCRTL	if_em_hw.h	675;"	d
E1000_FCRTL_RTL	dev/e1000/e1000_defines.h	724;"	d
E1000_FCRTL_RTL	if_em_hw.h	1333;"	d
E1000_FCRTL_XONE	dev/e1000/e1000_defines.h	725;"	d
E1000_FCRTL_XONE	if_em_hw.h	1334;"	d
E1000_FCRTV	dev/e1000/e1000_regs.h	142;"	d
E1000_FCRTV_PCH	dev/e1000/e1000_ich8lan.h	158;"	d
E1000_FCRUC	dev/e1000/e1000_regs.h	316;"	d
E1000_FCRUC	if_em_hw.h	720;"	d
E1000_FCT	dev/e1000/e1000_regs.h	63;"	d
E1000_FCT	if_em_hw.h	658;"	d
E1000_FCTTV	dev/e1000/e1000_regs.h	77;"	d
E1000_FCTTV	if_em_hw.h	666;"	d
E1000_FDX_COLLISION_DISTANCE	if_em_hw.h	1553;"	d
E1000_FEXTNVM	dev/e1000/e1000_regs.h	58;"	d
E1000_FEXTNVM3	dev/e1000/e1000_regs.h	59;"	d
E1000_FEXTNVM3_PHY_CFG_COUNTER_50MSEC	dev/e1000/e1000_ich8lan.h	94;"	d
E1000_FEXTNVM3_PHY_CFG_COUNTER_MASK	dev/e1000/e1000_ich8lan.h	93;"	d
E1000_FEXTNVM4	dev/e1000/e1000_regs.h	60;"	d
E1000_FEXTNVM4_BEACON_DURATION_16USEC	dev/e1000/e1000_ich8lan.h	98;"	d
E1000_FEXTNVM4_BEACON_DURATION_8USEC	dev/e1000/e1000_ich8lan.h	97;"	d
E1000_FEXTNVM4_BEACON_DURATION_MASK	dev/e1000/e1000_ich8lan.h	96;"	d
E1000_FEXTNVM6	dev/e1000/e1000_regs.h	61;"	d
E1000_FEXTNVM6_REQ_PLL_CLK	dev/e1000/e1000_ich8lan.h	100;"	d
E1000_FEXTNVM7	dev/e1000/e1000_regs.h	62;"	d
E1000_FEXTNVM_SW_CONFIG	dev/e1000/e1000_ich8lan.h	90;"	d
E1000_FEXTNVM_SW_CONFIG_ICH8M	dev/e1000/e1000_ich8lan.h	91;"	d
E1000_FFLT	dev/e1000/e1000_regs.h	485;"	d
E1000_FFLT	if_em_hw.h	772;"	d
E1000_FFLT_DBG	dev/e1000/e1000_regs.h	518;"	d
E1000_FFLT_REG	dev/e1000/e1000_regs.h	273;"	d
E1000_FFLT_SIZE	if_em_hw.h	632;"	d
E1000_FFMT	dev/e1000/e1000_regs.h	487;"	d
E1000_FFMT	if_em_hw.h	773;"	d
E1000_FFMT_REG	dev/e1000/e1000_regs.h	271;"	d
E1000_FFMT_SIZE	if_em_hw.h	633;"	d
E1000_FFVT	dev/e1000/e1000_regs.h	488;"	d
E1000_FFVT	if_em_hw.h	774;"	d
E1000_FFVT_REG	dev/e1000/e1000_regs.h	272;"	d
E1000_FFVT_SIZE	if_em_hw.h	634;"	d
E1000_FHFT	dev/e1000/e1000_regs.h	491;"	d
E1000_FHFT_EXT	dev/e1000/e1000_regs.h	493;"	d
E1000_FLA	dev/e1000/e1000_regs.h	44;"	d
E1000_FLA	if_em_hw.h	654;"	d
E1000_FLASHT	dev/e1000/e1000_regs.h	106;"	d
E1000_FLASH_UPDATES	dev/e1000/e1000_defines.h	1013;"	d
E1000_FLEXIBLE_FILTER_COUNT_MAX	if_em_hw.h	627;"	d
E1000_FLEXIBLE_FILTER_SIZE_MAX	if_em_hw.h	630;"	d
E1000_FLOP	dev/e1000/e1000_regs.h	111;"	d
E1000_FLSWCNT	dev/e1000/e1000_regs.h	110;"	d
E1000_FLSWCTL	dev/e1000/e1000_regs.h	108;"	d
E1000_FLSWDATA	dev/e1000/e1000_regs.h	109;"	d
E1000_FLUDONE_ATTEMPTS	dev/e1000/e1000_defines.h	993;"	d
E1000_FRTIMER	dev/e1000/e1000_regs.h	124;"	d
E1000_FTQF	dev/e1000/e1000_regs.h	591;"	d
E1000_FTQF_1588_TIME_STAMP	dev/e1000/e1000_82575.h	397;"	d
E1000_FTQF_MASK	dev/e1000/e1000_82575.h	398;"	d
E1000_FTQF_MASK_DEST_ADDR_BP	dev/e1000/e1000_82575.h	401;"	d
E1000_FTQF_MASK_PROTO_BP	dev/e1000/e1000_82575.h	399;"	d
E1000_FTQF_MASK_SOURCE_ADDR_BP	dev/e1000/e1000_82575.h	400;"	d
E1000_FTQF_MASK_SOURCE_PORT_BP	dev/e1000/e1000_82575.h	402;"	d
E1000_FTQF_VF_BP	dev/e1000/e1000_82575.h	396;"	d
E1000_FUNC_0	dev/e1000/e1000_hw.h	180;"	d
E1000_FUNC_1	dev/e1000/e1000_hw.h	181;"	d
E1000_FUNC_2	dev/e1000/e1000_hw.h	182;"	d
E1000_FUNC_3	dev/e1000/e1000_hw.h	183;"	d
E1000_FWSM	dev/e1000/e1000_regs.h	512;"	d
E1000_FWSM_FW_VALID	dev/e1000/e1000_manage.h	64;"	d
E1000_FWSM_HI_EN_ONLY_MODE	dev/e1000/e1000_manage.h	65;"	d
E1000_FWSM_MODE_MASK	dev/e1000/e1000_manage.h	62;"	d
E1000_FWSM_MODE_SHIFT	dev/e1000/e1000_manage.h	63;"	d
E1000_FWSM_WLOCK_MAC_MASK	dev/e1000/e1000_ich8lan.h	71;"	d
E1000_FWSM_WLOCK_MAC_SHIFT	dev/e1000/e1000_ich8lan.h	72;"	d
E1000_FWSTS	dev/e1000/e1000_regs.h	520;"	d
E1000_FWSTS_FWRI	dev/e1000/e1000_defines.h	1411;"	d
E1000_GCR	dev/e1000/e1000_regs.h	504;"	d
E1000_GCR2	dev/e1000/e1000_regs.h	505;"	d
E1000_GCR_CAP_VER2	dev/e1000/e1000_defines.h	835;"	d
E1000_GCR_CMPL_TMOUT_10ms	dev/e1000/e1000_defines.h	833;"	d
E1000_GCR_CMPL_TMOUT_MASK	dev/e1000/e1000_defines.h	832;"	d
E1000_GCR_CMPL_TMOUT_RESEND	dev/e1000/e1000_defines.h	834;"	d
E1000_GCR_L1_ACT_WITHOUT_L0S_RX	dev/e1000/e1000_82571.h	44;"	d
E1000_GCR_RXDSCR_NO_SNOOP	dev/e1000/e1000_defines.h	828;"	d
E1000_GCR_RXDSCW_NO_SNOOP	dev/e1000/e1000_defines.h	827;"	d
E1000_GCR_RXD_NO_SNOOP	dev/e1000/e1000_defines.h	826;"	d
E1000_GCR_TXDSCR_NO_SNOOP	dev/e1000/e1000_defines.h	831;"	d
E1000_GCR_TXDSCW_NO_SNOOP	dev/e1000/e1000_defines.h	830;"	d
E1000_GCR_TXD_NO_SNOOP	dev/e1000/e1000_defines.h	829;"	d
E1000_GEN_CTL_ADDRESS_SHIFT	dev/e1000/e1000_defines.h	1325;"	d
E1000_GEN_CTL_READY	dev/e1000/e1000_defines.h	1324;"	d
E1000_GEN_POLL_TIMEOUT	dev/e1000/e1000_defines.h	1326;"	d
E1000_GIOCTL	dev/e1000/e1000_regs.h	502;"	d
E1000_GORCH	dev/e1000/e1000_regs.h	328;"	d
E1000_GORCH	if_em_hw.h	732;"	d
E1000_GORCL	dev/e1000/e1000_regs.h	327;"	d
E1000_GORCL	if_em_hw.h	731;"	d
E1000_GOTCH	dev/e1000/e1000_regs.h	330;"	d
E1000_GOTCH	if_em_hw.h	734;"	d
E1000_GOTCL	dev/e1000/e1000_regs.h	329;"	d
E1000_GOTCL	if_em_hw.h	733;"	d
E1000_GPIE	dev/e1000/e1000_regs.h	88;"	d
E1000_GPIE_EIAME	dev/e1000/e1000_defines.h	108;"	d
E1000_GPIE_MSIX_MODE	dev/e1000/e1000_defines.h	107;"	d
E1000_GPIE_NSICR	dev/e1000/e1000_defines.h	106;"	d
E1000_GPIE_PBA	dev/e1000/e1000_defines.h	109;"	d
E1000_GPRC	dev/e1000/e1000_regs.h	323;"	d
E1000_GPRC	if_em_hw.h	727;"	d
E1000_GPTC	dev/e1000/e1000_regs.h	326;"	d
E1000_GPTC	if_em_hw.h	730;"	d
E1000_GSCL_1	dev/e1000/e1000_regs.h	506;"	d
E1000_GSCL_2	dev/e1000/e1000_regs.h	507;"	d
E1000_GSCL_3	dev/e1000/e1000_regs.h	508;"	d
E1000_GSCL_4	dev/e1000/e1000_regs.h	509;"	d
E1000_HDX_COLLISION_DISTANCE	if_em_hw.h	1554;"	d
E1000_HGORCH	dev/e1000/e1000_regs.h	453;"	d
E1000_HGORCL	dev/e1000/e1000_regs.h	452;"	d
E1000_HGOTCH	dev/e1000/e1000_regs.h	455;"	d
E1000_HGOTCL	dev/e1000/e1000_regs.h	454;"	d
E1000_HGPTC	dev/e1000/e1000_regs.h	450;"	d
E1000_HIBBA	dev/e1000/e1000_regs.h	489;"	d
E1000_HICR	dev/e1000/e1000_regs.h	519;"	d
E1000_HICR_C	dev/e1000/e1000_manage.h	88;"	d
E1000_HICR_EN	dev/e1000/e1000_manage.h	86;"	d
E1000_HICR_FW_RESET	dev/e1000/e1000_manage.h	91;"	d
E1000_HICR_FW_RESET_ENABLE	dev/e1000/e1000_manage.h	90;"	d
E1000_HICR_MEMORY_BASE_EN	dev/e1000/e1000_manage.h	85;"	d
E1000_HICR_SV	dev/e1000/e1000_manage.h	89;"	d
E1000_HI_COMMAND_TIMEOUT	dev/e1000/e1000_manage.h	81;"	d
E1000_HI_FW_BASE_ADDRESS	dev/e1000/e1000_manage.h	82;"	d
E1000_HI_FW_BLOCK_DWORD_LENGTH	dev/e1000/e1000_manage.h	84;"	d
E1000_HI_FW_MAX_LENGTH	dev/e1000/e1000_manage.h	83;"	d
E1000_HI_MAX_BLOCK_BYTE_LENGTH	dev/e1000/e1000_manage.h	79;"	d
E1000_HI_MAX_BLOCK_DWORD_LENGTH	dev/e1000/e1000_manage.h	80;"	d
E1000_HI_MAX_DATA_LENGTH	dev/e1000/e1000_hw.h	635;"	d
E1000_HI_MAX_MNG_DATA_LENGTH	dev/e1000/e1000_hw.h	650;"	d
E1000_HOST_IF	dev/e1000/e1000_regs.h	486;"	d
E1000_HRMPC	dev/e1000/e1000_regs.h	458;"	d
E1000_HTCBDPC	dev/e1000/e1000_regs.h	451;"	d
E1000_HTDPMC	dev/e1000/e1000_regs.h	446;"	d
E1000_I210_FIFO_SEL_BMC2OS_RX	dev/e1000/e1000_defines.h	999;"	d
E1000_I210_FIFO_SEL_BMC2OS_TX	dev/e1000/e1000_defines.h	998;"	d
E1000_I210_FIFO_SEL_RX	dev/e1000/e1000_defines.h	995;"	d
E1000_I210_FIFO_SEL_TX_LEGACY	dev/e1000/e1000_defines.h	997;"	d
E1000_I210_FIFO_SEL_TX_QAV	dev/e1000/e1000_defines.h	996;"	d
E1000_I210_FLA	dev/e1000/e1000_regs.h	164;"	d
E1000_I210_FLASH_SECTOR_SIZE	dev/e1000/e1000_defines.h	1001;"	d
E1000_I210_FLMNGCNT	dev/e1000/e1000_regs.h	158;"	d
E1000_I210_FLMNGCTL	dev/e1000/e1000_regs.h	156;"	d
E1000_I210_FLMNGDATA	dev/e1000/e1000_regs.h	157;"	d
E1000_I210_FLSWCNT	dev/e1000/e1000_regs.h	162;"	d
E1000_I210_FLSWCTL	dev/e1000/e1000_regs.h	160;"	d
E1000_I210_FLSWDATA	dev/e1000/e1000_regs.h	161;"	d
E1000_I210_FW_PTR_MASK	dev/e1000/e1000_defines.h	1003;"	d
E1000_I210_FW_VER_OFFSET	dev/e1000/e1000_defines.h	1005;"	d
E1000_I210_NVM_FW_MODULE_PTR	dev/e1000/e1000_defines.h	1020;"	d
E1000_I210_TQAVARBCTRL	dev/e1000/e1000_regs.h	194;"	d
E1000_I210_TQAVCC	dev/e1000/e1000_regs.h	198;"	d
E1000_I210_TQAVCTRL	dev/e1000/e1000_regs.h	170;"	d
E1000_I210_TQAVHC	dev/e1000/e1000_regs.h	191;"	d
E1000_I210_TXPBS_SIZE	dev/e1000/e1000_regs.h	209;"	d
E1000_I2CBB_EN	dev/e1000/e1000_regs.h	114;"	d
E1000_I2CCMD	dev/e1000/e1000_regs.h	112;"	d
E1000_I2CCMD_ERROR	dev/e1000/e1000_defines.h	100;"	d
E1000_I2CCMD_OPCODE_READ	dev/e1000/e1000_defines.h	97;"	d
E1000_I2CCMD_OPCODE_WRITE	dev/e1000/e1000_defines.h	98;"	d
E1000_I2CCMD_PHY_ADDR_SHIFT	dev/e1000/e1000_defines.h	96;"	d
E1000_I2CCMD_PHY_TIMEOUT	dev/e1000/e1000_defines.h	104;"	d
E1000_I2CCMD_READY	dev/e1000/e1000_defines.h	99;"	d
E1000_I2CCMD_REG_ADDR_SHIFT	dev/e1000/e1000_defines.h	95;"	d
E1000_I2CCMD_SFP_DATA_ADDR	dev/e1000/e1000_defines.h	101;"	d
E1000_I2CCMD_SFP_DIAG_ADDR	dev/e1000/e1000_defines.h	102;"	d
E1000_I2CPARAMS	dev/e1000/e1000_regs.h	113;"	d
E1000_I2C_CLK_IN	dev/e1000/e1000_regs.h	120;"	d
E1000_I2C_CLK_OE_N	dev/e1000/e1000_regs.h	119;"	d
E1000_I2C_CLK_OUT	dev/e1000/e1000_regs.h	115;"	d
E1000_I2C_CLK_STRETCH_DIS	dev/e1000/e1000_regs.h	121;"	d
E1000_I2C_DATA_IN	dev/e1000/e1000_regs.h	118;"	d
E1000_I2C_DATA_OE_N	dev/e1000/e1000_regs.h	117;"	d
E1000_I2C_DATA_OUT	dev/e1000/e1000_regs.h	116;"	d
E1000_I2C_T_BUF	dev/e1000/e1000_82575.h	506;"	d
E1000_I2C_T_FALL	dev/e1000/e1000_82575.h	504;"	d
E1000_I2C_T_HD_DATA	dev/e1000/e1000_82575.h	501;"	d
E1000_I2C_T_HD_STA	dev/e1000/e1000_82575.h	497;"	d
E1000_I2C_T_HIGH	dev/e1000/e1000_82575.h	499;"	d
E1000_I2C_T_LOW	dev/e1000/e1000_82575.h	498;"	d
E1000_I2C_T_RISE	dev/e1000/e1000_82575.h	503;"	d
E1000_I2C_T_SU_DATA	dev/e1000/e1000_82575.h	502;"	d
E1000_I2C_T_SU_STA	dev/e1000/e1000_82575.h	500;"	d
E1000_I2C_T_SU_STO	dev/e1000/e1000_82575.h	505;"	d
E1000_I350_BARCTRL	dev/e1000/e1000_regs.h	53;"	d
E1000_I350_DTXMXPKTSZ	dev/e1000/e1000_regs.h	54;"	d
E1000_I350_NVM_FW_MODULE_PTR	dev/e1000/e1000_defines.h	1021;"	d
E1000_IAC	dev/e1000/e1000_regs.h	355;"	d
E1000_IAM	dev/e1000/e1000_regs.h	71;"	d
E1000_IAMT_SIGNATURE	dev/e1000/e1000_manage.h	94;"	d
E1000_IAM_V2	dev/e1000/e1000_regs.h	131;"	d
E1000_ICH8_LAN_INIT_TIMEOUT	dev/e1000/e1000_ich8lan.h	88;"	d
E1000_ICH_FWSM_FW_VALID	dev/e1000/e1000_ich8lan.h	65;"	d
E1000_ICH_FWSM_PCIM2PCI	dev/e1000/e1000_ich8lan.h	66;"	d
E1000_ICH_FWSM_PCIM2PCI_COUNT	dev/e1000/e1000_ich8lan.h	67;"	d
E1000_ICH_FWSM_RSPCIPHY	dev/e1000/e1000_ich8lan.h	63;"	d
E1000_ICH_MNG_IAMT_MODE	dev/e1000/e1000_ich8lan.h	69;"	d
E1000_ICH_NVM_SIG_MASK	dev/e1000/e1000_ich8lan.h	84;"	d
E1000_ICH_NVM_SIG_VALUE	dev/e1000/e1000_ich8lan.h	86;"	d
E1000_ICH_NVM_SIG_WORD	dev/e1000/e1000_ich8lan.h	83;"	d
E1000_ICH_NVM_VALID_SIG_MASK	dev/e1000/e1000_ich8lan.h	85;"	d
E1000_ICH_RAR_ENTRIES	dev/e1000/e1000_ich8lan.h	104;"	d
E1000_ICR	dev/e1000/e1000_regs.h	66;"	d
E1000_ICR	if_em_hw.h	660;"	d
E1000_ICRXATC	dev/e1000/e1000_regs.h	357;"	d
E1000_ICRXDMTC	dev/e1000/e1000_regs.h	362;"	d
E1000_ICRXOC	dev/e1000/e1000_regs.h	363;"	d
E1000_ICRXPTC	dev/e1000/e1000_regs.h	356;"	d
E1000_ICR_DOUTSYNC	dev/e1000/e1000_defines.h	545;"	d
E1000_ICR_DRSTA	dev/e1000/e1000_defines.h	542;"	d
E1000_ICR_ECCER	dev/e1000/e1000_defines.h	540;"	d
E1000_ICR_FER	dev/e1000/e1000_defines.h	551;"	d
E1000_ICR_GPI_EN0	dev/e1000/e1000_defines.h	534;"	d
E1000_ICR_GPI_EN0	if_em_hw.h	1227;"	d
E1000_ICR_GPI_EN1	dev/e1000/e1000_defines.h	535;"	d
E1000_ICR_GPI_EN1	if_em_hw.h	1228;"	d
E1000_ICR_GPI_EN2	dev/e1000/e1000_defines.h	536;"	d
E1000_ICR_GPI_EN2	if_em_hw.h	1229;"	d
E1000_ICR_GPI_EN3	dev/e1000/e1000_defines.h	537;"	d
E1000_ICR_GPI_EN3	if_em_hw.h	1230;"	d
E1000_ICR_INT_ASSERTED	dev/e1000/e1000_defines.h	544;"	d
E1000_ICR_LSC	dev/e1000/e1000_defines.h	527;"	d
E1000_ICR_LSC	if_em_hw.h	1220;"	d
E1000_ICR_LSECPNS	dev/e1000/e1000_82575.h	377;"	d
E1000_ICR_MDAC	if_em_hw.h	1225;"	d
E1000_ICR_MDDET	dev/e1000/e1000_defines.h	554;"	d
E1000_ICR_MNG	dev/e1000/e1000_defines.h	539;"	d
E1000_ICR_OTHER	dev/e1000/e1000_defines.h	550;"	d
E1000_ICR_RXCFG	dev/e1000/e1000_defines.h	533;"	d
E1000_ICR_RXCFG	if_em_hw.h	1226;"	d
E1000_ICR_RXDMT0	dev/e1000/e1000_defines.h	529;"	d
E1000_ICR_RXDMT0	if_em_hw.h	1222;"	d
E1000_ICR_RXO	dev/e1000/e1000_defines.h	530;"	d
E1000_ICR_RXO	if_em_hw.h	1223;"	d
E1000_ICR_RXQ0	dev/e1000/e1000_defines.h	546;"	d
E1000_ICR_RXQ1	dev/e1000/e1000_defines.h	547;"	d
E1000_ICR_RXSEQ	dev/e1000/e1000_defines.h	528;"	d
E1000_ICR_RXSEQ	if_em_hw.h	1221;"	d
E1000_ICR_RXT0	dev/e1000/e1000_defines.h	531;"	d
E1000_ICR_RXT0	if_em_hw.h	1224;"	d
E1000_ICR_SRPD	if_em_hw.h	1232;"	d
E1000_ICR_THS	dev/e1000/e1000_defines.h	553;"	d
E1000_ICR_TS	dev/e1000/e1000_defines.h	541;"	d
E1000_ICR_TXDW	dev/e1000/e1000_defines.h	525;"	d
E1000_ICR_TXDW	if_em_hw.h	1218;"	d
E1000_ICR_TXD_LOW	dev/e1000/e1000_defines.h	538;"	d
E1000_ICR_TXD_LOW	if_em_hw.h	1231;"	d
E1000_ICR_TXQ0	dev/e1000/e1000_defines.h	548;"	d
E1000_ICR_TXQ1	dev/e1000/e1000_defines.h	549;"	d
E1000_ICR_TXQE	dev/e1000/e1000_defines.h	526;"	d
E1000_ICR_TXQE	if_em_hw.h	1219;"	d
E1000_ICR_V2	dev/e1000/e1000_regs.h	127;"	d
E1000_ICR_VMMB	dev/e1000/e1000_defines.h	532;"	d
E1000_ICS	dev/e1000/e1000_regs.h	68;"	d
E1000_ICS	if_em_hw.h	662;"	d
E1000_ICS_GPI_EN0	if_em_hw.h	1244;"	d
E1000_ICS_GPI_EN1	if_em_hw.h	1245;"	d
E1000_ICS_GPI_EN2	if_em_hw.h	1246;"	d
E1000_ICS_GPI_EN3	if_em_hw.h	1247;"	d
E1000_ICS_LSC	dev/e1000/e1000_defines.h	634;"	d
E1000_ICS_LSC	if_em_hw.h	1237;"	d
E1000_ICS_LSECPNS	dev/e1000/e1000_82575.h	379;"	d
E1000_ICS_MDAC	if_em_hw.h	1242;"	d
E1000_ICS_RXCFG	if_em_hw.h	1243;"	d
E1000_ICS_RXDMT0	dev/e1000/e1000_defines.h	636;"	d
E1000_ICS_RXDMT0	if_em_hw.h	1239;"	d
E1000_ICS_RXO	if_em_hw.h	1240;"	d
E1000_ICS_RXSEQ	dev/e1000/e1000_defines.h	635;"	d
E1000_ICS_RXSEQ	if_em_hw.h	1238;"	d
E1000_ICS_RXT0	if_em_hw.h	1241;"	d
E1000_ICS_SRPD	if_em_hw.h	1249;"	d
E1000_ICS_TXDW	if_em_hw.h	1235;"	d
E1000_ICS_TXD_LOW	if_em_hw.h	1248;"	d
E1000_ICS_TXQE	if_em_hw.h	1236;"	d
E1000_ICS_V2	dev/e1000/e1000_regs.h	128;"	d
E1000_ICTXATC	dev/e1000/e1000_regs.h	359;"	d
E1000_ICTXPTC	dev/e1000/e1000_regs.h	358;"	d
E1000_ICTXQEC	dev/e1000/e1000_regs.h	360;"	d
E1000_ICTXQMTC	dev/e1000/e1000_regs.h	361;"	d
E1000_IDLE_ERROR_COUNT_MASK	dev/e1000/e1000_82571.h	58;"	d
E1000_IMC	dev/e1000/e1000_regs.h	70;"	d
E1000_IMC	if_em_hw.h	664;"	d
E1000_IMC_GPI_EN0	if_em_hw.h	1278;"	d
E1000_IMC_GPI_EN1	if_em_hw.h	1279;"	d
E1000_IMC_GPI_EN2	if_em_hw.h	1280;"	d
E1000_IMC_GPI_EN3	if_em_hw.h	1281;"	d
E1000_IMC_LSC	if_em_hw.h	1271;"	d
E1000_IMC_MDAC	if_em_hw.h	1276;"	d
E1000_IMC_RXCFG	if_em_hw.h	1277;"	d
E1000_IMC_RXDMT0	if_em_hw.h	1273;"	d
E1000_IMC_RXO	if_em_hw.h	1274;"	d
E1000_IMC_RXSEQ	if_em_hw.h	1272;"	d
E1000_IMC_RXT0	if_em_hw.h	1275;"	d
E1000_IMC_SRPD	if_em_hw.h	1283;"	d
E1000_IMC_TXDW	if_em_hw.h	1269;"	d
E1000_IMC_TXD_LOW	if_em_hw.h	1282;"	d
E1000_IMC_TXQE	if_em_hw.h	1270;"	d
E1000_IMC_V2	dev/e1000/e1000_regs.h	130;"	d
E1000_IMIR	dev/e1000/e1000_regs.h	525;"	d
E1000_IMIREXT	dev/e1000/e1000_regs.h	526;"	d
E1000_IMIREXT_CLEAR_MASK	dev/e1000/e1000_defines.h	801;"	d
E1000_IMIREXT_CTRL_ACK	dev/e1000/e1000_82575.h	186;"	d
E1000_IMIREXT_CTRL_BP	dev/e1000/e1000_82575.h	191;"	d
E1000_IMIREXT_CTRL_FIN	dev/e1000/e1000_82575.h	190;"	d
E1000_IMIREXT_CTRL_PSH	dev/e1000/e1000_82575.h	187;"	d
E1000_IMIREXT_CTRL_RST	dev/e1000/e1000_82575.h	188;"	d
E1000_IMIREXT_CTRL_SYN	dev/e1000/e1000_82575.h	189;"	d
E1000_IMIREXT_CTRL_URG	dev/e1000/e1000_82575.h	185;"	d
E1000_IMIREXT_SIZE_BP	dev/e1000/e1000_82575.h	184;"	d
E1000_IMIRVP	dev/e1000/e1000_regs.h	527;"	d
E1000_IMIR_CLEAR_MASK	dev/e1000/e1000_defines.h	798;"	d
E1000_IMIR_PORT_BP	dev/e1000/e1000_82575.h	183;"	d
E1000_IMIR_PORT_BYPASS	dev/e1000/e1000_defines.h	799;"	d
E1000_IMIR_PORT_IM_EN	dev/e1000/e1000_82575.h	182;"	d
E1000_IMIR_PRIORITY_SHIFT	dev/e1000/e1000_defines.h	800;"	d
E1000_IMS	dev/e1000/e1000_regs.h	69;"	d
E1000_IMS	if_em_hw.h	663;"	d
E1000_IMS_DOUTSYNC	dev/e1000/e1000_defines.h	611;"	d
E1000_IMS_DRSTA	dev/e1000/e1000_defines.h	610;"	d
E1000_IMS_ECCER	dev/e1000/e1000_defines.h	608;"	d
E1000_IMS_FER	dev/e1000/e1000_defines.h	617;"	d
E1000_IMS_GPI_EN0	if_em_hw.h	1261;"	d
E1000_IMS_GPI_EN1	if_em_hw.h	1262;"	d
E1000_IMS_GPI_EN2	if_em_hw.h	1263;"	d
E1000_IMS_GPI_EN3	if_em_hw.h	1264;"	d
E1000_IMS_LSC	dev/e1000/e1000_defines.h	601;"	d
E1000_IMS_LSC	if_em_hw.h	1254;"	d
E1000_IMS_LSECPNS	dev/e1000/e1000_82575.h	378;"	d
E1000_IMS_MDAC	if_em_hw.h	1259;"	d
E1000_IMS_MDDET	dev/e1000/e1000_defines.h	620;"	d
E1000_IMS_OTHER	dev/e1000/e1000_defines.h	616;"	d
E1000_IMS_RXCFG	if_em_hw.h	1260;"	d
E1000_IMS_RXDMT0	dev/e1000/e1000_defines.h	604;"	d
E1000_IMS_RXDMT0	if_em_hw.h	1256;"	d
E1000_IMS_RXO	dev/e1000/e1000_defines.h	605;"	d
E1000_IMS_RXO	if_em_hw.h	1257;"	d
E1000_IMS_RXQ0	dev/e1000/e1000_defines.h	612;"	d
E1000_IMS_RXQ1	dev/e1000/e1000_defines.h	613;"	d
E1000_IMS_RXSEQ	dev/e1000/e1000_defines.h	603;"	d
E1000_IMS_RXSEQ	if_em_hw.h	1255;"	d
E1000_IMS_RXT0	dev/e1000/e1000_defines.h	606;"	d
E1000_IMS_RXT0	if_em_hw.h	1258;"	d
E1000_IMS_SRPD	if_em_hw.h	1266;"	d
E1000_IMS_THS	dev/e1000/e1000_defines.h	619;"	d
E1000_IMS_TS	dev/e1000/e1000_defines.h	609;"	d
E1000_IMS_TXDW	dev/e1000/e1000_defines.h	599;"	d
E1000_IMS_TXDW	if_em_hw.h	1252;"	d
E1000_IMS_TXD_LOW	dev/e1000/e1000_defines.h	607;"	d
E1000_IMS_TXD_LOW	if_em_hw.h	1265;"	d
E1000_IMS_TXQ0	dev/e1000/e1000_defines.h	614;"	d
E1000_IMS_TXQ1	dev/e1000/e1000_defines.h	615;"	d
E1000_IMS_TXQE	dev/e1000/e1000_defines.h	600;"	d
E1000_IMS_TXQE	if_em_hw.h	1253;"	d
E1000_IMS_V2	dev/e1000/e1000_regs.h	129;"	d
E1000_IMS_VMMB	dev/e1000/e1000_defines.h	602;"	d
E1000_INVM_CSR_AUTOLOAD_DATA_SIZE_IN_DWORDS	dev/e1000/e1000_i210.h	69;"	d
E1000_INVM_CSR_AUTOLOAD_STRUCTURE	dev/e1000/e1000_i210.h	/^	E1000_INVM_CSR_AUTOLOAD_STRUCTURE		= 0x02,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_DATA_REG	dev/e1000/e1000_regs.h	166;"	d
E1000_INVM_IMGTYPE_FIELD	dev/e1000/e1000_i210.h	74;"	d
E1000_INVM_INVALIDATED_STRUCTURE	dev/e1000/e1000_i210.h	/^	E1000_INVM_INVALIDATED_STRUCTURE		= 0x0F,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_MAJOR_MASK	dev/e1000/e1000_i210.h	76;"	d
E1000_INVM_MAJOR_SHIFT	dev/e1000/e1000_i210.h	78;"	d
E1000_INVM_MINOR_MASK	dev/e1000/e1000_i210.h	77;"	d
E1000_INVM_PHY_REGISTER_AUTOLOAD_STRUCTURE	dev/e1000/e1000_i210.h	/^	E1000_INVM_PHY_REGISTER_AUTOLOAD_STRUCTURE	= 0x03,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_RECORD_SIZE_IN_BYTES	dev/e1000/e1000_i210.h	71;"	d
E1000_INVM_RSA_KEY_SHA256_DATA_SIZE_IN_DWORDS	dev/e1000/e1000_i210.h	68;"	d
E1000_INVM_RSA_KEY_SHA256_STRUCTURE	dev/e1000/e1000_i210.h	/^	E1000_INVM_RSA_KEY_SHA256_STRUCTURE		= 0x04,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_SIZE	dev/e1000/e1000_regs.h	167;"	d
E1000_INVM_STRUCTURE_TYPE	dev/e1000/e1000_i210.h	/^enum E1000_INVM_STRUCTURE_TYPE {$/;"	g
E1000_INVM_ULT_BYTES_SIZE	dev/e1000/e1000_i210.h	70;"	d
E1000_INVM_UNINITIALIZED_STRUCTURE	dev/e1000/e1000_i210.h	/^	E1000_INVM_UNINITIALIZED_STRUCTURE		= 0x00,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_INVM_VER_FIELD_ONE	dev/e1000/e1000_i210.h	72;"	d
E1000_INVM_VER_FIELD_TWO	dev/e1000/e1000_i210.h	73;"	d
E1000_INVM_WORD_AUTOLOAD_STRUCTURE	dev/e1000/e1000_i210.h	/^	E1000_INVM_WORD_AUTOLOAD_STRUCTURE		= 0x01,$/;"	e	enum:E1000_INVM_STRUCTURE_TYPE
E1000_IOVCTL	dev/e1000/e1000_82575.h	456;"	d
E1000_IOVCTL_REUSE_VFQ	dev/e1000/e1000_82575.h	457;"	d
E1000_IOVTCL	dev/e1000/e1000_regs.h	545;"	d
E1000_IP4AT	dev/e1000/e1000_regs.h	480;"	d
E1000_IP4AT	if_em_hw.h	768;"	d
E1000_IP4AT_REG	dev/e1000/e1000_regs.h	268;"	d
E1000_IP4AT_SIZE	if_em_hw.h	600;"	d
E1000_IP6AT	dev/e1000/e1000_regs.h	481;"	d
E1000_IP6AT	if_em_hw.h	769;"	d
E1000_IP6AT_REG	dev/e1000/e1000_regs.h	269;"	d
E1000_IP6AT_SIZE	if_em_hw.h	601;"	d
E1000_IPAV	dev/e1000/e1000_regs.h	479;"	d
E1000_IPAV	if_em_hw.h	767;"	d
E1000_IPCNFG	dev/e1000/e1000_regs.h	660;"	d
E1000_IPCNFG_EEE_100M_AN	dev/e1000/e1000_defines.h	816;"	d
E1000_IPCNFG_EEE_1G_AN	dev/e1000/e1000_defines.h	815;"	d
E1000_IPSCTRL	dev/e1000/e1000_regs.h	429;"	d
E1000_IPSRXCMD	dev/e1000/e1000_regs.h	430;"	d
E1000_IPSRXIDX	dev/e1000/e1000_regs.h	431;"	d
E1000_IPSRXIPADDR	dev/e1000/e1000_regs.h	433;"	d
E1000_IPSRXKEY	dev/e1000/e1000_regs.h	435;"	d
E1000_IPSRXSALT	dev/e1000/e1000_regs.h	436;"	d
E1000_IPSRXSPI	dev/e1000/e1000_regs.h	437;"	d
E1000_IPSTXIDX	dev/e1000/e1000_regs.h	441;"	d
E1000_IPSTXKEY	dev/e1000/e1000_regs.h	439;"	d
E1000_IPSTXSALT	dev/e1000/e1000_regs.h	440;"	d
E1000_IRPBS	dev/e1000/e1000_regs.h	151;"	d
E1000_ITPBS	dev/e1000/e1000_regs.h	278;"	d
E1000_ITR	dev/e1000/e1000_regs.h	67;"	d
E1000_ITR	if_em_hw.h	661;"	d
E1000_ITR_MASK	dev/e1000/e1000_defines.h	556;"	d
E1000_ITR_MULT	dev/e1000/e1000_defines.h	557;"	d
E1000_IVAR	dev/e1000/e1000_regs.h	72;"	d
E1000_IVAR0	dev/e1000/e1000_regs.h	89;"	d
E1000_IVAR0	dev/e1000/e1000_vf.h	77;"	d
E1000_IVAR_MISC	dev/e1000/e1000_regs.h	90;"	d
E1000_IVAR_MISC	dev/e1000/e1000_vf.h	78;"	d
E1000_IVAR_VALID	dev/e1000/e1000_defines.h	105;"	d
E1000_IVAR_VALID	dev/e1000/e1000_vf.h	79;"	d
E1000_KABGTXD	dev/e1000/e1000_regs.h	260;"	d
E1000_KABGTXD_BGSQLBIAS	dev/e1000/e1000_defines.h	476;"	d
E1000_KMRNCTRLSTA	dev/e1000/e1000_regs.h	496;"	d
E1000_KMRNCTRLSTA_CTRL_OFFSET	dev/e1000/e1000_phy.h	259;"	d
E1000_KMRNCTRLSTA_DIAG_NELPBK	dev/e1000/e1000_phy.h	264;"	d
E1000_KMRNCTRLSTA_DIAG_OFFSET	dev/e1000/e1000_phy.h	260;"	d
E1000_KMRNCTRLSTA_FIFO_CTRL_RX_BYPASS	dev/e1000/e1000_80003es2lan.h	43;"	d
E1000_KMRNCTRLSTA_FIFO_CTRL_TX_BYPASS	dev/e1000/e1000_80003es2lan.h	44;"	d
E1000_KMRNCTRLSTA_HD_CTRL	dev/e1000/e1000_phy.h	267;"	d
E1000_KMRNCTRLSTA_HD_CTRL_1000_DEFAULT	dev/e1000/e1000_80003es2lan.h	48;"	d
E1000_KMRNCTRLSTA_HD_CTRL_10_100_DEFAULT	dev/e1000/e1000_80003es2lan.h	47;"	d
E1000_KMRNCTRLSTA_IBIST_DISABLE	dev/e1000/e1000_phy.h	263;"	d
E1000_KMRNCTRLSTA_INBAND_PARAM	dev/e1000/e1000_phy.h	262;"	d
E1000_KMRNCTRLSTA_INB_CTRL_DIS_PADDING	dev/e1000/e1000_80003es2lan.h	45;"	d
E1000_KMRNCTRLSTA_K1_CONFIG	dev/e1000/e1000_phy.h	265;"	d
E1000_KMRNCTRLSTA_K1_ENABLE	dev/e1000/e1000_phy.h	266;"	d
E1000_KMRNCTRLSTA_OFFSET	dev/e1000/e1000_phy.h	256;"	d
E1000_KMRNCTRLSTA_OFFSET_FIFO_CTRL	dev/e1000/e1000_80003es2lan.h	38;"	d
E1000_KMRNCTRLSTA_OFFSET_HD_CTRL	dev/e1000/e1000_80003es2lan.h	40;"	d
E1000_KMRNCTRLSTA_OFFSET_INB_CTRL	dev/e1000/e1000_80003es2lan.h	39;"	d
E1000_KMRNCTRLSTA_OFFSET_MAC2PHY_OPMODE	dev/e1000/e1000_80003es2lan.h	41;"	d
E1000_KMRNCTRLSTA_OFFSET_SHIFT	dev/e1000/e1000_phy.h	257;"	d
E1000_KMRNCTRLSTA_OPMODE_E_IDLE	dev/e1000/e1000_80003es2lan.h	49;"	d
E1000_KMRNCTRLSTA_OPMODE_INBAND_MDIO	dev/e1000/e1000_80003es2lan.h	52;"	d
E1000_KMRNCTRLSTA_OPMODE_MASK	dev/e1000/e1000_80003es2lan.h	51;"	d
E1000_KMRNCTRLSTA_REN	dev/e1000/e1000_phy.h	258;"	d
E1000_KMRNCTRLSTA_TIMEOUTS	dev/e1000/e1000_phy.h	261;"	d
E1000_LATECOL	dev/e1000/e1000_regs.h	305;"	d
E1000_LATECOL	if_em_hw.h	709;"	d
E1000_LEDCTL	dev/e1000/e1000_regs.h	96;"	d
E1000_LEDCTL	if_em_hw.h	673;"	d
E1000_LEDCTL_LED0_BLINK	dev/e1000/e1000_defines.h	372;"	d
E1000_LEDCTL_LED0_BLINK	if_em_hw.h	1183;"	d
E1000_LEDCTL_LED0_IVRT	dev/e1000/e1000_defines.h	371;"	d
E1000_LEDCTL_LED0_IVRT	if_em_hw.h	1182;"	d
E1000_LEDCTL_LED0_MODE_MASK	dev/e1000/e1000_defines.h	369;"	d
E1000_LEDCTL_LED0_MODE_MASK	if_em_hw.h	1180;"	d
E1000_LEDCTL_LED0_MODE_SHIFT	dev/e1000/e1000_defines.h	370;"	d
E1000_LEDCTL_LED0_MODE_SHIFT	if_em_hw.h	1181;"	d
E1000_LEDCTL_LED1_BLINK	if_em_hw.h	1187;"	d
E1000_LEDCTL_LED1_IVRT	if_em_hw.h	1186;"	d
E1000_LEDCTL_LED1_MODE_MASK	if_em_hw.h	1184;"	d
E1000_LEDCTL_LED1_MODE_SHIFT	if_em_hw.h	1185;"	d
E1000_LEDCTL_LED2_BLINK	if_em_hw.h	1191;"	d
E1000_LEDCTL_LED2_IVRT	if_em_hw.h	1190;"	d
E1000_LEDCTL_LED2_MODE_MASK	if_em_hw.h	1188;"	d
E1000_LEDCTL_LED2_MODE_SHIFT	if_em_hw.h	1189;"	d
E1000_LEDCTL_LED3_BLINK	if_em_hw.h	1195;"	d
E1000_LEDCTL_LED3_IVRT	if_em_hw.h	1194;"	d
E1000_LEDCTL_LED3_MODE_MASK	if_em_hw.h	1192;"	d
E1000_LEDCTL_LED3_MODE_SHIFT	if_em_hw.h	1193;"	d
E1000_LEDCTL_MODE_ACTIVITY	if_em_hw.h	1200;"	d
E1000_LEDCTL_MODE_BUS_SIZE	if_em_hw.h	1209;"	d
E1000_LEDCTL_MODE_BUS_SPEED	if_em_hw.h	1208;"	d
E1000_LEDCTL_MODE_COLLISION	if_em_hw.h	1207;"	d
E1000_LEDCTL_MODE_FULL_DUPLEX	if_em_hw.h	1206;"	d
E1000_LEDCTL_MODE_LED_OFF	dev/e1000/e1000_defines.h	376;"	d
E1000_LEDCTL_MODE_LED_OFF	if_em_hw.h	1212;"	d
E1000_LEDCTL_MODE_LED_ON	dev/e1000/e1000_defines.h	375;"	d
E1000_LEDCTL_MODE_LED_ON	if_em_hw.h	1211;"	d
E1000_LEDCTL_MODE_LINK_10	if_em_hw.h	1202;"	d
E1000_LEDCTL_MODE_LINK_100	if_em_hw.h	1203;"	d
E1000_LEDCTL_MODE_LINK_1000	if_em_hw.h	1204;"	d
E1000_LEDCTL_MODE_LINK_100_1000	if_em_hw.h	1198;"	d
E1000_LEDCTL_MODE_LINK_10_1000	if_em_hw.h	1197;"	d
E1000_LEDCTL_MODE_LINK_ACTIVITY	if_em_hw.h	1201;"	d
E1000_LEDCTL_MODE_LINK_UP	dev/e1000/e1000_defines.h	374;"	d
E1000_LEDCTL_MODE_LINK_UP	if_em_hw.h	1199;"	d
E1000_LEDCTL_MODE_PAUSED	if_em_hw.h	1210;"	d
E1000_LEDCTL_MODE_PCIX_MODE	if_em_hw.h	1205;"	d
E1000_LENERRS	dev/e1000/e1000_regs.h	456;"	d
E1000_LPIC	dev/e1000/e1000_regs.h	75;"	d
E1000_LPIC_LPIET_SHIFT	dev/e1000/e1000_defines.h	479;"	d
E1000_LSECRXBAD	dev/e1000/e1000_regs.h	395;"	d
E1000_LSECRXCAP	dev/e1000/e1000_regs.h	407;"	d
E1000_LSECRXCAP_SUM_MASK	dev/e1000/e1000_defines.h	1331;"	d
E1000_LSECRXCAP_SUM_SHIFT	dev/e1000/e1000_defines.h	1332;"	d
E1000_LSECRXCTRL	dev/e1000/e1000_regs.h	409;"	d
E1000_LSECRXCTRL_CHECK	dev/e1000/e1000_defines.h	1345;"	d
E1000_LSECRXCTRL_DISABLE	dev/e1000/e1000_defines.h	1344;"	d
E1000_LSECRXCTRL_DROP	dev/e1000/e1000_defines.h	1347;"	d
E1000_LSECRXCTRL_EN_MASK	dev/e1000/e1000_defines.h	1342;"	d
E1000_LSECRXCTRL_EN_SHIFT	dev/e1000/e1000_defines.h	1343;"	d
E1000_LSECRXCTRL_PLSH	dev/e1000/e1000_defines.h	1348;"	d
E1000_LSECRXCTRL_RP	dev/e1000/e1000_defines.h	1349;"	d
E1000_LSECRXCTRL_RSV_MASK	dev/e1000/e1000_defines.h	1350;"	d
E1000_LSECRXCTRL_STRICT	dev/e1000/e1000_defines.h	1346;"	d
E1000_LSECRXDELAY	dev/e1000/e1000_regs.h	399;"	d
E1000_LSECRXINV	dev/e1000/e1000_regs.h	402;"	d
E1000_LSECRXKEY	dev/e1000/e1000_regs.h	426;"	d
E1000_LSECRXLATE	dev/e1000/e1000_regs.h	400;"	d
E1000_LSECRXNOSCI	dev/e1000/e1000_regs.h	396;"	d
E1000_LSECRXNUSA	dev/e1000/e1000_regs.h	405;"	d
E1000_LSECRXNV	dev/e1000/e1000_regs.h	403;"	d
E1000_LSECRXOCTD	dev/e1000/e1000_regs.h	393;"	d
E1000_LSECRXOCTV	dev/e1000/e1000_regs.h	394;"	d
E1000_LSECRXOK	dev/e1000/e1000_regs.h	401;"	d
E1000_LSECRXPN	dev/e1000/e1000_regs.h	422;"	d
E1000_LSECRXSA	dev/e1000/e1000_regs.h	421;"	d
E1000_LSECRXSCH	dev/e1000/e1000_regs.h	416;"	d
E1000_LSECRXSCL	dev/e1000/e1000_regs.h	415;"	d
E1000_LSECRXUNCH	dev/e1000/e1000_regs.h	398;"	d
E1000_LSECRXUNSA	dev/e1000/e1000_regs.h	404;"	d
E1000_LSECRXUNSCI	dev/e1000/e1000_regs.h	397;"	d
E1000_LSECRXUT	dev/e1000/e1000_regs.h	392;"	d
E1000_LSECTXCAP	dev/e1000/e1000_regs.h	406;"	d
E1000_LSECTXCAP_SUM_MASK	dev/e1000/e1000_defines.h	1329;"	d
E1000_LSECTXCAP_SUM_SHIFT	dev/e1000/e1000_defines.h	1330;"	d
E1000_LSECTXCTRL	dev/e1000/e1000_regs.h	408;"	d
E1000_LSECTXCTRL_AISCI	dev/e1000/e1000_defines.h	1338;"	d
E1000_LSECTXCTRL_AUTH	dev/e1000/e1000_defines.h	1336;"	d
E1000_LSECTXCTRL_AUTH_ENCRYPT	dev/e1000/e1000_defines.h	1337;"	d
E1000_LSECTXCTRL_DISABLE	dev/e1000/e1000_defines.h	1335;"	d
E1000_LSECTXCTRL_EN_MASK	dev/e1000/e1000_defines.h	1334;"	d
E1000_LSECTXCTRL_PNTHRSH_MASK	dev/e1000/e1000_defines.h	1339;"	d
E1000_LSECTXCTRL_RSV_MASK	dev/e1000/e1000_defines.h	1340;"	d
E1000_LSECTXKEY0	dev/e1000/e1000_regs.h	418;"	d
E1000_LSECTXKEY1	dev/e1000/e1000_regs.h	420;"	d
E1000_LSECTXOCTE	dev/e1000/e1000_regs.h	390;"	d
E1000_LSECTXOCTP	dev/e1000/e1000_regs.h	391;"	d
E1000_LSECTXPKTE	dev/e1000/e1000_regs.h	388;"	d
E1000_LSECTXPKTP	dev/e1000/e1000_regs.h	389;"	d
E1000_LSECTXPN0	dev/e1000/e1000_regs.h	413;"	d
E1000_LSECTXPN1	dev/e1000/e1000_regs.h	414;"	d
E1000_LSECTXSA	dev/e1000/e1000_regs.h	412;"	d
E1000_LSECTXSCH	dev/e1000/e1000_regs.h	411;"	d
E1000_LSECTXSCL	dev/e1000/e1000_regs.h	410;"	d
E1000_LSECTXUT	dev/e1000/e1000_regs.h	387;"	d
E1000_LTRC	dev/e1000/e1000_regs.h	661;"	d
E1000_LTRV	dev/e1000/e1000_ich8lan.h	247;"	d
E1000_LTRV_NOSNOOP_SHIFT	dev/e1000/e1000_ich8lan.h	254;"	d
E1000_LTRV_REQ_SHIFT	dev/e1000/e1000_ich8lan.h	253;"	d
E1000_LTRV_SCALE_FACTOR	dev/e1000/e1000_ich8lan.h	250;"	d
E1000_LTRV_SCALE_MASK	dev/e1000/e1000_ich8lan.h	252;"	d
E1000_LTRV_SCALE_MAX	dev/e1000/e1000_ich8lan.h	249;"	d
E1000_LTRV_SCALE_SHIFT	dev/e1000/e1000_ich8lan.h	251;"	d
E1000_LTRV_SEND	dev/e1000/e1000_ich8lan.h	255;"	d
E1000_LTRV_VALUE_MASK	dev/e1000/e1000_ich8lan.h	248;"	d
E1000_LVMMC	dev/e1000/e1000_regs.h	550;"	d
E1000_MANC	dev/e1000/e1000_regs.h	478;"	d
E1000_MANC	if_em_hw.h	766;"	d
E1000_MANC2H	dev/e1000/e1000_regs.h	497;"	d
E1000_MANC2H_PORT_623	dev/e1000/e1000_defines.h	178;"	d
E1000_MANC2H_PORT_664	dev/e1000/e1000_defines.h	179;"	d
E1000_MANC_0298_EN	if_em_hw.h	1434;"	d
E1000_MANC_ARP_EN	dev/e1000/e1000_defines.h	170;"	d
E1000_MANC_ARP_EN	if_em_hw.h	1438;"	d
E1000_MANC_ASF_EN	dev/e1000/e1000_defines.h	169;"	d
E1000_MANC_ASF_EN	if_em_hw.h	1431;"	d
E1000_MANC_BLK_PHY_RST_ON_IDE	dev/e1000/e1000_defines.h	172;"	d
E1000_MANC_EN_MAC_ADDR_FILTER	dev/e1000/e1000_defines.h	174;"	d
E1000_MANC_EN_MNG2HOST	dev/e1000/e1000_defines.h	176;"	d
E1000_MANC_IPV4_EN	if_em_hw.h	1435;"	d
E1000_MANC_IPV6_EN	if_em_hw.h	1436;"	d
E1000_MANC_NEIGHBOR_EN	if_em_hw.h	1439;"	d
E1000_MANC_RCV_TCO_EN	dev/e1000/e1000_defines.h	171;"	d
E1000_MANC_RCV_TCO_EN	if_em_hw.h	1442;"	d
E1000_MANC_REPORT_STATUS	if_em_hw.h	1443;"	d
E1000_MANC_RMCP_EN	if_em_hw.h	1433;"	d
E1000_MANC_R_ON_FORCE	if_em_hw.h	1432;"	d
E1000_MANC_SMBUS_EN	dev/e1000/e1000_defines.h	168;"	d
E1000_MANC_SMBUS_EN	if_em_hw.h	1430;"	d
E1000_MANC_SMB_CLK_IN	if_em_hw.h	1446;"	d
E1000_MANC_SMB_CLK_OUT	if_em_hw.h	1449;"	d
E1000_MANC_SMB_CLK_OUT_SHIFT	if_em_hw.h	1452;"	d
E1000_MANC_SMB_DATA_IN	if_em_hw.h	1447;"	d
E1000_MANC_SMB_DATA_OUT	if_em_hw.h	1448;"	d
E1000_MANC_SMB_DATA_OUT_SHIFT	if_em_hw.h	1451;"	d
E1000_MANC_SMB_GNT	if_em_hw.h	1445;"	d
E1000_MANC_SMB_REQ	if_em_hw.h	1444;"	d
E1000_MANC_SNAP_EN	if_em_hw.h	1437;"	d
E1000_MANC_TCO_RESET	if_em_hw.h	1441;"	d
E1000_MAX	dev/e1000/e1000_api.h	165;"	d
E1000_MAX_DSP_RESETS	if_em_hw.h	2046;"	d
E1000_MAX_PHY_ADDR	dev/e1000/e1000_phy.h	120;"	d
E1000_MAX_SGMII_PHY_REG_ADDR	dev/e1000/e1000_defines.h	103;"	d
E1000_MBVFICR	dev/e1000/e1000_regs.h	535;"	d
E1000_MBVFICR_VFACK_MASK	dev/e1000/e1000_mbx.h	59;"	d
E1000_MBVFICR_VFACK_VF1	dev/e1000/e1000_mbx.h	60;"	d
E1000_MBVFICR_VFREQ_MASK	dev/e1000/e1000_mbx.h	57;"	d
E1000_MBVFICR_VFREQ_VF1	dev/e1000/e1000_mbx.h	58;"	d
E1000_MBVFIMR	dev/e1000/e1000_regs.h	536;"	d
E1000_MCC	dev/e1000/e1000_regs.h	304;"	d
E1000_MCC	if_em_hw.h	708;"	d
E1000_MC_TBL_SIZE	if_em_hw.h	579;"	d
E1000_MDALIGN	if_em_hw.h	1457;"	d
E1000_MDEF	dev/e1000/e1000_regs.h	499;"	d
E1000_MDEF_PORT_623	dev/e1000/e1000_defines.h	180;"	d
E1000_MDEF_PORT_664	dev/e1000/e1000_defines.h	181;"	d
E1000_MDFB	dev/e1000/e1000_regs.h	549;"	d
E1000_MDIC	dev/e1000/e1000_regs.h	45;"	d
E1000_MDIC	if_em_hw.h	655;"	d
E1000_MDICNFG	dev/e1000/e1000_regs.h	46;"	d
E1000_MDICNFG_COM_MDIO	dev/e1000/e1000_defines.h	804;"	d
E1000_MDICNFG_EXT_MDIO	dev/e1000/e1000_defines.h	803;"	d
E1000_MDICNFG_PHY_MASK	dev/e1000/e1000_defines.h	805;"	d
E1000_MDICNFG_PHY_SHIFT	dev/e1000/e1000_defines.h	806;"	d
E1000_MDIC_DATA_MASK	if_em_hw.h	1168;"	d
E1000_MDIC_DEST	dev/e1000/e1000_defines.h	1321;"	d
E1000_MDIC_ERROR	dev/e1000/e1000_defines.h	1320;"	d
E1000_MDIC_ERROR	if_em_hw.h	1177;"	d
E1000_MDIC_INT_EN	if_em_hw.h	1176;"	d
E1000_MDIC_OP_READ	dev/e1000/e1000_defines.h	1318;"	d
E1000_MDIC_OP_READ	if_em_hw.h	1174;"	d
E1000_MDIC_OP_WRITE	dev/e1000/e1000_defines.h	1317;"	d
E1000_MDIC_OP_WRITE	if_em_hw.h	1173;"	d
E1000_MDIC_PHY_MASK	dev/e1000/e1000_defines.h	1315;"	d
E1000_MDIC_PHY_MASK	if_em_hw.h	1171;"	d
E1000_MDIC_PHY_SHIFT	dev/e1000/e1000_defines.h	1316;"	d
E1000_MDIC_PHY_SHIFT	if_em_hw.h	1172;"	d
E1000_MDIC_READY	dev/e1000/e1000_defines.h	1319;"	d
E1000_MDIC_READY	if_em_hw.h	1175;"	d
E1000_MDIC_REG_MASK	dev/e1000/e1000_defines.h	1313;"	d
E1000_MDIC_REG_MASK	if_em_hw.h	1169;"	d
E1000_MDIC_REG_SHIFT	dev/e1000/e1000_defines.h	1314;"	d
E1000_MDIC_REG_SHIFT	if_em_hw.h	1170;"	d
E1000_MGTPDC	dev/e1000/e1000_regs.h	337;"	d
E1000_MGTPDC	if_em_hw.h	741;"	d
E1000_MGTPRC	dev/e1000/e1000_regs.h	336;"	d
E1000_MGTPRC	if_em_hw.h	740;"	d
E1000_MGTPTC	dev/e1000/e1000_regs.h	338;"	d
E1000_MGTPTC	if_em_hw.h	742;"	d
E1000_MNG2HOST_PORT_623	dev/e1000/if_em.c	4830;"	d	file:
E1000_MNG2HOST_PORT_664	dev/e1000/if_em.c	4831;"	d	file:
E1000_MNG_DHCP_COMMAND_TIMEOUT	dev/e1000/e1000_manage.h	70;"	d
E1000_MNG_DHCP_COOKIE_LENGTH	dev/e1000/e1000_manage.h	68;"	d
E1000_MNG_DHCP_COOKIE_OFFSET	dev/e1000/e1000_manage.h	69;"	d
E1000_MNG_DHCP_COOKIE_STATUS_PARSING	dev/e1000/e1000_manage.h	72;"	d
E1000_MNG_DHCP_COOKIE_STATUS_VLAN	dev/e1000/e1000_manage.h	73;"	d
E1000_MNG_DHCP_TX_PAYLOAD_CMD	dev/e1000/e1000_manage.h	71;"	d
E1000_MNG_IAMT_MODE	dev/e1000/e1000_manage.h	67;"	d
E1000_MPC	dev/e1000/e1000_regs.h	301;"	d
E1000_MPC	if_em_hw.h	705;"	d
E1000_MPHY_ADDR_CTL	dev/e1000/e1000_defines.h	845;"	d
E1000_MPHY_ADDR_CTL_OFFSET_MASK	dev/e1000/e1000_defines.h	846;"	d
E1000_MPHY_DATA	dev/e1000/e1000_defines.h	847;"	d
E1000_MPHY_PCS_CLK_REG_DIGINELBEN	dev/e1000/e1000_defines.h	852;"	d
E1000_MPHY_PCS_CLK_REG_OFFSET	dev/e1000/e1000_defines.h	850;"	d
E1000_MPRC	dev/e1000/e1000_regs.h	325;"	d
E1000_MPRC	if_em_hw.h	729;"	d
E1000_MPTC	dev/e1000/e1000_regs.h	351;"	d
E1000_MPTC	if_em_hw.h	755;"	d
E1000_MRQC	dev/e1000/e1000_regs.h	524;"	d
E1000_MRQC_ENABLE_RSS_4Q	dev/e1000/e1000_82575.h	145;"	d
E1000_MRQC_ENABLE_RSS_8Q	dev/e1000/e1000_82575.h	151;"	d
E1000_MRQC_ENABLE_VMDQ	dev/e1000/e1000_82575.h	146;"	d
E1000_MRQC_ENABLE_VMDQ_RSS_2Q	dev/e1000/e1000_82575.h	147;"	d
E1000_MRQC_RSS_FIELD_IPV4	dev/e1000/e1000_defines.h	160;"	d
E1000_MRQC_RSS_FIELD_IPV4_TCP	dev/e1000/e1000_defines.h	159;"	d
E1000_MRQC_RSS_FIELD_IPV4_UDP	dev/e1000/e1000_82575.h	148;"	d
E1000_MRQC_RSS_FIELD_IPV6	dev/e1000/e1000_defines.h	162;"	d
E1000_MRQC_RSS_FIELD_IPV6_TCP	dev/e1000/e1000_defines.h	163;"	d
E1000_MRQC_RSS_FIELD_IPV6_TCP_EX	dev/e1000/e1000_defines.h	161;"	d
E1000_MRQC_RSS_FIELD_IPV6_UDP	dev/e1000/e1000_82575.h	149;"	d
E1000_MRQC_RSS_FIELD_IPV6_UDP_EX	dev/e1000/e1000_82575.h	150;"	d
E1000_MRQC_RSS_FIELD_MASK	dev/e1000/e1000_defines.h	158;"	d
E1000_MSCTRH	dev/e1000/e1000_regs.h	554;"	d
E1000_MSIXBM	dev/e1000/e1000_regs.h	528;"	d
E1000_MTA	dev/e1000/e1000_regs.h	466;"	d
E1000_MTA	if_em_hw.h	760;"	d
E1000_MUTEX	dev/e1000/e1000_osdep.h	86;"	d
E1000_MUTEX_DESTROY	dev/e1000/e1000_osdep.h	90;"	d
E1000_MUTEX_INIT	dev/e1000/e1000_osdep.h	87;"	d
E1000_MUTEX_LOCK	dev/e1000/e1000_osdep.h	91;"	d
E1000_MUTEX_TRYLOCK	dev/e1000/e1000_osdep.h	92;"	d
E1000_MUTEX_UNLOCK	dev/e1000/e1000_osdep.h	93;"	d
E1000_NOT_IMPLEMENTED	dev/e1000/e1000_defines.h	700;"	d
E1000_NUM_MTA_REGISTERS	if_em_hw.h	590;"	d
E1000_NUM_UNICAST	if_em_hw.h	578;"	d
E1000_NVM_APME_82575	dev/e1000/e1000_82575.h	404;"	d
E1000_NVM_CFG_DONE_PORT_0	dev/e1000/e1000_defines.h	1047;"	d
E1000_NVM_CFG_DONE_PORT_1	dev/e1000/e1000_defines.h	1048;"	d
E1000_NVM_CFG_DONE_PORT_2	dev/e1000/e1000_defines.h	1049;"	d
E1000_NVM_CFG_DONE_PORT_3	dev/e1000/e1000_defines.h	1050;"	d
E1000_NVM_GRANT_ATTEMPTS	dev/e1000/e1000_defines.h	980;"	d
E1000_NVM_INIT_CTRL2_MNGM	dev/e1000/e1000_82571.h	53;"	d
E1000_NVM_K1_CONFIG	dev/e1000/e1000_ich8lan.h	160;"	d
E1000_NVM_K1_ENABLE	dev/e1000/e1000_ich8lan.h	161;"	d
E1000_NVM_POLL_READ	dev/e1000/e1000_defines.h	1012;"	d
E1000_NVM_POLL_WRITE	dev/e1000/e1000_defines.h	1011;"	d
E1000_NVM_RW_ADDR_SHIFT	dev/e1000/e1000_defines.h	1010;"	d
E1000_NVM_RW_REG_DATA	dev/e1000/e1000_defines.h	1007;"	d
E1000_NVM_RW_REG_DONE	dev/e1000/e1000_defines.h	1008;"	d
E1000_NVM_RW_REG_START	dev/e1000/e1000_defines.h	1009;"	d
E1000_O2BGPTC	dev/e1000/e1000_regs.h	670;"	d
E1000_O2BSPC	dev/e1000/e1000_regs.h	671;"	d
E1000_P2VMAILBOX	dev/e1000/e1000_regs.h	557;"	d
E1000_P2VMAILBOX_ACK	dev/e1000/e1000_mbx.h	52;"	d
E1000_P2VMAILBOX_PFU	dev/e1000/e1000_mbx.h	54;"	d
E1000_P2VMAILBOX_RVFU	dev/e1000/e1000_mbx.h	55;"	d
E1000_P2VMAILBOX_STS	dev/e1000/e1000_mbx.h	51;"	d
E1000_P2VMAILBOX_VFU	dev/e1000/e1000_mbx.h	53;"	d
E1000_PBA	dev/e1000/e1000_regs.h	101;"	d
E1000_PBA	if_em_hw.h	674;"	d
E1000_PBACL	dev/e1000/e1000_regs.h	484;"	d
E1000_PBANUM_LENGTH	dev/e1000/e1000_defines.h	1076;"	d
E1000_PBA_10K	dev/e1000/e1000_defines.h	483;"	d
E1000_PBA_12K	dev/e1000/e1000_defines.h	484;"	d
E1000_PBA_14K	dev/e1000/e1000_defines.h	485;"	d
E1000_PBA_16K	dev/e1000/e1000_defines.h	486;"	d
E1000_PBA_16K	if_em_hw.h	1594;"	d
E1000_PBA_18K	dev/e1000/e1000_defines.h	487;"	d
E1000_PBA_20K	dev/e1000/e1000_defines.h	488;"	d
E1000_PBA_22K	dev/e1000/e1000_defines.h	489;"	d
E1000_PBA_22K	if_em_hw.h	1595;"	d
E1000_PBA_24K	dev/e1000/e1000_defines.h	490;"	d
E1000_PBA_24K	if_em_hw.h	1596;"	d
E1000_PBA_26K	dev/e1000/e1000_defines.h	491;"	d
E1000_PBA_30K	dev/e1000/e1000_defines.h	492;"	d
E1000_PBA_30K	if_em_hw.h	1597;"	d
E1000_PBA_32K	dev/e1000/e1000_defines.h	493;"	d
E1000_PBA_34K	dev/e1000/e1000_defines.h	494;"	d
E1000_PBA_35K	dev/e1000/e1000_defines.h	495;"	d
E1000_PBA_38K	dev/e1000/e1000_defines.h	496;"	d
E1000_PBA_40K	dev/e1000/e1000_defines.h	497;"	d
E1000_PBA_40K	if_em_hw.h	1598;"	d
E1000_PBA_48K	dev/e1000/e1000_defines.h	498;"	d
E1000_PBA_48K	if_em_hw.h	1599;"	d
E1000_PBA_64K	dev/e1000/e1000_defines.h	499;"	d
E1000_PBA_8K	dev/e1000/e1000_defines.h	482;"	d
E1000_PBA_ECC	dev/e1000/e1000_regs.h	80;"	d
E1000_PBA_ECC_CORR_EN	dev/e1000/e1000_defines.h	562;"	d
E1000_PBA_ECC_COUNTER_MASK	dev/e1000/e1000_defines.h	560;"	d
E1000_PBA_ECC_COUNTER_SHIFT	dev/e1000/e1000_defines.h	561;"	d
E1000_PBA_ECC_INT_EN	dev/e1000/e1000_defines.h	564;"	d
E1000_PBA_ECC_STAT_CLR	dev/e1000/e1000_defines.h	563;"	d
E1000_PBA_RXA_MASK	dev/e1000/e1000_defines.h	501;"	d
E1000_PBDIAG	dev/e1000/e1000_regs.h	149;"	d
E1000_PBECCSTS	dev/e1000/e1000_regs.h	103;"	d
E1000_PBECCSTS_CORR_ERR_CNT_MASK	dev/e1000/e1000_defines.h	506;"	d
E1000_PBECCSTS_ECC_ENABLE	dev/e1000/e1000_defines.h	509;"	d
E1000_PBECCSTS_UNCORR_ERR_CNT_MASK	dev/e1000/e1000_defines.h	507;"	d
E1000_PBECCSTS_UNCORR_ERR_CNT_SHIFT	dev/e1000/e1000_defines.h	508;"	d
E1000_PBRTH	dev/e1000/e1000_regs.h	141;"	d
E1000_PBRWAC	dev/e1000/e1000_regs.h	152;"	d
E1000_PBRWAC_PBE	dev/e1000/e1000_82575.h	442;"	d
E1000_PBRWAC_WALPB	dev/e1000/e1000_82575.h	441;"	d
E1000_PBS	dev/e1000/e1000_regs.h	102;"	d
E1000_PBSLAC	dev/e1000/e1000_regs.h	274;"	d
E1000_PBSLAD	dev/e1000/e1000_regs.h	275;"	d
E1000_PBS_16K	dev/e1000/e1000_defines.h	503;"	d
E1000_PCH2_RAR_ENTRIES	dev/e1000/e1000_ich8lan.h	105;"	d
E1000_PCH_LPT_RAR_ENTRIES	dev/e1000/e1000_ich8lan.h	106;"	d
E1000_PCH_RAICC	dev/e1000/e1000_ich8lan.h	244;"	d
E1000_PCIEERRSTS	dev/e1000/e1000_regs.h	648;"	d
E1000_PCIEMISC	dev/e1000/e1000_regs.h	645;"	d
E1000_PCIEMISC_LX_DECISION	dev/e1000/e1000_defines.h	1389;"	d
E1000_PCI_LTR_CAP_LPT	dev/e1000/e1000_ich8lan.h	258;"	d
E1000_PCS_ANADV	dev/e1000/e1000_regs.h	459;"	d
E1000_PCS_CFG0	dev/e1000/e1000_regs.h	442;"	d
E1000_PCS_CFG_PCS_EN	dev/e1000/e1000_defines.h	291;"	d
E1000_PCS_LCTL	dev/e1000/e1000_regs.h	443;"	d
E1000_PCS_LCTL_AN_ENABLE	dev/e1000/e1000_defines.h	300;"	d
E1000_PCS_LCTL_AN_RESTART	dev/e1000/e1000_defines.h	301;"	d
E1000_PCS_LCTL_AN_TIMEOUT	dev/e1000/e1000_defines.h	302;"	d
E1000_PCS_LCTL_FDV_FULL	dev/e1000/e1000_defines.h	296;"	d
E1000_PCS_LCTL_FLV_LINK_UP	dev/e1000/e1000_defines.h	292;"	d
E1000_PCS_LCTL_FORCE_FCTRL	dev/e1000/e1000_defines.h	299;"	d
E1000_PCS_LCTL_FORCE_LINK	dev/e1000/e1000_defines.h	298;"	d
E1000_PCS_LCTL_FSD	dev/e1000/e1000_defines.h	297;"	d
E1000_PCS_LCTL_FSV_10	dev/e1000/e1000_defines.h	293;"	d
E1000_PCS_LCTL_FSV_100	dev/e1000/e1000_defines.h	294;"	d
E1000_PCS_LCTL_FSV_1000	dev/e1000/e1000_defines.h	295;"	d
E1000_PCS_LPAB	dev/e1000/e1000_regs.h	460;"	d
E1000_PCS_LPABNP	dev/e1000/e1000_regs.h	462;"	d
E1000_PCS_LSTAT	dev/e1000/e1000_regs.h	444;"	d
E1000_PCS_LSTS_AN_COMPLETE	dev/e1000/e1000_defines.h	310;"	d
E1000_PCS_LSTS_DUPLEX_FULL	dev/e1000/e1000_defines.h	308;"	d
E1000_PCS_LSTS_LINK_OK	dev/e1000/e1000_defines.h	305;"	d
E1000_PCS_LSTS_SPEED_100	dev/e1000/e1000_defines.h	306;"	d
E1000_PCS_LSTS_SPEED_1000	dev/e1000/e1000_defines.h	307;"	d
E1000_PCS_LSTS_SYNK_OK	dev/e1000/e1000_defines.h	309;"	d
E1000_PCS_NPTX	dev/e1000/e1000_regs.h	461;"	d
E1000_PFCTOP	dev/e1000/e1000_regs.h	633;"	d
E1000_PFVFGORC	dev/e1000/e1000_regs.h	378;"	d
E1000_PFVFGORLBC	dev/e1000/e1000_regs.h	383;"	d
E1000_PFVFGOTC	dev/e1000/e1000_regs.h	379;"	d
E1000_PFVFGOTLBC	dev/e1000/e1000_regs.h	384;"	d
E1000_PFVFGPRC	dev/e1000/e1000_regs.h	376;"	d
E1000_PFVFGPRLBC	dev/e1000/e1000_regs.h	381;"	d
E1000_PFVFGPTC	dev/e1000/e1000_regs.h	377;"	d
E1000_PFVFGPTLBC	dev/e1000/e1000_regs.h	382;"	d
E1000_PFVFMPRC	dev/e1000/e1000_regs.h	380;"	d
E1000_PF_CONTROL_MSG	dev/e1000/e1000_mbx.h	90;"	d
E1000_PHY_ADDRESS	if_em_hw.h	2103;"	d
E1000_PHY_CTRL	dev/e1000/e1000_regs.h	99;"	d
E1000_PHY_CTRL_D0A_LPLU	dev/e1000/e1000_defines.h	471;"	d
E1000_PHY_CTRL_GBE_DISABLE	dev/e1000/e1000_defines.h	474;"	d
E1000_PHY_CTRL_NOND0A_GBE_DISABLE	dev/e1000/e1000_defines.h	473;"	d
E1000_PHY_CTRL_NOND0A_LPLU	dev/e1000/e1000_defines.h	472;"	d
E1000_PHY_LED0_IVRT	dev/e1000/e1000_defines.h	366;"	d
E1000_PHY_LED0_MASK	dev/e1000/e1000_defines.h	367;"	d
E1000_PHY_LED0_MODE_MASK	dev/e1000/e1000_defines.h	365;"	d
E1000_POEMB	dev/e1000/e1000_regs.h	100;"	d
E1000_PQGPTC	dev/e1000/e1000_regs.h	206;"	d
E1000_PRC1023	dev/e1000/e1000_regs.h	321;"	d
E1000_PRC1023	if_em_hw.h	725;"	d
E1000_PRC127	dev/e1000/e1000_regs.h	318;"	d
E1000_PRC127	if_em_hw.h	722;"	d
E1000_PRC1522	dev/e1000/e1000_regs.h	322;"	d
E1000_PRC1522	if_em_hw.h	726;"	d
E1000_PRC255	dev/e1000/e1000_regs.h	319;"	d
E1000_PRC255	if_em_hw.h	723;"	d
E1000_PRC511	dev/e1000/e1000_regs.h	320;"	d
E1000_PRC511	if_em_hw.h	724;"	d
E1000_PRC64	dev/e1000/e1000_regs.h	317;"	d
E1000_PRC64	if_em_hw.h	721;"	d
E1000_PROXYFC	dev/e1000/e1000_regs.h	651;"	d
E1000_PROXYFC_ARP	dev/e1000/e1000_defines.h	1406;"	d
E1000_PROXYFC_ARP_DIRECTED	dev/e1000/e1000_defines.h	1402;"	d
E1000_PROXYFC_BC	dev/e1000/e1000_defines.h	1401;"	d
E1000_PROXYFC_D0	dev/e1000/e1000_defines.h	1398;"	d
E1000_PROXYFC_EX	dev/e1000/e1000_defines.h	1399;"	d
E1000_PROXYFC_IPV4	dev/e1000/e1000_defines.h	1403;"	d
E1000_PROXYFC_IPV6	dev/e1000/e1000_defines.h	1404;"	d
E1000_PROXYFC_MC	dev/e1000/e1000_defines.h	1400;"	d
E1000_PROXYFC_NS	dev/e1000/e1000_defines.h	1405;"	d
E1000_PROXYS	dev/e1000/e1000_regs.h	650;"	d
E1000_PROXYS_CLEAR	dev/e1000/e1000_defines.h	1408;"	d
E1000_PSRCTL	dev/e1000/e1000_regs.h	135;"	d
E1000_PSRCTL_BSIZE0_MASK	dev/e1000/e1000_defines.h	231;"	d
E1000_PSRCTL_BSIZE0_SHIFT	dev/e1000/e1000_defines.h	236;"	d
E1000_PSRCTL_BSIZE1_MASK	dev/e1000/e1000_defines.h	232;"	d
E1000_PSRCTL_BSIZE1_SHIFT	dev/e1000/e1000_defines.h	237;"	d
E1000_PSRCTL_BSIZE2_MASK	dev/e1000/e1000_defines.h	233;"	d
E1000_PSRCTL_BSIZE2_SHIFT	dev/e1000/e1000_defines.h	238;"	d
E1000_PSRCTL_BSIZE3_MASK	dev/e1000/e1000_defines.h	234;"	d
E1000_PSRCTL_BSIZE3_SHIFT	dev/e1000/e1000_defines.h	239;"	d
E1000_PSRTYPE	dev/e1000/e1000_regs.h	261;"	d
E1000_PTC1023	dev/e1000/e1000_regs.h	349;"	d
E1000_PTC1023	if_em_hw.h	753;"	d
E1000_PTC127	dev/e1000/e1000_regs.h	346;"	d
E1000_PTC127	if_em_hw.h	750;"	d
E1000_PTC1522	dev/e1000/e1000_regs.h	350;"	d
E1000_PTC1522	if_em_hw.h	754;"	d
E1000_PTC255	dev/e1000/e1000_regs.h	347;"	d
E1000_PTC255	if_em_hw.h	751;"	d
E1000_PTC511	dev/e1000/e1000_regs.h	348;"	d
E1000_PTC511	if_em_hw.h	752;"	d
E1000_PTC64	dev/e1000/e1000_regs.h	345;"	d
E1000_PTC64	if_em_hw.h	749;"	d
E1000_QDE	dev/e1000/e1000_regs.h	540;"	d
E1000_RA	dev/e1000/e1000_regs.h	467;"	d
E1000_RA	if_em_hw.h	761;"	d
E1000_RA2	dev/e1000/e1000_regs.h	468;"	d
E1000_RADV	dev/e1000/e1000_regs.h	154;"	d
E1000_RADV	if_em_hw.h	684;"	d
E1000_RAH	dev/e1000/e1000_regs.h	264;"	d
E1000_RAH_AV	dev/e1000/e1000_defines.h	681;"	d
E1000_RAH_AV	if_em_hw.h	1215;"	d
E1000_RAH_MAC_ADDR_LEN	dev/e1000/e1000_defines.h	683;"	d
E1000_RAH_POOL_1	dev/e1000/e1000_defines.h	685;"	d
E1000_RAH_QUEUE_MASK_82575	dev/e1000/e1000_defines.h	684;"	d
E1000_RAID	dev/e1000/e1000_regs.h	258;"	d
E1000_RAL	dev/e1000/e1000_regs.h	262;"	d
E1000_RAL_MAC_ADDR_LEN	dev/e1000/e1000_defines.h	682;"	d
E1000_RAR_ENTRIES	dev/e1000/e1000_defines.h	680;"	d
E1000_RAR_ENTRIES	if_em_hw.h	440;"	d
E1000_RAR_ENTRIES_82575	dev/e1000/e1000_82575.h	52;"	d
E1000_RAR_ENTRIES_82576	dev/e1000/e1000_82575.h	53;"	d
E1000_RAR_ENTRIES_82580	dev/e1000/e1000_82575.h	54;"	d
E1000_RAR_ENTRIES_I350	dev/e1000/e1000_82575.h	55;"	d
E1000_RCTL	dev/e1000/e1000_regs.h	76;"	d
E1000_RCTL	if_em_hw.h	665;"	d
E1000_RCTL_BAM	dev/e1000/e1000_defines.h	197;"	d
E1000_RCTL_BAM	if_em_hw.h	1305;"	d
E1000_RCTL_BSEX	dev/e1000/e1000_defines.h	212;"	d
E1000_RCTL_BSEX	if_em_hw.h	1320;"	d
E1000_RCTL_CFI	dev/e1000/e1000_defines.h	209;"	d
E1000_RCTL_CFI	if_em_hw.h	1317;"	d
E1000_RCTL_CFIEN	dev/e1000/e1000_defines.h	208;"	d
E1000_RCTL_CFIEN	if_em_hw.h	1316;"	d
E1000_RCTL_DPF	dev/e1000/e1000_defines.h	210;"	d
E1000_RCTL_DPF	if_em_hw.h	1318;"	d
E1000_RCTL_DTYP_PS	dev/e1000/e1000_defines.h	193;"	d
E1000_RCTL_EN	dev/e1000/e1000_defines.h	185;"	d
E1000_RCTL_EN	if_em_hw.h	1287;"	d
E1000_RCTL_LBM_MAC	dev/e1000/e1000_defines.h	191;"	d
E1000_RCTL_LBM_MAC	if_em_hw.h	1293;"	d
E1000_RCTL_LBM_NO	dev/e1000/e1000_defines.h	190;"	d
E1000_RCTL_LBM_NO	if_em_hw.h	1292;"	d
E1000_RCTL_LBM_SLP	if_em_hw.h	1294;"	d
E1000_RCTL_LBM_TCVR	dev/e1000/e1000_defines.h	192;"	d
E1000_RCTL_LBM_TCVR	if_em_hw.h	1295;"	d
E1000_RCTL_LPE	dev/e1000/e1000_defines.h	189;"	d
E1000_RCTL_LPE	if_em_hw.h	1291;"	d
E1000_RCTL_MDR	if_em_hw.h	1304;"	d
E1000_RCTL_MO_0	if_em_hw.h	1300;"	d
E1000_RCTL_MO_1	if_em_hw.h	1301;"	d
E1000_RCTL_MO_2	if_em_hw.h	1302;"	d
E1000_RCTL_MO_3	dev/e1000/e1000_defines.h	196;"	d
E1000_RCTL_MO_3	if_em_hw.h	1303;"	d
E1000_RCTL_MO_SHIFT	dev/e1000/e1000_defines.h	195;"	d
E1000_RCTL_MO_SHIFT	if_em_hw.h	1299;"	d
E1000_RCTL_MPE	dev/e1000/e1000_defines.h	188;"	d
E1000_RCTL_MPE	if_em_hw.h	1290;"	d
E1000_RCTL_PMCF	dev/e1000/e1000_defines.h	211;"	d
E1000_RCTL_PMCF	if_em_hw.h	1319;"	d
E1000_RCTL_RDMTS_EIGTH	if_em_hw.h	1298;"	d
E1000_RCTL_RDMTS_HALF	dev/e1000/e1000_defines.h	194;"	d
E1000_RCTL_RDMTS_HALF	if_em_hw.h	1296;"	d
E1000_RCTL_RDMTS_QUAT	if_em_hw.h	1297;"	d
E1000_RCTL_RST	dev/e1000/e1000_defines.h	184;"	d
E1000_RCTL_RST	if_em_hw.h	1286;"	d
E1000_RCTL_SBP	dev/e1000/e1000_defines.h	186;"	d
E1000_RCTL_SBP	if_em_hw.h	1288;"	d
E1000_RCTL_SECRC	dev/e1000/e1000_defines.h	213;"	d
E1000_RCTL_SECRC	if_em_hw.h	1321;"	d
E1000_RCTL_SZ_1024	dev/e1000/e1000_defines.h	200;"	d
E1000_RCTL_SZ_1024	if_em_hw.h	1308;"	d
E1000_RCTL_SZ_16384	dev/e1000/e1000_defines.h	204;"	d
E1000_RCTL_SZ_16384	if_em_hw.h	1312;"	d
E1000_RCTL_SZ_2048	dev/e1000/e1000_defines.h	199;"	d
E1000_RCTL_SZ_2048	if_em_hw.h	1307;"	d
E1000_RCTL_SZ_256	dev/e1000/e1000_defines.h	202;"	d
E1000_RCTL_SZ_256	if_em_hw.h	1310;"	d
E1000_RCTL_SZ_4096	dev/e1000/e1000_defines.h	206;"	d
E1000_RCTL_SZ_4096	if_em_hw.h	1314;"	d
E1000_RCTL_SZ_512	dev/e1000/e1000_defines.h	201;"	d
E1000_RCTL_SZ_512	if_em_hw.h	1309;"	d
E1000_RCTL_SZ_8192	dev/e1000/e1000_defines.h	205;"	d
E1000_RCTL_SZ_8192	if_em_hw.h	1313;"	d
E1000_RCTL_UPE	dev/e1000/e1000_defines.h	187;"	d
E1000_RCTL_UPE	if_em_hw.h	1289;"	d
E1000_RCTL_VFE	dev/e1000/e1000_defines.h	207;"	d
E1000_RCTL_VFE	if_em_hw.h	1315;"	d
E1000_RDBAH	dev/e1000/e1000_regs.h	220;"	d
E1000_RDBAH	if_em_hw.h	678;"	d
E1000_RDBAL	dev/e1000/e1000_regs.h	218;"	d
E1000_RDBAL	if_em_hw.h	677;"	d
E1000_RDFH	dev/e1000/e1000_regs.h	136;"	d
E1000_RDFHS	dev/e1000/e1000_regs.h	138;"	d
E1000_RDFPC	dev/e1000/e1000_regs.h	140;"	d
E1000_RDFT	dev/e1000/e1000_regs.h	137;"	d
E1000_RDFTS	dev/e1000/e1000_regs.h	139;"	d
E1000_RDH	dev/e1000/e1000_regs.h	226;"	d
E1000_RDH	if_em_hw.h	680;"	d
E1000_RDH_RDH	if_em_hw.h	1327;"	d
E1000_RDLEN	dev/e1000/e1000_regs.h	222;"	d
E1000_RDLEN	if_em_hw.h	679;"	d
E1000_RDLEN_LEN	if_em_hw.h	1326;"	d
E1000_RDPUAD	dev/e1000/e1000_regs.h	145;"	d
E1000_RDPUCTL	dev/e1000/e1000_regs.h	148;"	d
E1000_RDPUMB	dev/e1000/e1000_regs.h	144;"	d
E1000_RDPURD	dev/e1000/e1000_regs.h	147;"	d
E1000_RDPUWD	dev/e1000/e1000_regs.h	146;"	d
E1000_RDT	dev/e1000/e1000_regs.h	231;"	d
E1000_RDT	if_em_hw.h	681;"	d
E1000_RDTR	dev/e1000/e1000_regs.h	153;"	d
E1000_RDTR	if_em_hw.h	682;"	d
E1000_RDT_DELAY	if_em_hw.h	1324;"	d
E1000_RDT_FPDB	if_em_hw.h	1325;"	d
E1000_RDT_RDT	if_em_hw.h	1328;"	d
E1000_READ_FLASH_REG	dev/e1000/e1000_osdep.h	207;"	d
E1000_READ_FLASH_REG16	dev/e1000/e1000_osdep.h	211;"	d
E1000_READ_OFFSET	dev/e1000/e1000_osdep.h	150;"	d
E1000_READ_OFFSET	if_em_osdep.h	179;"	d
E1000_READ_REG	dev/e1000/e1000_osdep.h	161;"	d
E1000_READ_REG	if_em_osdep.h	190;"	d
E1000_READ_REG_ARRAY	dev/e1000/e1000_osdep.h	171;"	d
E1000_READ_REG_ARRAY	if_em_osdep.h	196;"	d
E1000_READ_REG_ARRAY_BYTE	dev/e1000/e1000_osdep.h	184;"	d
E1000_READ_REG_ARRAY_DWORD	dev/e1000/e1000_osdep.h	181;"	d
E1000_READ_REG_IO	if_em_hw.h	333;"	d
E1000_RECEIVE_ERROR_COUNTER	dev/e1000/e1000_82571.h	59;"	d
E1000_RECEIVE_ERROR_MAX	dev/e1000/e1000_82571.h	60;"	d
E1000_REGISTER	dev/e1000/e1000_osdep.h	144;"	d
E1000_REGISTER_SET_SIZE	dev/e1000/e1000_regs.h	47;"	d
E1000_REG_OFFSET	if_em_osdep.h	187;"	d
E1000_RETA	dev/e1000/e1000_regs.h	529;"	d
E1000_REVISION_0	dev/e1000/e1000_hw.h	174;"	d
E1000_REVISION_1	dev/e1000/e1000_hw.h	175;"	d
E1000_REVISION_2	dev/e1000/e1000_hw.h	176;"	d
E1000_REVISION_3	dev/e1000/e1000_hw.h	177;"	d
E1000_REVISION_4	dev/e1000/e1000_hw.h	178;"	d
E1000_RFC	dev/e1000/e1000_regs.h	333;"	d
E1000_RFC	if_em_hw.h	737;"	d
E1000_RFCTL	dev/e1000/e1000_regs.h	465;"	d
E1000_RFCTL_ACK_DIS	dev/e1000/e1000_defines.h	426;"	d
E1000_RFCTL_EXTEN	dev/e1000/e1000_defines.h	427;"	d
E1000_RFCTL_IPV6_EX_DIS	dev/e1000/e1000_defines.h	428;"	d
E1000_RFCTL_LEF	dev/e1000/e1000_defines.h	430;"	d
E1000_RFCTL_NEW_IPV6_EXT_DIS	dev/e1000/e1000_defines.h	429;"	d
E1000_RFCTL_NFSR_DIS	dev/e1000/e1000_defines.h	425;"	d
E1000_RFCTL_NFSW_DIS	dev/e1000/e1000_defines.h	424;"	d
E1000_RJC	dev/e1000/e1000_regs.h	335;"	d
E1000_RJC	if_em_hw.h	739;"	d
E1000_RLEC	dev/e1000/e1000_regs.h	311;"	d
E1000_RLEC	if_em_hw.h	715;"	d
E1000_RLPIC	dev/e1000/e1000_regs.h	665;"	d
E1000_RLPML	dev/e1000/e1000_regs.h	464;"	d
E1000_RNBC	dev/e1000/e1000_regs.h	331;"	d
E1000_RNBC	if_em_hw.h	735;"	d
E1000_ROC	dev/e1000/e1000_regs.h	334;"	d
E1000_ROC	if_em_hw.h	738;"	d
E1000_RPLOLR	dev/e1000/e1000_regs.h	543;"	d
E1000_RPLOLR_STRCRC	dev/e1000/e1000_82575.h	460;"	d
E1000_RPLOLR_STRVLAN	dev/e1000/e1000_82575.h	459;"	d
E1000_RPTHC	dev/e1000/e1000_regs.h	449;"	d
E1000_RQDPC	dev/e1000/e1000_regs.h	235;"	d
E1000_RSRPD	dev/e1000/e1000_regs.h	257;"	d
E1000_RSRPD	if_em_hw.h	685;"	d
E1000_RSSIM	dev/e1000/e1000_regs.h	531;"	d
E1000_RSSIR	dev/e1000/e1000_regs.h	532;"	d
E1000_RSSRK	dev/e1000/e1000_regs.h	530;"	d
E1000_RTRBCNCR	dev/e1000/e1000_regs.h	631;"	d
E1000_RTRPCS	dev/e1000/e1000_regs.h	598;"	d
E1000_RTRPTCRC	dev/e1000/e1000_regs.h	606;"	d
E1000_RTRPTCRM	dev/e1000/e1000_regs.h	618;"	d
E1000_RTRPTCRS	dev/e1000/e1000_regs.h	616;"	d
E1000_RTRUP2TC	dev/e1000/e1000_regs.h	599;"	d
E1000_RTTBCNACH	dev/e1000/e1000_regs.h	635;"	d
E1000_RTTBCNACL	dev/e1000/e1000_regs.h	636;"	d
E1000_RTTBCNCP	dev/e1000/e1000_regs.h	630;"	d
E1000_RTTBCNCR	dev/e1000/e1000_regs.h	628;"	d
E1000_RTTBCNIDX	dev/e1000/e1000_regs.h	634;"	d
E1000_RTTBCNRC	dev/e1000/e1000_regs.h	626;"	d
E1000_RTTBCNRC_RF_DEC_MASK	dev/e1000/e1000_defines.h	1354;"	d
E1000_RTTBCNRC_RF_INT_MASK	dev/e1000/e1000_defines.h	1356;"	d
E1000_RTTBCNRC_RF_INT_SHIFT	dev/e1000/e1000_defines.h	1355;"	d
E1000_RTTBCNRC_RS_ENA	dev/e1000/e1000_defines.h	1353;"	d
E1000_RTTBCNRD	dev/e1000/e1000_regs.h	632;"	d
E1000_RTTBCNRM	dev/e1000/e1000_regs.h	622;"	d
E1000_RTTBCNRS	dev/e1000/e1000_regs.h	627;"	d
E1000_RTTBCNTG	dev/e1000/e1000_regs.h	629;"	d
E1000_RTTDCS	dev/e1000/e1000_regs.h	596;"	d
E1000_RTTDQSEL	dev/e1000/e1000_regs.h	623;"	d
E1000_RTTDTCRC	dev/e1000/e1000_regs.h	602;"	d
E1000_RTTDTCRM	dev/e1000/e1000_regs.h	610;"	d
E1000_RTTDTCRS	dev/e1000/e1000_regs.h	608;"	d
E1000_RTTDVMRC	dev/e1000/e1000_regs.h	624;"	d
E1000_RTTDVMRM	dev/e1000/e1000_regs.h	620;"	d
E1000_RTTDVMRS	dev/e1000/e1000_regs.h	625;"	d
E1000_RTTPCS	dev/e1000/e1000_regs.h	597;"	d
E1000_RTTPTCRC	dev/e1000/e1000_regs.h	604;"	d
E1000_RTTPTCRM	dev/e1000/e1000_regs.h	614;"	d
E1000_RTTPTCRS	dev/e1000/e1000_regs.h	612;"	d
E1000_RTTUP2TC	dev/e1000/e1000_regs.h	600;"	d
E1000_RUC	dev/e1000/e1000_regs.h	332;"	d
E1000_RUC	if_em_hw.h	736;"	d
E1000_RXCFGL	dev/e1000/e1000_82571.h	55;"	d
E1000_RXCSUM	dev/e1000/e1000_regs.h	463;"	d
E1000_RXCSUM	if_em_hw.h	759;"	d
E1000_RXCSUM_CRCOFL	dev/e1000/e1000_defines.h	419;"	d
E1000_RXCSUM_IPOFL	dev/e1000/e1000_defines.h	417;"	d
E1000_RXCSUM_IPOFL	if_em_hw.h	1385;"	d
E1000_RXCSUM_IPPCSE	dev/e1000/e1000_defines.h	420;"	d
E1000_RXCSUM_IPV6OFL	if_em_hw.h	1387;"	d
E1000_RXCSUM_PCSD	dev/e1000/e1000_defines.h	421;"	d
E1000_RXCSUM_PCSS_MASK	if_em_hw.h	1384;"	d
E1000_RXCSUM_TUOFL	dev/e1000/e1000_defines.h	418;"	d
E1000_RXCSUM_TUOFL	if_em_hw.h	1386;"	d
E1000_RXCTL	dev/e1000/e1000_regs.h	228;"	d
E1000_RXCW	dev/e1000/e1000_regs.h	79;"	d
E1000_RXCW	if_em_hw.h	668;"	d
E1000_RXCW_ANC	if_em_hw.h	1369;"	d
E1000_RXCW_C	dev/e1000/e1000_defines.h	737;"	d
E1000_RXCW_C	if_em_hw.h	1367;"	d
E1000_RXCW_CC	if_em_hw.h	1366;"	d
E1000_RXCW_CW	dev/e1000/e1000_defines.h	735;"	d
E1000_RXCW_CW	if_em_hw.h	1363;"	d
E1000_RXCW_IV	dev/e1000/e1000_defines.h	736;"	d
E1000_RXCW_IV	if_em_hw.h	1365;"	d
E1000_RXCW_NC	if_em_hw.h	1364;"	d
E1000_RXCW_SYNCH	dev/e1000/e1000_defines.h	738;"	d
E1000_RXCW_SYNCH	if_em_hw.h	1368;"	d
E1000_RXDADV_ERR_HBO	dev/e1000/e1000_82575.h	233;"	d
E1000_RXDADV_HDRBUFLEN_MASK	dev/e1000/e1000_82575.h	227;"	d
E1000_RXDADV_HDRBUFLEN_MASK	dev/e1000/e1000_vf.h	114;"	d
E1000_RXDADV_HDRBUFLEN_SHIFT	dev/e1000/e1000_82575.h	228;"	d
E1000_RXDADV_HDRBUFLEN_SHIFT	dev/e1000/e1000_vf.h	115;"	d
E1000_RXDADV_IPSEC_ERROR_AUTHENTICATION_FAILED	dev/e1000/e1000_82575.h	277;"	d
E1000_RXDADV_IPSEC_ERROR_BIT_MASK	dev/e1000/e1000_82575.h	274;"	d
E1000_RXDADV_IPSEC_ERROR_INVALID_LENGTH	dev/e1000/e1000_82575.h	276;"	d
E1000_RXDADV_IPSEC_ERROR_INVALID_PROTOCOL	dev/e1000/e1000_82575.h	275;"	d
E1000_RXDADV_IPSEC_STATUS_SECP	dev/e1000/e1000_82575.h	273;"	d
E1000_RXDADV_LNKSEC_ERROR_BAD_SIG	dev/e1000/e1000_82575.h	271;"	d
E1000_RXDADV_LNKSEC_ERROR_BIT_MASK	dev/e1000/e1000_82575.h	268;"	d
E1000_RXDADV_LNKSEC_ERROR_NO_SA_MATCH	dev/e1000/e1000_82575.h	269;"	d
E1000_RXDADV_LNKSEC_ERROR_REPLAY_ERROR	dev/e1000/e1000_82575.h	270;"	d
E1000_RXDADV_LNKSEC_STATUS_SECP	dev/e1000/e1000_82575.h	267;"	d
E1000_RXDADV_PKTTYPE_ETQF	dev/e1000/e1000_82575.h	261;"	d
E1000_RXDADV_PKTTYPE_ETQF_MASK	dev/e1000/e1000_82575.h	262;"	d
E1000_RXDADV_PKTTYPE_ETQF_SHIFT	dev/e1000/e1000_82575.h	263;"	d
E1000_RXDADV_PKTTYPE_IPSEC_AH	dev/e1000/e1000_82575.h	259;"	d
E1000_RXDADV_PKTTYPE_IPSEC_ESP	dev/e1000/e1000_82575.h	258;"	d
E1000_RXDADV_PKTTYPE_IPV4	dev/e1000/e1000_82575.h	249;"	d
E1000_RXDADV_PKTTYPE_IPV4_EX	dev/e1000/e1000_82575.h	250;"	d
E1000_RXDADV_PKTTYPE_IPV6	dev/e1000/e1000_82575.h	251;"	d
E1000_RXDADV_PKTTYPE_IPV6_EX	dev/e1000/e1000_82575.h	252;"	d
E1000_RXDADV_PKTTYPE_LINKSEC	dev/e1000/e1000_82575.h	260;"	d
E1000_RXDADV_PKTTYPE_NFS	dev/e1000/e1000_82575.h	256;"	d
E1000_RXDADV_PKTTYPE_NONE	dev/e1000/e1000_82575.h	248;"	d
E1000_RXDADV_PKTTYPE_SCTP	dev/e1000/e1000_82575.h	255;"	d
E1000_RXDADV_PKTTYPE_TCP	dev/e1000/e1000_82575.h	253;"	d
E1000_RXDADV_PKTTYPE_UDP	dev/e1000/e1000_82575.h	254;"	d
E1000_RXDADV_RSSTYPE_IPV4	dev/e1000/e1000_82575.h	238;"	d
E1000_RXDADV_RSSTYPE_IPV4_TCP	dev/e1000/e1000_82575.h	237;"	d
E1000_RXDADV_RSSTYPE_IPV4_UDP	dev/e1000/e1000_82575.h	243;"	d
E1000_RXDADV_RSSTYPE_IPV6	dev/e1000/e1000_82575.h	241;"	d
E1000_RXDADV_RSSTYPE_IPV6_EX	dev/e1000/e1000_82575.h	240;"	d
E1000_RXDADV_RSSTYPE_IPV6_TCP	dev/e1000/e1000_82575.h	239;"	d
E1000_RXDADV_RSSTYPE_IPV6_TCP_EX	dev/e1000/e1000_82575.h	242;"	d
E1000_RXDADV_RSSTYPE_IPV6_UDP	dev/e1000/e1000_82575.h	244;"	d
E1000_RXDADV_RSSTYPE_IPV6_UDP_EX	dev/e1000/e1000_82575.h	245;"	d
E1000_RXDADV_RSSTYPE_MASK	dev/e1000/e1000_82575.h	225;"	d
E1000_RXDADV_RSSTYPE_NONE	dev/e1000/e1000_82575.h	236;"	d
E1000_RXDADV_RSSTYPE_SHIFT	dev/e1000/e1000_82575.h	226;"	d
E1000_RXDADV_SPH	dev/e1000/e1000_82575.h	230;"	d
E1000_RXDADV_SPLITHEADER_EN	dev/e1000/e1000_82575.h	229;"	d
E1000_RXDADV_STAT_TS	dev/e1000/e1000_82575.h	231;"	d
E1000_RXDADV_STAT_TSIP	dev/e1000/e1000_82575.h	232;"	d
E1000_RXDCTL	dev/e1000/e1000_regs.h	233;"	d
E1000_RXDCTL	if_em_hw.h	683;"	d
E1000_RXDCTL_GRAN	if_em_hw.h	1340;"	d
E1000_RXDCTL_HTHRESH	if_em_hw.h	1338;"	d
E1000_RXDCTL_PTHRESH	if_em_hw.h	1337;"	d
E1000_RXDCTL_QUEUE_ENABLE	dev/e1000/e1000_82575.h	349;"	d
E1000_RXDCTL_QUEUE_ENABLE	dev/e1000/e1000_vf.h	51;"	d
E1000_RXDCTL_SWFLSH	dev/e1000/e1000_82575.h	350;"	d
E1000_RXDCTL_WTHRESH	if_em_hw.h	1339;"	d
E1000_RXDEXT_ERR_FRAME_ERR_MASK	dev/e1000/e1000_defines.h	151;"	d
E1000_RXDEXT_STATERR_CE	dev/e1000/e1000_defines.h	134;"	d
E1000_RXDEXT_STATERR_CXE	dev/e1000/e1000_defines.h	137;"	d
E1000_RXDEXT_STATERR_IPE	dev/e1000/e1000_defines.h	139;"	d
E1000_RXDEXT_STATERR_LB	dev/e1000/e1000_defines.h	133;"	d
E1000_RXDEXT_STATERR_RXE	dev/e1000/e1000_defines.h	140;"	d
E1000_RXDEXT_STATERR_SE	dev/e1000/e1000_defines.h	135;"	d
E1000_RXDEXT_STATERR_SEQ	dev/e1000/e1000_defines.h	136;"	d
E1000_RXDEXT_STATERR_TCPE	dev/e1000/e1000_defines.h	138;"	d
E1000_RXDEXT_STATERR_TST	dev/e1000/e1000_defines.h	132;"	d
E1000_RXDPS_HDRSTAT_HDRSP	dev/e1000/e1000_defines.h	165;"	d
E1000_RXD_ERR_CE	dev/e1000/e1000_defines.h	123;"	d
E1000_RXD_ERR_CE	if_em_hw.h	463;"	d
E1000_RXD_ERR_CXE	dev/e1000/e1000_defines.h	126;"	d
E1000_RXD_ERR_CXE	if_em_hw.h	466;"	d
E1000_RXD_ERR_FRAME_ERR_MASK	dev/e1000/e1000_defines.h	143;"	d
E1000_RXD_ERR_FRAME_ERR_MASK	if_em_hw.h	477;"	d
E1000_RXD_ERR_IPE	dev/e1000/e1000_defines.h	128;"	d
E1000_RXD_ERR_IPE	if_em_hw.h	468;"	d
E1000_RXD_ERR_RXE	dev/e1000/e1000_defines.h	129;"	d
E1000_RXD_ERR_RXE	if_em_hw.h	469;"	d
E1000_RXD_ERR_SE	dev/e1000/e1000_defines.h	124;"	d
E1000_RXD_ERR_SE	if_em_hw.h	464;"	d
E1000_RXD_ERR_SEQ	dev/e1000/e1000_defines.h	125;"	d
E1000_RXD_ERR_SEQ	if_em_hw.h	465;"	d
E1000_RXD_ERR_TCPE	dev/e1000/e1000_defines.h	127;"	d
E1000_RXD_ERR_TCPE	if_em_hw.h	467;"	d
E1000_RXD_SPC_CFI_MASK	if_em_hw.h	473;"	d
E1000_RXD_SPC_CFI_SHIFT	if_em_hw.h	474;"	d
E1000_RXD_SPC_PRI_MASK	if_em_hw.h	471;"	d
E1000_RXD_SPC_PRI_SHIFT	if_em_hw.h	472;"	d
E1000_RXD_SPC_VLAN_MASK	dev/e1000/e1000_defines.h	130;"	d
E1000_RXD_SPC_VLAN_MASK	if_em_hw.h	470;"	d
E1000_RXD_STAT_DD	dev/e1000/e1000_defines.h	112;"	d
E1000_RXD_STAT_DD	if_em_hw.h	456;"	d
E1000_RXD_STAT_DYNINT	dev/e1000/e1000_defines.h	122;"	d
E1000_RXD_STAT_EOP	dev/e1000/e1000_defines.h	113;"	d
E1000_RXD_STAT_EOP	if_em_hw.h	457;"	d
E1000_RXD_STAT_IPCS	dev/e1000/e1000_defines.h	118;"	d
E1000_RXD_STAT_IPCS	if_em_hw.h	461;"	d
E1000_RXD_STAT_IPIDV	dev/e1000/e1000_defines.h	120;"	d
E1000_RXD_STAT_IXSM	dev/e1000/e1000_defines.h	114;"	d
E1000_RXD_STAT_IXSM	if_em_hw.h	458;"	d
E1000_RXD_STAT_PIF	dev/e1000/e1000_defines.h	119;"	d
E1000_RXD_STAT_PIF	if_em_hw.h	462;"	d
E1000_RXD_STAT_TCPCS	dev/e1000/e1000_defines.h	117;"	d
E1000_RXD_STAT_TCPCS	if_em_hw.h	460;"	d
E1000_RXD_STAT_UDPCS	dev/e1000/e1000_defines.h	116;"	d
E1000_RXD_STAT_UDPV	dev/e1000/e1000_defines.h	121;"	d
E1000_RXD_STAT_VP	dev/e1000/e1000_defines.h	115;"	d
E1000_RXD_STAT_VP	if_em_hw.h	459;"	d
E1000_RXERRC	dev/e1000/e1000_regs.h	300;"	d
E1000_RXERRC	if_em_hw.h	704;"	d
E1000_RXMTRL	dev/e1000/e1000_regs.h	584;"	d
E1000_RXMTRL_PTP_V1_DELAY_REQ_MESSAGE	dev/e1000/e1000_defines.h	754;"	d
E1000_RXMTRL_PTP_V1_SYNC_MESSAGE	dev/e1000/e1000_defines.h	753;"	d
E1000_RXMTRL_PTP_V2_DELAY_REQ_MESSAGE	dev/e1000/e1000_defines.h	757;"	d
E1000_RXMTRL_PTP_V2_SYNC_MESSAGE	dev/e1000/e1000_defines.h	756;"	d
E1000_RXPBS	dev/e1000/e1000_regs.h	150;"	d
E1000_RXPBS_CFG_TS_EN	dev/e1000/e1000_defines.h	1391;"	d
E1000_RXPBS_SIZE_I210_MASK	dev/e1000/e1000_defines.h	1392;"	d
E1000_RXPBS_SIZE_MASK_82576	dev/e1000/e1000_82575.h	476;"	d
E1000_RXSATRH	dev/e1000/e1000_regs.h	572;"	d
E1000_RXSATRL	dev/e1000/e1000_regs.h	571;"	d
E1000_RXSTMPH	dev/e1000/e1000_regs.h	570;"	d
E1000_RXSTMPL	dev/e1000/e1000_regs.h	569;"	d
E1000_RXUDP	dev/e1000/e1000_regs.h	585;"	d
E1000_SAQF	dev/e1000/e1000_regs.h	588;"	d
E1000_SCC	dev/e1000/e1000_regs.h	302;"	d
E1000_SCC	if_em_hw.h	706;"	d
E1000_SCCRL	dev/e1000/e1000_regs.h	552;"	d
E1000_SCCTL	dev/e1000/e1000_regs.h	503;"	d
E1000_SCTL	dev/e1000/e1000_regs.h	55;"	d
E1000_SCTL_DISABLE_SERDES_LOOPBACK	dev/e1000/e1000_defines.h	413;"	d
E1000_SCTL_ENABLE_SERDES_LOOPBACK	dev/e1000/e1000_defines.h	414;"	d
E1000_SCVPC	dev/e1000/e1000_regs.h	457;"	d
E1000_SEC	dev/e1000/e1000_regs.h	309;"	d
E1000_SEC	if_em_hw.h	713;"	d
E1000_SFF_ETH_FLAGS_OFFSET	dev/e1000/e1000_phy.h	296;"	d
E1000_SFF_IDENTIFIER_OFFSET	dev/e1000/e1000_phy.h	292;"	d
E1000_SFF_IDENTIFIER_SFF	dev/e1000/e1000_phy.h	293;"	d
E1000_SFF_IDENTIFIER_SFP	dev/e1000/e1000_phy.h	294;"	d
E1000_SFF_VENDOR_OUI_AVAGO	dev/e1000/e1000_phy.h	312;"	d
E1000_SFF_VENDOR_OUI_FTL	dev/e1000/e1000_phy.h	311;"	d
E1000_SFF_VENDOR_OUI_INTEL	dev/e1000/e1000_phy.h	313;"	d
E1000_SFF_VENDOR_OUI_TYCO	dev/e1000/e1000_phy.h	310;"	d
E1000_SHADOW_RAM_WORDS	dev/e1000/e1000_hw.h	923;"	d
E1000_SHRAH	dev/e1000/e1000_regs.h	267;"	d
E1000_SHRAH_PCH_LPT	dev/e1000/e1000_ich8lan.h	76;"	d
E1000_SHRAL	dev/e1000/e1000_regs.h	266;"	d
E1000_SHRAL_PCH_LPT	dev/e1000/e1000_ich8lan.h	75;"	d
E1000_SPQF	dev/e1000/e1000_regs.h	590;"	d
E1000_SRRCTL	dev/e1000/e1000_regs.h	224;"	d
E1000_SRRCTL_BSIZEHDRSIZE_MASK	dev/e1000/e1000_82575.h	127;"	d
E1000_SRRCTL_BSIZEHDRSIZE_MASK	dev/e1000/e1000_vf.h	55;"	d
E1000_SRRCTL_BSIZEHDRSIZE_SHIFT	dev/e1000/e1000_82575.h	128;"	d
E1000_SRRCTL_BSIZEHDRSIZE_SHIFT	dev/e1000/e1000_vf.h	56;"	d
E1000_SRRCTL_BSIZEHDR_MASK	dev/e1000/e1000_82575.h	140;"	d
E1000_SRRCTL_BSIZEHDR_MASK	dev/e1000/e1000_vf.h	67;"	d
E1000_SRRCTL_BSIZEPKT_MASK	dev/e1000/e1000_82575.h	139;"	d
E1000_SRRCTL_BSIZEPKT_MASK	dev/e1000/e1000_vf.h	66;"	d
E1000_SRRCTL_BSIZEPKT_SHIFT	dev/e1000/e1000_82575.h	126;"	d
E1000_SRRCTL_BSIZEPKT_SHIFT	dev/e1000/e1000_vf.h	54;"	d
E1000_SRRCTL_DESCTYPE_ADV_ONEBUF	dev/e1000/e1000_82575.h	130;"	d
E1000_SRRCTL_DESCTYPE_ADV_ONEBUF	dev/e1000/e1000_vf.h	58;"	d
E1000_SRRCTL_DESCTYPE_HDR_REPLICATION	dev/e1000/e1000_82575.h	133;"	d
E1000_SRRCTL_DESCTYPE_HDR_REPLICATION	dev/e1000/e1000_vf.h	61;"	d
E1000_SRRCTL_DESCTYPE_HDR_REPLICATION_LARGE_PKT	dev/e1000/e1000_82575.h	134;"	d
E1000_SRRCTL_DESCTYPE_HDR_REPLICATION_LARGE_PKT	dev/e1000/e1000_vf.h	62;"	d
E1000_SRRCTL_DESCTYPE_HDR_SPLIT	dev/e1000/e1000_82575.h	131;"	d
E1000_SRRCTL_DESCTYPE_HDR_SPLIT	dev/e1000/e1000_vf.h	59;"	d
E1000_SRRCTL_DESCTYPE_HDR_SPLIT_ALWAYS	dev/e1000/e1000_82575.h	132;"	d
E1000_SRRCTL_DESCTYPE_HDR_SPLIT_ALWAYS	dev/e1000/e1000_vf.h	60;"	d
E1000_SRRCTL_DESCTYPE_LEGACY	dev/e1000/e1000_82575.h	129;"	d
E1000_SRRCTL_DESCTYPE_LEGACY	dev/e1000/e1000_vf.h	57;"	d
E1000_SRRCTL_DESCTYPE_MASK	dev/e1000/e1000_82575.h	135;"	d
E1000_SRRCTL_DESCTYPE_MASK	dev/e1000/e1000_vf.h	63;"	d
E1000_SRRCTL_DROP_EN	dev/e1000/e1000_82575.h	137;"	d
E1000_SRRCTL_DROP_EN	dev/e1000/e1000_vf.h	64;"	d
E1000_SRRCTL_TIMESTAMP	dev/e1000/e1000_82575.h	136;"	d
E1000_SRWR	dev/e1000/e1000_regs.h	155;"	d
E1000_SSVPC	dev/e1000/e1000_regs.h	428;"	d
E1000_STATUS	dev/e1000/e1000_regs.h	40;"	d
E1000_STATUS	if_em_hw.h	650;"	d
E1000_STATUS_ASDV	if_em_hw.h	1092;"	d
E1000_STATUS_BUS64	dev/e1000/e1000_defines.h	327;"	d
E1000_STATUS_BUS64	if_em_hw.h	1095;"	d
E1000_STATUS_FD	dev/e1000/e1000_defines.h	313;"	d
E1000_STATUS_FD	if_em_hw.h	1081;"	d
E1000_STATUS_FUNC_0	if_em_hw.h	1084;"	d
E1000_STATUS_FUNC_1	dev/e1000/e1000_defines.h	317;"	d
E1000_STATUS_FUNC_1	if_em_hw.h	1085;"	d
E1000_STATUS_FUNC_MASK	dev/e1000/e1000_defines.h	315;"	d
E1000_STATUS_FUNC_MASK	if_em_hw.h	1083;"	d
E1000_STATUS_FUNC_SHIFT	dev/e1000/e1000_defines.h	316;"	d
E1000_STATUS_GIO_MASTER_ENABLE	dev/e1000/e1000_defines.h	325;"	d
E1000_STATUS_LAN_ID_MASK	dev/e1000/e1000_defines.h	1415;"	d
E1000_STATUS_LAN_ID_OFFSET	dev/e1000/e1000_defines.h	1417;"	d
E1000_STATUS_LAN_INIT_DONE	dev/e1000/e1000_defines.h	323;"	d
E1000_STATUS_LU	dev/e1000/e1000_defines.h	314;"	d
E1000_STATUS_LU	if_em_hw.h	1082;"	d
E1000_STATUS_MTXCKOK	if_em_hw.h	1093;"	d
E1000_STATUS_PCI66	dev/e1000/e1000_defines.h	326;"	d
E1000_STATUS_PCI66	if_em_hw.h	1094;"	d
E1000_STATUS_PCIX_MODE	dev/e1000/e1000_defines.h	328;"	d
E1000_STATUS_PCIX_MODE	if_em_hw.h	1096;"	d
E1000_STATUS_PCIX_SPEED	dev/e1000/e1000_defines.h	329;"	d
E1000_STATUS_PCIX_SPEED	if_em_hw.h	1097;"	d
E1000_STATUS_PCIX_SPEED_100	dev/e1000/e1000_defines.h	333;"	d
E1000_STATUS_PCIX_SPEED_100	if_em_hw.h	1101;"	d
E1000_STATUS_PCIX_SPEED_133	dev/e1000/e1000_defines.h	334;"	d
E1000_STATUS_PCIX_SPEED_133	if_em_hw.h	1102;"	d
E1000_STATUS_PCIX_SPEED_66	dev/e1000/e1000_defines.h	332;"	d
E1000_STATUS_PCIX_SPEED_66	if_em_hw.h	1100;"	d
E1000_STATUS_PHYRA	dev/e1000/e1000_defines.h	324;"	d
E1000_STATUS_SPEED_10	dev/e1000/e1000_defines.h	320;"	d
E1000_STATUS_SPEED_10	if_em_hw.h	1089;"	d
E1000_STATUS_SPEED_100	dev/e1000/e1000_defines.h	321;"	d
E1000_STATUS_SPEED_100	if_em_hw.h	1090;"	d
E1000_STATUS_SPEED_1000	dev/e1000/e1000_defines.h	322;"	d
E1000_STATUS_SPEED_1000	if_em_hw.h	1091;"	d
E1000_STATUS_SPEED_MASK	dev/e1000/e1000_defines.h	319;"	d
E1000_STATUS_SPEED_MASK	if_em_hw.h	1088;"	d
E1000_STATUS_TBIMODE	if_em_hw.h	1087;"	d
E1000_STATUS_TXOFF	dev/e1000/e1000_defines.h	318;"	d
E1000_STATUS_TXOFF	if_em_hw.h	1086;"	d
E1000_STAT_DEV_RST_SET	dev/e1000/e1000_82575.h	57;"	d
E1000_STM_OPCODE	dev/e1000/e1000_i210.h	49;"	d
E1000_STM_OPCODE	dev/e1000/e1000_nvm.h	80;"	d
E1000_STRAP	dev/e1000/e1000_ich8lan.h	177;"	d
E1000_STRAP_SMBUS_ADDRESS_MASK	dev/e1000/e1000_ich8lan.h	178;"	d
E1000_STRAP_SMBUS_ADDRESS_SHIFT	dev/e1000/e1000_ich8lan.h	179;"	d
E1000_STRAP_SMT_FREQ_MASK	dev/e1000/e1000_ich8lan.h	180;"	d
E1000_STRAP_SMT_FREQ_SHIFT	dev/e1000/e1000_ich8lan.h	181;"	d
E1000_SUCCESS	dev/e1000/e1000_defines.h	688;"	d
E1000_SUCCESS	if_em_hw.h	250;"	d
E1000_SVCR	dev/e1000/e1000_regs.h	73;"	d
E1000_SVCR_OFF_EN	dev/e1000/e1000_ich8lan.h	261;"	d
E1000_SVCR_OFF_MASKINT	dev/e1000/e1000_ich8lan.h	262;"	d
E1000_SVCR_OFF_TIMER_MASK	dev/e1000/e1000_ich8lan.h	263;"	d
E1000_SVCR_OFF_TIMER_SHIFT	dev/e1000/e1000_ich8lan.h	264;"	d
E1000_SVT	dev/e1000/e1000_regs.h	74;"	d
E1000_SVT_OFF_HWM_MASK	dev/e1000/e1000_ich8lan.h	265;"	d
E1000_SWDSTS	dev/e1000/e1000_regs.h	123;"	d
E1000_SWFW_CSR_SM	dev/e1000/e1000_defines.h	245;"	d
E1000_SWFW_EEP_SM	dev/e1000/e1000_defines.h	242;"	d
E1000_SWFW_PHY0_SM	dev/e1000/e1000_defines.h	243;"	d
E1000_SWFW_PHY1_SM	dev/e1000/e1000_defines.h	244;"	d
E1000_SWFW_PHY2_SM	dev/e1000/e1000_defines.h	246;"	d
E1000_SWFW_PHY3_SM	dev/e1000/e1000_defines.h	247;"	d
E1000_SWFW_SW_MNG_SM	dev/e1000/e1000_defines.h	248;"	d
E1000_SWPBS	dev/e1000/e1000_regs.h	534;"	d
E1000_SWSM	dev/e1000/e1000_regs.h	511;"	d
E1000_SWSM2	dev/e1000/e1000_regs.h	514;"	d
E1000_SWSM2_LOCK	dev/e1000/e1000_defines.h	522;"	d
E1000_SWSM_DRV_LOAD	dev/e1000/e1000_defines.h	520;"	d
E1000_SWSM_SMBI	dev/e1000/e1000_defines.h	518;"	d
E1000_SWSM_SWESMBI	dev/e1000/e1000_defines.h	519;"	d
E1000_SW_FW_SYNC	dev/e1000/e1000_regs.h	500;"	d
E1000_SW_SYNCH_MB	dev/e1000/e1000_82575.h	56;"	d
E1000_SYMERRS	dev/e1000/e1000_regs.h	299;"	d
E1000_SYMERRS	if_em_hw.h	703;"	d
E1000_SYNQF	dev/e1000/e1000_regs.h	593;"	d
E1000_SYSTIMH	dev/e1000/e1000_regs.h	576;"	d
E1000_SYSTIML	dev/e1000/e1000_regs.h	575;"	d
E1000_SYSTIMR	dev/e1000/e1000_regs.h	581;"	d
E1000_TADV	dev/e1000/e1000_regs.h	295;"	d
E1000_TADV	if_em_hw.h	699;"	d
E1000_TARC	dev/e1000/e1000_regs.h	256;"	d
E1000_TARC0_ENABLE	dev/e1000/e1000_defines.h	410;"	d
E1000_TBT	dev/e1000/e1000_regs.h	94;"	d
E1000_TBT	if_em_hw.h	671;"	d
E1000_TCPTIMER	dev/e1000/e1000_regs.h	125;"	d
E1000_TCPTIMER_COUNT_ENABLE	dev/e1000/e1000_defines.h	579;"	d
E1000_TCPTIMER_COUNT_FINISH	dev/e1000/e1000_defines.h	580;"	d
E1000_TCPTIMER_KS	dev/e1000/e1000_defines.h	578;"	d
E1000_TCPTIMER_LOOP	dev/e1000/e1000_defines.h	581;"	d
E1000_TCTL	dev/e1000/e1000_regs.h	91;"	d
E1000_TCTL	if_em_hw.h	669;"	d
E1000_TCTL_BCE	if_em_hw.h	1374;"	d
E1000_TCTL_COLD	dev/e1000/e1000_defines.h	405;"	d
E1000_TCTL_COLD	if_em_hw.h	1377;"	d
E1000_TCTL_CT	dev/e1000/e1000_defines.h	404;"	d
E1000_TCTL_CT	if_em_hw.h	1376;"	d
E1000_TCTL_EN	dev/e1000/e1000_defines.h	402;"	d
E1000_TCTL_EN	if_em_hw.h	1373;"	d
E1000_TCTL_EXT	dev/e1000/e1000_regs.h	92;"	d
E1000_TCTL_EXT_COLD	dev/e1000/e1000_82575.h	462;"	d
E1000_TCTL_EXT_COLD_SHIFT	dev/e1000/e1000_82575.h	463;"	d
E1000_TCTL_EXT_GCEX_MASK	dev/e1000/e1000_80003es2lan.h	54;"	d
E1000_TCTL_MULR	dev/e1000/e1000_defines.h	407;"	d
E1000_TCTL_NRTU	if_em_hw.h	1381;"	d
E1000_TCTL_PBE	if_em_hw.h	1379;"	d
E1000_TCTL_PSP	dev/e1000/e1000_defines.h	403;"	d
E1000_TCTL_PSP	if_em_hw.h	1375;"	d
E1000_TCTL_RST	if_em_hw.h	1372;"	d
E1000_TCTL_RTLC	dev/e1000/e1000_defines.h	406;"	d
E1000_TCTL_RTLC	if_em_hw.h	1380;"	d
E1000_TCTL_SWXOFF	if_em_hw.h	1378;"	d
E1000_TDBAH	dev/e1000/e1000_regs.h	239;"	d
E1000_TDBAH	if_em_hw.h	693;"	d
E1000_TDBAL	dev/e1000/e1000_regs.h	237;"	d
E1000_TDBAL	if_em_hw.h	692;"	d
E1000_TDFH	dev/e1000/e1000_regs.h	279;"	d
E1000_TDFH	if_em_hw.h	687;"	d
E1000_TDFHS	dev/e1000/e1000_regs.h	281;"	d
E1000_TDFHS	if_em_hw.h	689;"	d
E1000_TDFPC	dev/e1000/e1000_regs.h	283;"	d
E1000_TDFPC	if_em_hw.h	691;"	d
E1000_TDFT	dev/e1000/e1000_regs.h	280;"	d
E1000_TDFT	if_em_hw.h	688;"	d
E1000_TDFTS	dev/e1000/e1000_regs.h	282;"	d
E1000_TDFTS	if_em_hw.h	690;"	d
E1000_TDH	dev/e1000/e1000_regs.h	243;"	d
E1000_TDH	if_em_hw.h	695;"	d
E1000_TDLEN	dev/e1000/e1000_regs.h	241;"	d
E1000_TDLEN	if_em_hw.h	694;"	d
E1000_TDPUAD	dev/e1000/e1000_regs.h	285;"	d
E1000_TDPUCTL	dev/e1000/e1000_regs.h	288;"	d
E1000_TDPUMB	dev/e1000/e1000_regs.h	284;"	d
E1000_TDPURD	dev/e1000/e1000_regs.h	287;"	d
E1000_TDPUWD	dev/e1000/e1000_regs.h	286;"	d
E1000_TDT	dev/e1000/e1000_regs.h	248;"	d
E1000_TDT	if_em_hw.h	696;"	d
E1000_TDWBAH	dev/e1000/e1000_regs.h	254;"	d
E1000_TDWBAL	dev/e1000/e1000_regs.h	252;"	d
E1000_THHIGHTC	dev/e1000/e1000_regs.h	656;"	d
E1000_THLOWTC	dev/e1000/e1000_regs.h	654;"	d
E1000_THMIDTC	dev/e1000/e1000_regs.h	655;"	d
E1000_THMJT	dev/e1000/e1000_regs.h	653;"	d
E1000_THSTAT	dev/e1000/e1000_regs.h	657;"	d
E1000_THSTAT_HIGH_EVENT	dev/e1000/e1000_defines.h	810;"	d
E1000_THSTAT_LINK_THROTTLE	dev/e1000/e1000_defines.h	812;"	d
E1000_THSTAT_LOW_EVENT	dev/e1000/e1000_defines.h	808;"	d
E1000_THSTAT_MID_EVENT	dev/e1000/e1000_defines.h	809;"	d
E1000_THSTAT_PWR_DOWN	dev/e1000/e1000_defines.h	811;"	d
E1000_TICKS_TO_USECS	if_em.c	113;"	d	file:
E1000_TIDV	dev/e1000/e1000_regs.h	294;"	d
E1000_TIDV	if_em_hw.h	697;"	d
E1000_TIMADJH	dev/e1000/e1000_regs.h	579;"	d
E1000_TIMADJL	dev/e1000/e1000_regs.h	578;"	d
E1000_TIMINCA	dev/e1000/e1000_regs.h	577;"	d
E1000_TIMINCA_16NS_SHIFT	dev/e1000/e1000_defines.h	778;"	d
E1000_TIMINCA_INCPERIOD_SHIFT	dev/e1000/e1000_defines.h	779;"	d
E1000_TIMINCA_INCVALUE_MASK	dev/e1000/e1000_defines.h	780;"	d
E1000_TIPG	dev/e1000/e1000_regs.h	93;"	d
E1000_TIPG	if_em_hw.h	670;"	d
E1000_TIPG_IPGR1_MASK	if_em_hw.h	1567;"	d
E1000_TIPG_IPGR1_SHIFT	dev/e1000/e1000_defines.h	447;"	d
E1000_TIPG_IPGR1_SHIFT	if_em_hw.h	1572;"	d
E1000_TIPG_IPGR2_MASK	if_em_hw.h	1568;"	d
E1000_TIPG_IPGR2_SHIFT	dev/e1000/e1000_defines.h	452;"	d
E1000_TIPG_IPGR2_SHIFT	if_em_hw.h	1576;"	d
E1000_TIPG_IPGT_MASK	dev/e1000/e1000_defines.h	443;"	d
E1000_TIPG_IPGT_MASK	if_em_hw.h	1566;"	d
E1000_TLPIC	dev/e1000/e1000_regs.h	664;"	d
E1000_TNCRS	dev/e1000/e1000_regs.h	308;"	d
E1000_TNCRS	if_em_hw.h	712;"	d
E1000_TORH	dev/e1000/e1000_regs.h	340;"	d
E1000_TORH	if_em_hw.h	744;"	d
E1000_TORL	dev/e1000/e1000_regs.h	339;"	d
E1000_TORL	if_em_hw.h	743;"	d
E1000_TOTH	dev/e1000/e1000_regs.h	342;"	d
E1000_TOTH	if_em_hw.h	746;"	d
E1000_TOTL	dev/e1000/e1000_regs.h	341;"	d
E1000_TOTL	if_em_hw.h	745;"	d
E1000_TPR	dev/e1000/e1000_regs.h	343;"	d
E1000_TPR	if_em_hw.h	747;"	d
E1000_TPT	dev/e1000/e1000_regs.h	344;"	d
E1000_TPT	if_em_hw.h	748;"	d
E1000_TQAVARBCTRL_QUEUE_PRI	dev/e1000/e1000_regs.h	196;"	d
E1000_TQAVCC_IDLE_SLOPE	dev/e1000/e1000_regs.h	201;"	d
E1000_TQAVCC_KEEP_CREDITS	dev/e1000/e1000_regs.h	202;"	d
E1000_TQAVCC_QUEUE_MODE	dev/e1000/e1000_regs.h	203;"	d
E1000_TQAVCTRL_FETCH_ARB	dev/e1000/e1000_regs.h	176;"	d
E1000_TQAVCTRL_FETCH_TIMER_DELTA	dev/e1000/e1000_regs.h	187;"	d
E1000_TQAVCTRL_FETCH_TIMER_DELTA_OFFSET	dev/e1000/e1000_regs.h	186;"	d
E1000_TQAVCTRL_FETCH_TIMER_ENABLE	dev/e1000/e1000_regs.h	178;"	d
E1000_TQAVCTRL_LAUNCH_ARB	dev/e1000/e1000_regs.h	180;"	d
E1000_TQAVCTRL_LAUNCH_TIMER_ENABLE	dev/e1000/e1000_regs.h	182;"	d
E1000_TQAVCTRL_MODE	dev/e1000/e1000_regs.h	174;"	d
E1000_TQAVCTRL_SP_WAIT_SR	dev/e1000/e1000_regs.h	184;"	d
E1000_TSAUXC	dev/e1000/e1000_regs.h	580;"	d
E1000_TSCTC	dev/e1000/e1000_regs.h	353;"	d
E1000_TSCTC	if_em_hw.h	757;"	d
E1000_TSCTFC	dev/e1000/e1000_regs.h	354;"	d
E1000_TSCTFC	if_em_hw.h	758;"	d
E1000_TSICR	dev/e1000/e1000_regs.h	582;"	d
E1000_TSICR_TXTS	dev/e1000/e1000_defines.h	782;"	d
E1000_TSIM	dev/e1000/e1000_regs.h	583;"	d
E1000_TSIM_TXTS	dev/e1000/e1000_defines.h	783;"	d
E1000_TSPMT	dev/e1000/e1000_regs.h	296;"	d
E1000_TSPMT	if_em_hw.h	700;"	d
E1000_TSYNCRXCFG	dev/e1000/e1000_regs.h	568;"	d
E1000_TSYNCRXCFG_PTP_V1_CTRLT_MASK	dev/e1000/e1000_defines.h	759;"	d
E1000_TSYNCRXCFG_PTP_V1_DELAY_REQ_MESSAGE	dev/e1000/e1000_defines.h	761;"	d
E1000_TSYNCRXCFG_PTP_V1_DELAY_RESP_MESSAGE	dev/e1000/e1000_defines.h	763;"	d
E1000_TSYNCRXCFG_PTP_V1_FOLLOWUP_MESSAGE	dev/e1000/e1000_defines.h	762;"	d
E1000_TSYNCRXCFG_PTP_V1_MANAGEMENT_MESSAGE	dev/e1000/e1000_defines.h	764;"	d
E1000_TSYNCRXCFG_PTP_V1_SYNC_MESSAGE	dev/e1000/e1000_defines.h	760;"	d
E1000_TSYNCRXCFG_PTP_V2_ANNOUNCE_MESSAGE	dev/e1000/e1000_defines.h	774;"	d
E1000_TSYNCRXCFG_PTP_V2_DELAY_REQ_MESSAGE	dev/e1000/e1000_defines.h	768;"	d
E1000_TSYNCRXCFG_PTP_V2_DELAY_RESP_MESSAGE	dev/e1000/e1000_defines.h	772;"	d
E1000_TSYNCRXCFG_PTP_V2_FOLLOWUP_MESSAGE	dev/e1000/e1000_defines.h	771;"	d
E1000_TSYNCRXCFG_PTP_V2_MANAGEMENT_MESSAGE	dev/e1000/e1000_defines.h	776;"	d
E1000_TSYNCRXCFG_PTP_V2_MSGID_MASK	dev/e1000/e1000_defines.h	766;"	d
E1000_TSYNCRXCFG_PTP_V2_PATH_DELAY_FOLLOWUP_MESSAGE	dev/e1000/e1000_defines.h	773;"	d
E1000_TSYNCRXCFG_PTP_V2_PATH_DELAY_REQ_MESSAGE	dev/e1000/e1000_defines.h	769;"	d
E1000_TSYNCRXCFG_PTP_V2_PATH_DELAY_RESP_MESSAGE	dev/e1000/e1000_defines.h	770;"	d
E1000_TSYNCRXCFG_PTP_V2_SIGNALLING_MESSAGE	dev/e1000/e1000_defines.h	775;"	d
E1000_TSYNCRXCFG_PTP_V2_SYNC_MESSAGE	dev/e1000/e1000_defines.h	767;"	d
E1000_TSYNCRXCTL	dev/e1000/e1000_regs.h	566;"	d
E1000_TSYNCRXCTL_ENABLED	dev/e1000/e1000_defines.h	750;"	d
E1000_TSYNCRXCTL_SYSCFI	dev/e1000/e1000_defines.h	751;"	d
E1000_TSYNCRXCTL_TYPE_ALL	dev/e1000/e1000_defines.h	748;"	d
E1000_TSYNCRXCTL_TYPE_EVENT_V2	dev/e1000/e1000_defines.h	749;"	d
E1000_TSYNCRXCTL_TYPE_L2_L4_V2	dev/e1000/e1000_defines.h	747;"	d
E1000_TSYNCRXCTL_TYPE_L2_V2	dev/e1000/e1000_defines.h	745;"	d
E1000_TSYNCRXCTL_TYPE_L4_V1	dev/e1000/e1000_defines.h	746;"	d
E1000_TSYNCRXCTL_TYPE_MASK	dev/e1000/e1000_defines.h	744;"	d
E1000_TSYNCRXCTL_VALID	dev/e1000/e1000_defines.h	743;"	d
E1000_TSYNCTXCTL	dev/e1000/e1000_regs.h	567;"	d
E1000_TSYNCTXCTL_ENABLED	dev/e1000/e1000_defines.h	741;"	d
E1000_TSYNCTXCTL_VALID	dev/e1000/e1000_defines.h	740;"	d
E1000_TTQF	dev/e1000/e1000_regs.h	592;"	d
E1000_TTQF_DISABLE_MASK	dev/e1000/e1000_defines.h	785;"	d
E1000_TTQF_MASK_ENABLE	dev/e1000/e1000_defines.h	797;"	d
E1000_TTQF_PROTOCOL_MASK	dev/e1000/e1000_defines.h	787;"	d
E1000_TTQF_PROTOCOL_SCTP	dev/e1000/e1000_defines.h	793;"	d
E1000_TTQF_PROTOCOL_SHIFT	dev/e1000/e1000_defines.h	794;"	d
E1000_TTQF_PROTOCOL_TCP	dev/e1000/e1000_defines.h	789;"	d
E1000_TTQF_PROTOCOL_UDP	dev/e1000/e1000_defines.h	791;"	d
E1000_TTQF_QUEUE_ENABLE	dev/e1000/e1000_defines.h	786;"	d
E1000_TTQF_QUEUE_SHIFT	dev/e1000/e1000_defines.h	795;"	d
E1000_TTQF_RX_QUEUE_MASK	dev/e1000/e1000_defines.h	796;"	d
E1000_TXCTL	dev/e1000/e1000_regs.h	245;"	d
E1000_TXCW	dev/e1000/e1000_regs.h	78;"	d
E1000_TXCW	if_em_hw.h	667;"	d
E1000_TXCW_ANE	dev/e1000/e1000_defines.h	732;"	d
E1000_TXCW_ANE	if_em_hw.h	1360;"	d
E1000_TXCW_ASM_DIR	dev/e1000/e1000_defines.h	730;"	d
E1000_TXCW_ASM_DIR	if_em_hw.h	1354;"	d
E1000_TXCW_CW	if_em_hw.h	1358;"	d
E1000_TXCW_FD	dev/e1000/e1000_defines.h	728;"	d
E1000_TXCW_FD	if_em_hw.h	1351;"	d
E1000_TXCW_HD	if_em_hw.h	1352;"	d
E1000_TXCW_NP	if_em_hw.h	1357;"	d
E1000_TXCW_PAUSE	dev/e1000/e1000_defines.h	729;"	d
E1000_TXCW_PAUSE	if_em_hw.h	1353;"	d
E1000_TXCW_PAUSE_MASK	dev/e1000/e1000_defines.h	731;"	d
E1000_TXCW_PAUSE_MASK	if_em_hw.h	1355;"	d
E1000_TXCW_RF	if_em_hw.h	1356;"	d
E1000_TXCW_TXC	if_em_hw.h	1359;"	d
E1000_TXDCTL	dev/e1000/e1000_regs.h	250;"	d
E1000_TXDCTL	if_em_hw.h	698;"	d
E1000_TXDCTL_COUNT_DESC	dev/e1000/e1000_defines.h	662;"	d
E1000_TXDCTL_FULL_TX_DESC_WB	dev/e1000/e1000_defines.h	659;"	d
E1000_TXDCTL_FULL_TX_DESC_WB	if_em_hw.h	1348;"	d
E1000_TXDCTL_GRAN	dev/e1000/e1000_defines.h	658;"	d
E1000_TXDCTL_GRAN	if_em_hw.h	1346;"	d
E1000_TXDCTL_HTHRESH	dev/e1000/e1000_defines.h	656;"	d
E1000_TXDCTL_HTHRESH	if_em_hw.h	1344;"	d
E1000_TXDCTL_LWTHRESH	if_em_hw.h	1347;"	d
E1000_TXDCTL_MAX_TX_DESC_PREFETCH	dev/e1000/e1000_defines.h	660;"	d
E1000_TXDCTL_PRIORITY	dev/e1000/e1000_82575.h	346;"	d
E1000_TXDCTL_PTHRESH	dev/e1000/e1000_defines.h	655;"	d
E1000_TXDCTL_PTHRESH	if_em_hw.h	1343;"	d
E1000_TXDCTL_QUEUE_ENABLE	dev/e1000/e1000_82575.h	343;"	d
E1000_TXDCTL_QUEUE_ENABLE	dev/e1000/e1000_vf.h	50;"	d
E1000_TXDCTL_SWFLSH	dev/e1000/e1000_82575.h	344;"	d
E1000_TXDCTL_WTHRESH	dev/e1000/e1000_defines.h	657;"	d
E1000_TXDCTL_WTHRESH	if_em_hw.h	1345;"	d
E1000_TXDMAC	dev/e1000/e1000_regs.h	259;"	d
E1000_TXDMAC	if_em_hw.h	686;"	d
E1000_TXDMAC_DPP	if_em_hw.h	1578;"	d
E1000_TXD_CMD_DEXT	dev/e1000/e1000_defines.h	388;"	d
E1000_TXD_CMD_DEXT	if_em_hw.h	515;"	d
E1000_TXD_CMD_EOP	dev/e1000/e1000_defines.h	383;"	d
E1000_TXD_CMD_EOP	if_em_hw.h	510;"	d
E1000_TXD_CMD_IC	dev/e1000/e1000_defines.h	385;"	d
E1000_TXD_CMD_IC	if_em_hw.h	512;"	d
E1000_TXD_CMD_IDE	dev/e1000/e1000_defines.h	390;"	d
E1000_TXD_CMD_IDE	if_em_hw.h	517;"	d
E1000_TXD_CMD_IFCS	dev/e1000/e1000_defines.h	384;"	d
E1000_TXD_CMD_IFCS	if_em_hw.h	511;"	d
E1000_TXD_CMD_IP	dev/e1000/e1000_defines.h	396;"	d
E1000_TXD_CMD_IP	if_em_hw.h	523;"	d
E1000_TXD_CMD_RPS	dev/e1000/e1000_defines.h	387;"	d
E1000_TXD_CMD_RPS	if_em_hw.h	514;"	d
E1000_TXD_CMD_RS	dev/e1000/e1000_defines.h	386;"	d
E1000_TXD_CMD_RS	if_em_hw.h	513;"	d
E1000_TXD_CMD_TCP	dev/e1000/e1000_defines.h	395;"	d
E1000_TXD_CMD_TCP	if_em_hw.h	522;"	d
E1000_TXD_CMD_TSE	dev/e1000/e1000_defines.h	397;"	d
E1000_TXD_CMD_TSE	if_em_hw.h	524;"	d
E1000_TXD_CMD_VLE	dev/e1000/e1000_defines.h	389;"	d
E1000_TXD_CMD_VLE	if_em_hw.h	516;"	d
E1000_TXD_DTYP_ADV_C	dev/e1000/e1000_82575.h	83;"	d
E1000_TXD_DTYP_ADV_D	dev/e1000/e1000_82575.h	84;"	d
E1000_TXD_DTYP_C	dev/e1000/e1000_defines.h	380;"	d
E1000_TXD_DTYP_C	if_em_hw.h	507;"	d
E1000_TXD_DTYP_D	dev/e1000/e1000_defines.h	379;"	d
E1000_TXD_DTYP_D	if_em_hw.h	506;"	d
E1000_TXD_EXTCMD_TSTAMP	dev/e1000/e1000_defines.h	399;"	d
E1000_TXD_POPTS_IXSM	dev/e1000/e1000_defines.h	381;"	d
E1000_TXD_POPTS_IXSM	if_em_hw.h	508;"	d
E1000_TXD_POPTS_TXSM	dev/e1000/e1000_defines.h	382;"	d
E1000_TXD_POPTS_TXSM	if_em_hw.h	509;"	d
E1000_TXD_STAT_DD	dev/e1000/e1000_defines.h	391;"	d
E1000_TXD_STAT_DD	if_em_hw.h	518;"	d
E1000_TXD_STAT_EC	dev/e1000/e1000_defines.h	392;"	d
E1000_TXD_STAT_EC	if_em_hw.h	519;"	d
E1000_TXD_STAT_LC	dev/e1000/e1000_defines.h	393;"	d
E1000_TXD_STAT_LC	if_em_hw.h	520;"	d
E1000_TXD_STAT_TC	dev/e1000/e1000_defines.h	398;"	d
E1000_TXD_STAT_TC	if_em_hw.h	525;"	d
E1000_TXD_STAT_TU	dev/e1000/e1000_defines.h	394;"	d
E1000_TXD_STAT_TU	if_em_hw.h	521;"	d
E1000_TXPB0S_SIZE_I210_MASK	dev/e1000/e1000_defines.h	1393;"	d
E1000_TXPBS	dev/e1000/e1000_regs.h	276;"	d
E1000_TXSTMPH	dev/e1000/e1000_regs.h	574;"	d
E1000_TXSTMPL	dev/e1000/e1000_regs.h	573;"	d
E1000_TXSWC	dev/e1000/e1000_regs.h	551;"	d
E1000_TX_BUFFER_SIZE	if_em_hw.h	1650;"	d
E1000_TX_HEAD_WB_ENABLE	dev/e1000/e1000_82575.h	142;"	d
E1000_TX_SEQNUM_WB_ENABLE	dev/e1000/e1000_82575.h	143;"	d
E1000_UFUSE	dev/e1000/e1000_regs.h	517;"	d
E1000_USECS_TO_TICKS	if_em.c	114;"	d	file:
E1000_UTA	dev/e1000/e1000_regs.h	544;"	d
E1000_V2PMAILBOX	dev/e1000/e1000_regs.h	556;"	d
E1000_V2PMAILBOX_ACK	dev/e1000/e1000_mbx.h	42;"	d
E1000_V2PMAILBOX_PFACK	dev/e1000/e1000_mbx.h	46;"	d
E1000_V2PMAILBOX_PFSTS	dev/e1000/e1000_mbx.h	45;"	d
E1000_V2PMAILBOX_PFU	dev/e1000/e1000_mbx.h	44;"	d
E1000_V2PMAILBOX_R2C_BITS	dev/e1000/e1000_mbx.h	49;"	d
E1000_V2PMAILBOX_REQ	dev/e1000/e1000_mbx.h	41;"	d
E1000_V2PMAILBOX_RSTD	dev/e1000/e1000_mbx.h	48;"	d
E1000_V2PMAILBOX_RSTI	dev/e1000/e1000_mbx.h	47;"	d
E1000_V2PMAILBOX_VFU	dev/e1000/e1000_mbx.h	43;"	d
E1000_VET	dev/e1000/e1000_regs.h	65;"	d
E1000_VET	if_em_hw.h	659;"	d
E1000_VFGORC	dev/e1000/e1000_regs.h	367;"	d
E1000_VFGORLBC	dev/e1000/e1000_regs.h	373;"	d
E1000_VFGOTC	dev/e1000/e1000_regs.h	370;"	d
E1000_VFGOTLBC	dev/e1000/e1000_regs.h	371;"	d
E1000_VFGPRC	dev/e1000/e1000_regs.h	366;"	d
E1000_VFGPRLBC	dev/e1000/e1000_regs.h	374;"	d
E1000_VFGPTC	dev/e1000/e1000_regs.h	369;"	d
E1000_VFGPTLBC	dev/e1000/e1000_regs.h	372;"	d
E1000_VFLRE	dev/e1000/e1000_regs.h	537;"	d
E1000_VFMAILBOX_SIZE	dev/e1000/e1000_mbx.h	62;"	d
E1000_VFMPRC	dev/e1000/e1000_regs.h	368;"	d
E1000_VFQA0	dev/e1000/e1000_regs.h	473;"	d
E1000_VFQA1	dev/e1000/e1000_regs.h	474;"	d
E1000_VFRE	dev/e1000/e1000_regs.h	538;"	d
E1000_VFTA	dev/e1000/e1000_regs.h	469;"	d
E1000_VFTA	if_em_hw.h	762;"	d
E1000_VFTA_ENTRIES	dev/e1000/e1000_defines.h	1418;"	d
E1000_VFTA_ENTRY_BIT_SHIFT_MASK	dev/e1000/e1000_manage.h	77;"	d
E1000_VFTA_ENTRY_MASK	dev/e1000/e1000_manage.h	76;"	d
E1000_VFTA_ENTRY_SHIFT	dev/e1000/e1000_manage.h	75;"	d
E1000_VFTE	dev/e1000/e1000_regs.h	539;"	d
E1000_VFVMBMEM	dev/e1000/e1000_regs.h	559;"	d
E1000_VF_INIT_TIMEOUT	dev/e1000/e1000_82575.h	454;"	d
E1000_VF_INIT_TIMEOUT	dev/e1000/e1000_vf.h	47;"	d
E1000_VF_MBX_INIT_DELAY	dev/e1000/e1000_mbx.h	93;"	d
E1000_VF_MBX_INIT_TIMEOUT	dev/e1000/e1000_mbx.h	92;"	d
E1000_VF_RESET	dev/e1000/e1000_mbx.h	78;"	d
E1000_VF_SET_LPE	dev/e1000/e1000_mbx.h	85;"	d
E1000_VF_SET_MAC_ADDR	dev/e1000/e1000_mbx.h	79;"	d
E1000_VF_SET_MULTICAST	dev/e1000/e1000_mbx.h	80;"	d
E1000_VF_SET_MULTICAST_COUNT_MASK	dev/e1000/e1000_mbx.h	81;"	d
E1000_VF_SET_MULTICAST_OVERFLOW	dev/e1000/e1000_mbx.h	82;"	d
E1000_VF_SET_PROMISC	dev/e1000/e1000_mbx.h	86;"	d
E1000_VF_SET_PROMISC_MULTICAST	dev/e1000/e1000_mbx.h	88;"	d
E1000_VF_SET_PROMISC_UNICAST	dev/e1000/e1000_mbx.h	87;"	d
E1000_VF_SET_VLAN	dev/e1000/e1000_mbx.h	83;"	d
E1000_VF_SET_VLAN_ADD	dev/e1000/e1000_mbx.h	84;"	d
E1000_VLAN_FILTER_TBL_SIZE	dev/e1000/e1000_defines.h	671;"	d
E1000_VLAN_FILTER_TBL_SIZE	if_em_hw.h	580;"	d
E1000_VLVF	dev/e1000/e1000_regs.h	562;"	d
E1000_VLVF_ARRAY_SIZE	dev/e1000/e1000_82575.h	444;"	d
E1000_VLVF_LVLAN	dev/e1000/e1000_82575.h	448;"	d
E1000_VLVF_POOLSEL_MASK	dev/e1000/e1000_82575.h	447;"	d
E1000_VLVF_POOLSEL_SHIFT	dev/e1000/e1000_82575.h	446;"	d
E1000_VLVF_VLANID_ENABLE	dev/e1000/e1000_82575.h	449;"	d
E1000_VLVF_VLANID_MASK	dev/e1000/e1000_82575.h	445;"	d
E1000_VMBMEM	dev/e1000/e1000_regs.h	558;"	d
E1000_VMOLR	dev/e1000/e1000_regs.h	560;"	d
E1000_VMOLR_AUPE	dev/e1000/e1000_82575.h	427;"	d
E1000_VMOLR_BAM	dev/e1000/e1000_82575.h	430;"	d
E1000_VMOLR_LPE	dev/e1000/e1000_82575.h	425;"	d
E1000_VMOLR_MPME	dev/e1000/e1000_82575.h	431;"	d
E1000_VMOLR_RLPML_MASK	dev/e1000/e1000_82575.h	424;"	d
E1000_VMOLR_ROMPE	dev/e1000/e1000_82575.h	428;"	d
E1000_VMOLR_ROPE	dev/e1000/e1000_82575.h	429;"	d
E1000_VMOLR_RSSE	dev/e1000/e1000_82575.h	426;"	d
E1000_VMOLR_STRCRC	dev/e1000/e1000_82575.h	433;"	d
E1000_VMOLR_STRVLAN	dev/e1000/e1000_82575.h	432;"	d
E1000_VMOLR_UPE	dev/e1000/e1000_82575.h	436;"	d
E1000_VMOLR_VPE	dev/e1000/e1000_82575.h	435;"	d
E1000_VMRCTL	dev/e1000/e1000_regs.h	546;"	d
E1000_VMRCTL_DOWNLINK_MIRROR_ENABLE	dev/e1000/e1000_82575.h	158;"	d
E1000_VMRCTL_MIRROR_DSTPORT_MASK	dev/e1000/e1000_82575.h	154;"	d
E1000_VMRCTL_MIRROR_PORT_SHIFT	dev/e1000/e1000_82575.h	153;"	d
E1000_VMRCTL_POOL_MIRROR_ENABLE	dev/e1000/e1000_82575.h	156;"	d
E1000_VMRCTL_UPLINK_MIRROR_ENABLE	dev/e1000/e1000_82575.h	157;"	d
E1000_VMRVLAN	dev/e1000/e1000_regs.h	547;"	d
E1000_VMRVM	dev/e1000/e1000_regs.h	548;"	d
E1000_VMVIR	dev/e1000/e1000_regs.h	563;"	d
E1000_VMVIR_VLANA_DEFAULT	dev/e1000/e1000_82575.h	451;"	d
E1000_VMVIR_VLANA_NEVER	dev/e1000/e1000_82575.h	452;"	d
E1000_VPDDIAG	dev/e1000/e1000_regs.h	126;"	d
E1000_VTCTRL	dev/e1000/e1000_regs.h	565;"	d
E1000_VTCTRL_RST	dev/e1000/e1000_defines.h	1413;"	d
E1000_VT_CTL	dev/e1000/e1000_regs.h	470;"	d
E1000_VT_CTL_DEFAULT_POOL_MASK	dev/e1000/e1000_82575.h	416;"	d
E1000_VT_CTL_DEFAULT_POOL_SHIFT	dev/e1000/e1000_82575.h	415;"	d
E1000_VT_CTL_DISABLE_DEF_POOL	dev/e1000/e1000_82575.h	420;"	d
E1000_VT_CTL_IGNORE_MAC	dev/e1000/e1000_82575.h	419;"	d
E1000_VT_CTL_VM_REPL_EN	dev/e1000/e1000_82575.h	421;"	d
E1000_VT_MSGINFO_MASK	dev/e1000/e1000_mbx.h	76;"	d
E1000_VT_MSGINFO_SHIFT	dev/e1000/e1000_mbx.h	74;"	d
E1000_VT_MSGTYPE_ACK	dev/e1000/e1000_mbx.h	68;"	d
E1000_VT_MSGTYPE_CTS	dev/e1000/e1000_mbx.h	72;"	d
E1000_VT_MSGTYPE_NACK	dev/e1000/e1000_mbx.h	70;"	d
E1000_WAKEUP_IP_ADDRESS_COUNT_MAX	if_em_hw.h	599;"	d
E1000_WDSTP	dev/e1000/e1000_regs.h	122;"	d
E1000_WRITE_FLASH_REG	dev/e1000/e1000_osdep.h	215;"	d
E1000_WRITE_FLASH_REG16	dev/e1000/e1000_osdep.h	219;"	d
E1000_WRITE_FLUSH	dev/e1000/e1000_osdep.h	147;"	d
E1000_WRITE_FLUSH	if_em_osdep.h	175;"	d
E1000_WRITE_OFFSET	dev/e1000/e1000_osdep.h	155;"	d
E1000_WRITE_OFFSET	if_em_osdep.h	183;"	d
E1000_WRITE_REG	dev/e1000/e1000_osdep.h	166;"	d
E1000_WRITE_REG	if_em_osdep.h	193;"	d
E1000_WRITE_REG_ARRAY	dev/e1000/e1000_osdep.h	176;"	d
E1000_WRITE_REG_ARRAY	if_em_osdep.h	199;"	d
E1000_WRITE_REG_ARRAY_BYTE	dev/e1000/e1000_osdep.h	189;"	d
E1000_WRITE_REG_ARRAY_DWORD	dev/e1000/e1000_osdep.h	182;"	d
E1000_WRITE_REG_ARRAY_WORD	dev/e1000/e1000_osdep.h	194;"	d
E1000_WRITE_REG_IO	dev/e1000/e1000_osdep.h	199;"	d
E1000_WRITE_REG_IO	if_em_hw.h	335;"	d
E1000_WUC	dev/e1000/e1000_regs.h	475;"	d
E1000_WUC	if_em_hw.h	763;"	d
E1000_WUC_APME	dev/e1000/e1000_defines.h	44;"	d
E1000_WUC_APME	if_em_hw.h	1391;"	d
E1000_WUC_APMPME	if_em_hw.h	1394;"	d
E1000_WUC_PHY_WAKE	dev/e1000/e1000_defines.h	46;"	d
E1000_WUC_PME_EN	dev/e1000/e1000_defines.h	45;"	d
E1000_WUC_PME_EN	if_em_hw.h	1392;"	d
E1000_WUC_PME_STATUS	if_em_hw.h	1393;"	d
E1000_WUC_SPM	if_em_hw.h	1395;"	d
E1000_WUFC	dev/e1000/e1000_regs.h	476;"	d
E1000_WUFC	if_em_hw.h	764;"	d
E1000_WUFC_ALL_FILTERS	if_em_hw.h	1410;"	d
E1000_WUFC_ARP	dev/e1000/e1000_defines.h	54;"	d
E1000_WUFC_ARP	if_em_hw.h	1403;"	d
E1000_WUFC_BC	dev/e1000/e1000_defines.h	53;"	d
E1000_WUFC_BC	if_em_hw.h	1402;"	d
E1000_WUFC_EX	dev/e1000/e1000_defines.h	51;"	d
E1000_WUFC_EX	if_em_hw.h	1400;"	d
E1000_WUFC_FLX0	dev/e1000/e1000_defines.h	56;"	d
E1000_WUFC_FLX0	if_em_hw.h	1406;"	d
E1000_WUFC_FLX1	if_em_hw.h	1407;"	d
E1000_WUFC_FLX2	if_em_hw.h	1408;"	d
E1000_WUFC_FLX3	if_em_hw.h	1409;"	d
E1000_WUFC_FLX_FILTERS	if_em_hw.h	1412;"	d
E1000_WUFC_FLX_OFFSET	if_em_hw.h	1411;"	d
E1000_WUFC_IPV4	dev/e1000/e1000_defines.h	55;"	d
E1000_WUFC_IPV4	if_em_hw.h	1404;"	d
E1000_WUFC_IPV6	if_em_hw.h	1405;"	d
E1000_WUFC_LNKC	dev/e1000/e1000_defines.h	49;"	d
E1000_WUFC_LNKC	if_em_hw.h	1398;"	d
E1000_WUFC_MAG	dev/e1000/e1000_defines.h	50;"	d
E1000_WUFC_MAG	if_em_hw.h	1399;"	d
E1000_WUFC_MC	dev/e1000/e1000_defines.h	52;"	d
E1000_WUFC_MC	if_em_hw.h	1401;"	d
E1000_WUPL	dev/e1000/e1000_regs.h	482;"	d
E1000_WUPL	if_em_hw.h	770;"	d
E1000_WUPL_LENGTH_MASK	if_em_hw.h	1455;"	d
E1000_WUPM	dev/e1000/e1000_regs.h	483;"	d
E1000_WUPM	if_em_hw.h	771;"	d
E1000_WUPM_REG	dev/e1000/e1000_regs.h	270;"	d
E1000_WUS	dev/e1000/e1000_regs.h	477;"	d
E1000_WUS	if_em_hw.h	765;"	d
E1000_WUS_ARP	if_em_hw.h	1420;"	d
E1000_WUS_BC	dev/e1000/e1000_defines.h	63;"	d
E1000_WUS_BC	if_em_hw.h	1419;"	d
E1000_WUS_EX	dev/e1000/e1000_defines.h	61;"	d
E1000_WUS_EX	if_em_hw.h	1417;"	d
E1000_WUS_FLX0	if_em_hw.h	1423;"	d
E1000_WUS_FLX1	if_em_hw.h	1424;"	d
E1000_WUS_FLX2	if_em_hw.h	1425;"	d
E1000_WUS_FLX3	if_em_hw.h	1426;"	d
E1000_WUS_FLX_FILTERS	if_em_hw.h	1427;"	d
E1000_WUS_IPV4	if_em_hw.h	1421;"	d
E1000_WUS_IPV6	if_em_hw.h	1422;"	d
E1000_WUS_LNKC	dev/e1000/e1000_defines.h	59;"	d
E1000_WUS_LNKC	if_em_hw.h	1415;"	d
E1000_WUS_MAG	dev/e1000/e1000_defines.h	60;"	d
E1000_WUS_MAG	if_em_hw.h	1416;"	d
E1000_WUS_MC	dev/e1000/e1000_defines.h	62;"	d
E1000_WUS_MC	if_em_hw.h	1418;"	d
E1000_WVBR	dev/e1000/e1000_regs.h	542;"	d
E1000_XOFFRXC	dev/e1000/e1000_regs.h	314;"	d
E1000_XOFFRXC	if_em_hw.h	718;"	d
E1000_XOFFTXC	dev/e1000/e1000_regs.h	315;"	d
E1000_XOFFTXC	if_em_hw.h	719;"	d
E1000_XONRXC	dev/e1000/e1000_regs.h	312;"	d
E1000_XONRXC	if_em_hw.h	716;"	d
E1000_XONTXC	dev/e1000/e1000_regs.h	313;"	d
E1000_XONTXC	if_em_hw.h	717;"	d
EEPROM_A8_OPCODE_SPI	if_em_hw.h	1470;"	d
EEPROM_CFG	if_em_hw.h	1494;"	d
EEPROM_CHECKSUM_REG	if_em_hw.h	1496;"	d
EEPROM_COMPAT	if_em_hw.h	1487;"	d
EEPROM_ERASE_OPCODE_MICROWIRE	if_em_hw.h	1462;"	d
EEPROM_EWDS_OPCODE_MICROWIRE	if_em_hw.h	1464;"	d
EEPROM_EWEN_OPCODE_MICROWIRE	if_em_hw.h	1463;"	d
EEPROM_FLASH_VERSION	if_em_hw.h	1495;"	d
EEPROM_ID_LED_SETTINGS	if_em_hw.h	1488;"	d
EEPROM_INIT_CONTROL1_REG	if_em_hw.h	1490;"	d
EEPROM_INIT_CONTROL2_REG	if_em_hw.h	1491;"	d
EEPROM_INIT_CONTROL3_PORT_A	if_em_hw.h	1493;"	d
EEPROM_INIT_CONTROL3_PORT_B	if_em_hw.h	1492;"	d
EEPROM_MAX_RETRY_SPI	if_em_hw.h	1467;"	d
EEPROM_NODE_ADDRESS_BYTE_0	if_em_hw.h	1541;"	d
EEPROM_PBA_BYTE_1	if_em_hw.h	1542;"	d
EEPROM_RDSR_OPCODE_SPI	if_em_hw.h	1473;"	d
EEPROM_READ_OPCODE_MICROWIRE	if_em_hw.h	1460;"	d
EEPROM_READ_OPCODE_SPI	if_em_hw.h	1468;"	d
EEPROM_RESERVED_WORD	if_em_hw.h	1544;"	d
EEPROM_SERDES_AMPLITUDE	if_em_hw.h	1489;"	d
EEPROM_SERDES_AMPLITUDE_MASK	if_em_hw.h	1521;"	d
EEPROM_SIZE_128B	if_em_hw.h	1483;"	d
EEPROM_SIZE_16KB	if_em_hw.h	1477;"	d
EEPROM_SIZE_1KB	if_em_hw.h	1481;"	d
EEPROM_SIZE_2KB	if_em_hw.h	1480;"	d
EEPROM_SIZE_4KB	if_em_hw.h	1479;"	d
EEPROM_SIZE_512B	if_em_hw.h	1482;"	d
EEPROM_SIZE_8KB	if_em_hw.h	1478;"	d
EEPROM_SIZE_MASK	if_em_hw.h	1484;"	d
EEPROM_STATUS_BP0_SPI	if_em_hw.h	1135;"	d
EEPROM_STATUS_BP1_SPI	if_em_hw.h	1136;"	d
EEPROM_STATUS_RDY_SPI	if_em_hw.h	1133;"	d
EEPROM_STATUS_WEN_SPI	if_em_hw.h	1134;"	d
EEPROM_STATUS_WPEN_SPI	if_em_hw.h	1137;"	d
EEPROM_SUM	if_em_hw.h	1538;"	d
EEPROM_WORD0A_66MHZ	if_em_hw.h	1528;"	d
EEPROM_WORD0A_FD	if_em_hw.h	1527;"	d
EEPROM_WORD0A_ILOS	if_em_hw.h	1524;"	d
EEPROM_WORD0A_LRST	if_em_hw.h	1526;"	d
EEPROM_WORD0A_SWDPIO	if_em_hw.h	1525;"	d
EEPROM_WORD0F_ANE	if_em_hw.h	1534;"	d
EEPROM_WORD0F_ASM_DIR	if_em_hw.h	1533;"	d
EEPROM_WORD0F_PAUSE	if_em_hw.h	1532;"	d
EEPROM_WORD0F_PAUSE_MASK	if_em_hw.h	1531;"	d
EEPROM_WORD0F_SWPDIO_EXT	if_em_hw.h	1535;"	d
EEPROM_WRDI_OPCODE_SPI	if_em_hw.h	1472;"	d
EEPROM_WREN_OPCODE_SPI	if_em_hw.h	1471;"	d
EEPROM_WRITE_OPCODE_MICROWIRE	if_em_hw.h	1461;"	d
EEPROM_WRITE_OPCODE_SPI	if_em_hw.h	1469;"	d
EEPROM_WRSR_OPCODE_SPI	if_em_hw.h	1474;"	d
EIMS_ENABLE_MASK	dev/e1000/e1000_82575.h	175;"	d
EM_82544_APME	dev/e1000/if_em.h	189;"	d
EM_82544_APME	dev/e1000/if_lem.h	192;"	d
EM_82547_PKT_THRESH	dev/e1000/if_lem.h	263;"	d
EM_82547_PKT_THRESH	if_em.c	954;"	d	file:
EM_82547_TX_FIFO_BEGIN	if_em.c	956;"	d	file:
EM_82547_TX_FIFO_SIZE	if_em.c	955;"	d	file:
EM_BAR_MEM_TYPE	dev/e1000/if_em.h	209;"	d
EM_BAR_MEM_TYPE	dev/e1000/if_lem.h	214;"	d
EM_BAR_MEM_TYPE_32BIT	dev/e1000/if_em.h	211;"	d
EM_BAR_MEM_TYPE_32BIT	dev/e1000/if_lem.h	216;"	d
EM_BAR_MEM_TYPE_64BIT	dev/e1000/if_em.h	212;"	d
EM_BAR_MEM_TYPE_64BIT	dev/e1000/if_lem.h	217;"	d
EM_BAR_MEM_TYPE_MASK	dev/e1000/if_em.h	210;"	d
EM_BAR_MEM_TYPE_MASK	dev/e1000/if_lem.h	215;"	d
EM_BAR_TYPE	dev/e1000/if_em.h	205;"	d
EM_BAR_TYPE	dev/e1000/if_lem.h	209;"	d
EM_BAR_TYPE_FLASH	dev/e1000/if_em.h	208;"	d
EM_BAR_TYPE_FLASH	dev/e1000/if_lem.h	213;"	d
EM_BAR_TYPE_IO	dev/e1000/if_lem.h	212;"	d
EM_BAR_TYPE_MASK	dev/e1000/if_em.h	206;"	d
EM_BAR_TYPE_MASK	dev/e1000/if_lem.h	210;"	d
EM_BAR_TYPE_MMEM	dev/e1000/if_em.h	207;"	d
EM_BAR_TYPE_MMEM	dev/e1000/if_lem.h	211;"	d
EM_CHECKSUM_FEATURES	if_em.h	139;"	d
EM_CORE_LOCK	dev/e1000/if_em.h	495;"	d
EM_CORE_LOCK	dev/e1000/if_lem.h	489;"	d
EM_CORE_LOCK_ASSERT	dev/e1000/if_em.h	502;"	d
EM_CORE_LOCK_ASSERT	dev/e1000/if_lem.h	496;"	d
EM_CORE_LOCK_DESTROY	dev/e1000/if_em.h	492;"	d
EM_CORE_LOCK_DESTROY	dev/e1000/if_lem.h	486;"	d
EM_CORE_LOCK_INIT	dev/e1000/if_em.h	486;"	d
EM_CORE_LOCK_INIT	dev/e1000/if_lem.h	480;"	d
EM_CORE_UNLOCK	dev/e1000/if_em.h	499;"	d
EM_CORE_UNLOCK	dev/e1000/if_lem.h	493;"	d
EM_DBA_ALIGN	dev/e1000/if_em.h	200;"	d
EM_DBA_ALIGN	dev/e1000/if_lem.h	204;"	d
EM_DEFAULT_PBA	dev/e1000/if_em.h	179;"	d
EM_DEFAULT_PBA	dev/e1000/if_lem.h	182;"	d
EM_DEFAULT_PBA	if_em.h	190;"	d
EM_DEFAULT_RXD	dev/e1000/if_em.h	73;"	d
EM_DEFAULT_RXD	dev/e1000/if_lem.h	75;"	d
EM_DEFAULT_TXD	dev/e1000/if_em.h	56;"	d
EM_DEFAULT_TXD	dev/e1000/if_lem.h	57;"	d
EM_EEPROM_APME	dev/e1000/if_em.h	188;"	d
EM_EEPROM_APME	dev/e1000/if_lem.h	191;"	d
EM_EIAC	dev/e1000/if_em.h	253;"	d
EM_EIAC	dev/e1000/if_lem.h	256;"	d
EM_FC_PAUSE_TIME	dev/e1000/if_em.h	187;"	d
EM_FC_PAUSE_TIME	dev/e1000/if_lem.h	190;"	d
EM_FIFO_HDR	dev/e1000/if_lem.h	262;"	d
EM_FIFO_HDR	if_em.c	953;"	d	file:
EM_FLASH	dev/e1000/if_em.h	176;"	d
EM_FLASH	dev/e1000/if_lem.h	179;"	d
EM_JUMBO_PBA	dev/e1000/if_em.h	178;"	d
EM_JUMBO_PBA	dev/e1000/if_lem.h	181;"	d
EM_JUMBO_PBA	if_em.h	189;"	d
EM_MASTER_SLAVE	dev/e1000/if_em.h	170;"	d
EM_MASTER_SLAVE	dev/e1000/if_lem.h	173;"	d
EM_MAX_INTR	if_em.h	134;"	d
EM_MAX_LOOP	dev/e1000/if_em.h	182;"	d
EM_MAX_LOOP	dev/e1000/if_lem.h	185;"	d
EM_MAX_RXD	dev/e1000/if_em.h	72;"	d
EM_MAX_RXD	dev/e1000/if_lem.h	74;"	d
EM_MAX_RXD	if_em.h	67;"	d
EM_MAX_RXD_82543	dev/e1000/if_lem.h	73;"	d
EM_MAX_SCATTER	dev/e1000/if_em.h	237;"	d
EM_MAX_SCATTER	dev/e1000/if_lem.h	241;"	d
EM_MAX_TXD	dev/e1000/if_em.h	55;"	d
EM_MAX_TXD	dev/e1000/if_lem.h	56;"	d
EM_MAX_TXD	if_em.h	54;"	d
EM_MAX_TXD_82543	dev/e1000/if_lem.h	55;"	d
EM_MIN_RXD	dev/e1000/if_em.h	71;"	d
EM_MIN_RXD	dev/e1000/if_lem.h	72;"	d
EM_MIN_TXD	dev/e1000/if_em.h	54;"	d
EM_MIN_TXD	dev/e1000/if_lem.h	54;"	d
EM_MMBA	if_em.h	186;"	d
EM_MSIX_BAR	dev/e1000/if_em.h	213;"	d
EM_MSIX_BAR	dev/e1000/if_lem.h	218;"	d
EM_MSIX_LINK	dev/e1000/if_em.h	242;"	d
EM_MSIX_MASK	dev/e1000/if_em.h	241;"	d
EM_MSIX_MASK	dev/e1000/if_lem.h	245;"	d
EM_PBA_BYTES_SHIFT	dev/e1000/if_lem.h	259;"	d
EM_PBA_TX_MASK	dev/e1000/if_lem.h	261;"	d
EM_QUEUE_HUNG	dev/e1000/if_em.h	193;"	d
EM_QUEUE_IDLE	dev/e1000/if_em.h	191;"	d
EM_QUEUE_WORKING	dev/e1000/if_em.h	192;"	d
EM_RADV	dev/e1000/if_em.h	133;"	d
EM_RADV	dev/e1000/if_lem.h	135;"	d
EM_RADV	if_em.h	126;"	d
EM_RDTR	dev/e1000/if_em.h	120;"	d
EM_RDTR	dev/e1000/if_lem.h	122;"	d
EM_RDTR	if_em.h	113;"	d
EM_ROUNDUP	if_em.h	187;"	d
EM_RXBUFFER_16384	if_em.h	204;"	d
EM_RXBUFFER_2048	if_em.h	201;"	d
EM_RXBUFFER_4096	if_em.h	202;"	d
EM_RXBUFFER_8192	if_em.h	203;"	d
EM_RX_LOCK	dev/e1000/if_em.h	498;"	d
EM_RX_LOCK	dev/e1000/if_lem.h	492;"	d
EM_RX_LOCK_ASSERT	dev/e1000/if_em.h	504;"	d
EM_RX_LOCK_DESTROY	dev/e1000/if_em.h	494;"	d
EM_RX_LOCK_DESTROY	dev/e1000/if_lem.h	488;"	d
EM_RX_LOCK_INIT	dev/e1000/if_em.h	490;"	d
EM_RX_LOCK_INIT	dev/e1000/if_lem.h	484;"	d
EM_RX_UNLOCK	dev/e1000/if_em.h	501;"	d
EM_RX_UNLOCK	dev/e1000/if_lem.h	495;"	d
EM_SMARTSPEED_DOWNSHIFT	dev/e1000/if_em.h	180;"	d
EM_SMARTSPEED_DOWNSHIFT	dev/e1000/if_lem.h	183;"	d
EM_SMARTSPEED_DOWNSHIFT	if_em.h	191;"	d
EM_SMARTSPEED_MAX	dev/e1000/if_em.h	181;"	d
EM_SMARTSPEED_MAX	dev/e1000/if_lem.h	184;"	d
EM_SMARTSPEED_MAX	if_em.h	192;"	d
EM_TADV	dev/e1000/if_em.h	99;"	d
EM_TADV	dev/e1000/if_lem.h	101;"	d
EM_TADV	if_em.h	92;"	d
EM_TICKS_TO_USECS	dev/e1000/if_em.c	341;"	d	file:
EM_TICKS_TO_USECS	dev/e1000/if_lem.c	295;"	d	file:
EM_TIDV	dev/e1000/if_em.h	85;"	d
EM_TIDV	dev/e1000/if_lem.h	87;"	d
EM_TIDV	if_em.h	79;"	d
EM_TSO_SEG_SIZE	dev/e1000/if_em.h	240;"	d
EM_TSO_SEG_SIZE	dev/e1000/if_lem.h	244;"	d
EM_TSO_SIZE	dev/e1000/if_em.h	239;"	d
EM_TSO_SIZE	dev/e1000/if_lem.h	243;"	d
EM_TX_CLEANUP_THRESHOLD	dev/e1000/if_em.h	144;"	d
EM_TX_CLEANUP_THRESHOLD	dev/e1000/if_lem.h	146;"	d
EM_TX_CLEANUP_THRESHOLD	if_em.h	150;"	d
EM_TX_HEAD_ADDR_SHIFT	dev/e1000/if_lem.h	260;"	d
EM_TX_LOCK	dev/e1000/if_em.h	496;"	d
EM_TX_LOCK	dev/e1000/if_lem.h	490;"	d
EM_TX_LOCK_ASSERT	dev/e1000/if_em.h	503;"	d
EM_TX_LOCK_ASSERT	dev/e1000/if_lem.h	497;"	d
EM_TX_LOCK_DESTROY	dev/e1000/if_em.h	493;"	d
EM_TX_LOCK_DESTROY	dev/e1000/if_lem.h	487;"	d
EM_TX_LOCK_INIT	dev/e1000/if_em.h	488;"	d
EM_TX_LOCK_INIT	dev/e1000/if_lem.h	482;"	d
EM_TX_OP_THRESHOLD	dev/e1000/if_lem.h	147;"	d
EM_TX_TIMEOUT	if_em.h	144;"	d
EM_TX_TRYLOCK	dev/e1000/if_em.h	497;"	d
EM_TX_TRYLOCK	dev/e1000/if_lem.h	491;"	d
EM_TX_UNLOCK	dev/e1000/if_em.h	500;"	d
EM_TX_UNLOCK	dev/e1000/if_lem.h	494;"	d
EM_USECS_TO_TICKS	dev/e1000/if_em.c	342;"	d	file:
EM_USECS_TO_TICKS	dev/e1000/if_lem.c	296;"	d	file:
EM_VENDOR_ID	dev/e1000/if_em.h	175;"	d
EM_VENDOR_ID	dev/e1000/if_lem.h	178;"	d
EM_VENDOR_ID	if_em.h	185;"	d
EM_VFTA_SIZE	dev/e1000/if_em.h	238;"	d
EM_VFTA_SIZE	dev/e1000/if_lem.h	242;"	d
EM_WATCHDOG	dev/e1000/if_em.h	138;"	d
EM_WATCHDOG	dev/e1000/if_lem.h	140;"	d
ENET_HEADER_SIZE	if_em_hw.h	387;"	d
ERROROUT	debug.h	72;"	d
ERROROUT1	debug.h	73;"	d
ERROROUT3	debug.h	74;"	d
ETHERMTU	if_compat.h	80;"	d
ETHERNET_ARP_TYPE	if_em_hw.h	405;"	d
ETHERNET_FCS_SIZE	dev/e1000/e1000_defines.h	457;"	d
ETHERNET_FCS_SIZE	if_em_hw.h	390;"	d
ETHERNET_IEEE_VLAN_TYPE	dev/e1000/e1000_defines.h	455;"	d
ETHERNET_IEEE_VLAN_TYPE	if_em_hw.h	403;"	d
ETHERNET_IP_TYPE	if_em_hw.h	404;"	d
ETHERTYPE_IEEE1588	dev/e1000/if_igb.h	250;"	d
ETHERTYPE_IEEE1588	dev/e1000/if_lem.h	266;"	d
ETHERTYPE_VLAN	if_compat.h	88;"	d
ETHER_ADDR_LEN	if_compat.h	72;"	d
ETHER_ALIGN	dev/e1000/if_em.h	186;"	d
ETHER_ALIGN	dev/e1000/if_igb.h	187;"	d
ETHER_ALIGN	dev/e1000/if_lem.h	189;"	d
ETHER_ALIGN	if_em.h	197;"	d
ETHER_BPF_MTAP	dev/e1000/if_lem.h	196;"	d
ETHER_CRC_LEN	if_compat.h	74;"	d
ETHER_HDR_LEN	if_compat.h	75;"	d
ETHER_MAX_LEN	if_compat.h	77;"	d
ETHER_MAX_LEN_JUMBO	if_compat.h	78;"	d
ETHER_MIN_LEN	if_compat.h	76;"	d
ETHER_TYPE_LEN	if_compat.h	73;"	d
ETHER_VLAN_ENCAP_LEN	if_compat.h	79;"	d
ETH_ADDR_LEN	dev/e1000/e1000_defines.h	1156;"	d
ETH_ADDR_LEN	dev/e1000/if_em.h	244;"	d
ETH_ADDR_LEN	dev/e1000/if_igb.h	234;"	d
ETH_ADDR_LEN	dev/e1000/if_lem.h	247;"	d
ETH_LENGTH_OF_ADDRESS	if_em_hw.h	372;"	d
ETH_ZLEN	dev/e1000/if_em.h	243;"	d
ETH_ZLEN	dev/e1000/if_igb.h	233;"	d
ETH_ZLEN	dev/e1000/if_lem.h	246;"	d
EVENT_LINK_CHANGED	if_em.h	/^	EVENT_LINK_CHANGED 		= 0x01,$/;"	e	enum:__anon59
FALSE	dev/e1000/e1000_osdep.h	76;"	d
FALSE	if_em_osdep.h	70;"	d
FC_DEFAULT_HI_THRESH	if_em_hw.h	1607;"	d
FC_DEFAULT_LO_THRESH	if_em_hw.h	1608;"	d
FC_DEFAULT_TX_TIMER	if_em_hw.h	1609;"	d
FFE_IDLE_ERR_COUNT_TIMEOUT_100	dev/e1000/e1000_82541.h	68;"	d
FFE_IDLE_ERR_COUNT_TIMEOUT_100	if_em_hw.h	1901;"	d
FFE_IDLE_ERR_COUNT_TIMEOUT_20	dev/e1000/e1000_82541.h	67;"	d
FFE_IDLE_ERR_COUNT_TIMEOUT_20	if_em_hw.h	1900;"	d
FIBER_LINK_UP_LIMIT	dev/e1000/e1000_defines.h	709;"	d
FLASH_GFPREG_BASE_MASK	dev/e1000/e1000_ich8lan.h	55;"	d
FLASH_SECTOR_ADDR_SHIFT	dev/e1000/e1000_ich8lan.h	56;"	d
FLOW_CONTROL_ADDRESS_HIGH	dev/e1000/e1000_defines.h	666;"	d
FLOW_CONTROL_ADDRESS_HIGH	if_em_hw.h	1603;"	d
FLOW_CONTROL_ADDRESS_LOW	dev/e1000/e1000_defines.h	665;"	d
FLOW_CONTROL_ADDRESS_LOW	if_em_hw.h	1602;"	d
FLOW_CONTROL_TYPE	dev/e1000/e1000_defines.h	667;"	d
FLOW_CONTROL_TYPE	if_em_hw.h	1604;"	d
FULL_DUPLEX	dev/e1000/e1000_defines.h	340;"	d
FULL_DUPLEX	if_em_hw.h	384;"	d
GG82563_CABLE_LENGTH_TABLE_SIZE	dev/e1000/e1000_80003es2lan.c	87;"	d	file:
GG82563_DSPD_CABLE_LENGTH	dev/e1000/e1000_80003es2lan.h	88;"	d
GG82563_E_PHY_ID	dev/e1000/e1000_defines.h	1175;"	d
GG82563_ICR_DIS_PADDING	dev/e1000/e1000_80003es2lan.h	101;"	d
GG82563_KMCR_PASS_FALSE_CARRIER	dev/e1000/e1000_80003es2lan.h	91;"	d
GG82563_MAX_KMRN_RETRY	dev/e1000/e1000_80003es2lan.h	94;"	d
GG82563_MIN_ALT_REG	dev/e1000/e1000_defines.h	1291;"	d
GG82563_MSCR_ASSERT_CRS_ON_TX	dev/e1000/e1000_80003es2lan.h	78;"	d
GG82563_MSCR_TX_CLK_1000MBPS_25	dev/e1000/e1000_80003es2lan.h	76;"	d
GG82563_MSCR_TX_CLK_1000MBPS_2_5	dev/e1000/e1000_80003es2lan.h	75;"	d
GG82563_MSCR_TX_CLK_100MBPS_25	dev/e1000/e1000_80003es2lan.h	74;"	d
GG82563_MSCR_TX_CLK_10MBPS_2_5	dev/e1000/e1000_80003es2lan.h	73;"	d
GG82563_MSCR_TX_CLK_MASK	dev/e1000/e1000_80003es2lan.h	72;"	d
GG82563_PAGE_SHIFT	dev/e1000/e1000_defines.h	1288;"	d
GG82563_PHY_DSP_DISTANCE	dev/e1000/e1000_defines.h	1302;"	d
GG82563_PHY_INBAND_CTRL	dev/e1000/e1000_defines.h	1310;"	d
GG82563_PHY_KMRN_MODE_CTRL	dev/e1000/e1000_defines.h	1306;"	d
GG82563_PHY_MAC_SPEC_CTRL	dev/e1000/e1000_defines.h	1300;"	d
GG82563_PHY_PAGE_SELECT	dev/e1000/e1000_defines.h	1295;"	d
GG82563_PHY_PAGE_SELECT_ALT	dev/e1000/e1000_defines.h	1297;"	d
GG82563_PHY_PWR_MGMT_CTRL	dev/e1000/e1000_defines.h	1307;"	d
GG82563_PHY_SPEC_CTRL	dev/e1000/e1000_defines.h	1294;"	d
GG82563_PHY_SPEC_CTRL_2	dev/e1000/e1000_defines.h	1296;"	d
GG82563_PMCR_ENABLE_ELECTRICAL_IDLE	dev/e1000/e1000_80003es2lan.h	98;"	d
GG82563_PSCR2_REVERSE_AUTO_NEG	dev/e1000/e1000_80003es2lan.h	68;"	d
GG82563_PSCR_CROSSOVER_MODE_AUTO	dev/e1000/e1000_80003es2lan.h	65;"	d
GG82563_PSCR_CROSSOVER_MODE_MASK	dev/e1000/e1000_80003es2lan.h	62;"	d
GG82563_PSCR_CROSSOVER_MODE_MDI	dev/e1000/e1000_80003es2lan.h	63;"	d
GG82563_PSCR_CROSSOVER_MODE_MDIX	dev/e1000/e1000_80003es2lan.h	64;"	d
GG82563_PSCR_POLARITY_REVERSAL_DISABLE	dev/e1000/e1000_80003es2lan.h	61;"	d
GG82563_REG	dev/e1000/e1000_defines.h	1289;"	d
GS40G_COPPER_SPEC	dev/e1000/e1000_phy.h	142;"	d
GS40G_CS_POWER_DOWN	dev/e1000/e1000_phy.h	143;"	d
GS40G_MAC_LB	dev/e1000/e1000_phy.h	140;"	d
GS40G_MAC_REG2	dev/e1000/e1000_phy.h	139;"	d
GS40G_MAC_SPEED_1G	dev/e1000/e1000_phy.h	141;"	d
GS40G_OFFSET_MASK	dev/e1000/e1000_phy.h	137;"	d
GS40G_PAGE_2	dev/e1000/e1000_phy.h	138;"	d
GS40G_PAGE_SELECT	dev/e1000/e1000_phy.h	135;"	d
GS40G_PAGE_SHIFT	dev/e1000/e1000_phy.h	136;"	d
HALF_DUPLEX	dev/e1000/e1000_defines.h	339;"	d
HALF_DUPLEX	if_em_hw.h	383;"	d
HV_COLC_LOWER	dev/e1000/e1000_ich8lan.h	152;"	d
HV_COLC_UPPER	dev/e1000/e1000_ich8lan.h	151;"	d
HV_DC_LOWER	dev/e1000/e1000_ich8lan.h	154;"	d
HV_DC_UPPER	dev/e1000/e1000_ich8lan.h	153;"	d
HV_ECOL_LOWER	dev/e1000/e1000_ich8lan.h	146;"	d
HV_ECOL_UPPER	dev/e1000/e1000_ich8lan.h	145;"	d
HV_INTC_FC_PAGE_START	dev/e1000/e1000_phy.h	168;"	d
HV_KMRN_FIFO_CTRLSTA	dev/e1000/e1000_ich8lan.h	194;"	d
HV_KMRN_FIFO_CTRLSTA_PREAMBLE_MASK	dev/e1000/e1000_ich8lan.h	195;"	d
HV_KMRN_FIFO_CTRLSTA_PREAMBLE_SHIFT	dev/e1000/e1000_ich8lan.h	196;"	d
HV_KMRN_MDIO_SLOW	dev/e1000/e1000_ich8lan.h	191;"	d
HV_KMRN_MODE_CTRL	dev/e1000/e1000_ich8lan.h	190;"	d
HV_LATECOL_LOWER	dev/e1000/e1000_ich8lan.h	150;"	d
HV_LATECOL_UPPER	dev/e1000/e1000_ich8lan.h	149;"	d
HV_LED_CONFIG	dev/e1000/e1000_ich8lan.h	138;"	d
HV_MCC_LOWER	dev/e1000/e1000_ich8lan.h	148;"	d
HV_MCC_UPPER	dev/e1000/e1000_ich8lan.h	147;"	d
HV_MUX_DATA_CTRL	dev/e1000/e1000_ich8lan.h	139;"	d
HV_MUX_DATA_CTRL_FORCE_SPEED	dev/e1000/e1000_ich8lan.h	141;"	d
HV_MUX_DATA_CTRL_GEN_TO_MAC	dev/e1000/e1000_ich8lan.h	140;"	d
HV_M_STATUS	dev/e1000/e1000_phy.h	215;"	d
HV_M_STATUS_AUTONEG_COMPLETE	dev/e1000/e1000_phy.h	216;"	d
HV_M_STATUS_LINK_UP	dev/e1000/e1000_phy.h	219;"	d
HV_M_STATUS_SPEED_1000	dev/e1000/e1000_phy.h	218;"	d
HV_M_STATUS_SPEED_MASK	dev/e1000/e1000_phy.h	217;"	d
HV_OEM_BITS	dev/e1000/e1000_ich8lan.h	184;"	d
HV_OEM_BITS_GBE_DIS	dev/e1000/e1000_ich8lan.h	186;"	d
HV_OEM_BITS_LPLU	dev/e1000/e1000_ich8lan.h	185;"	d
HV_OEM_BITS_RESTART_AN	dev/e1000/e1000_ich8lan.h	187;"	d
HV_PM_CTRL	dev/e1000/e1000_ich8lan.h	199;"	d
HV_PM_CTRL_PLL_STOP_IN_K1_GIGA	dev/e1000/e1000_ich8lan.h	200;"	d
HV_SCC_LOWER	dev/e1000/e1000_ich8lan.h	144;"	d
HV_SCC_UPPER	dev/e1000/e1000_ich8lan.h	143;"	d
HV_SMB_ADDR	dev/e1000/e1000_ich8lan.h	168;"	d
HV_SMB_ADDR_FREQ_HIGH_SHIFT	dev/e1000/e1000_ich8lan.h	174;"	d
HV_SMB_ADDR_FREQ_LOW_SHIFT	dev/e1000/e1000_ich8lan.h	173;"	d
HV_SMB_ADDR_FREQ_MASK	dev/e1000/e1000_ich8lan.h	172;"	d
HV_SMB_ADDR_MASK	dev/e1000/e1000_ich8lan.h	169;"	d
HV_SMB_ADDR_PEC_EN	dev/e1000/e1000_ich8lan.h	170;"	d
HV_SMB_ADDR_VALID	dev/e1000/e1000_ich8lan.h	171;"	d
HV_STATS_PAGE	dev/e1000/e1000_ich8lan.h	142;"	d
HV_TNCRS_LOWER	dev/e1000/e1000_ich8lan.h	156;"	d
HV_TNCRS_UPPER	dev/e1000/e1000_ich8lan.h	155;"	d
HW_DEBUGOUT	debug.h	47;"	d
HW_DEBUGOUT	debug.h	65;"	d
HW_DEBUGOUT	dev/e1000/if_em.h	233;"	d
HW_DEBUGOUT	dev/e1000/if_igb.h	222;"	d
HW_DEBUGOUT	dev/e1000/if_lem.h	237;"	d
HW_DEBUGOUT1	debug.h	48;"	d
HW_DEBUGOUT1	debug.h	66;"	d
HW_DEBUGOUT1	dev/e1000/if_em.h	234;"	d
HW_DEBUGOUT1	dev/e1000/if_igb.h	223;"	d
HW_DEBUGOUT1	dev/e1000/if_lem.h	238;"	d
HW_DEBUGOUT2	debug.h	49;"	d
HW_DEBUGOUT2	debug.h	67;"	d
HW_DEBUGOUT2	dev/e1000/if_em.h	235;"	d
HW_DEBUGOUT2	dev/e1000/if_igb.h	224;"	d
HW_DEBUGOUT2	dev/e1000/if_lem.h	239;"	d
HW_DEBUGOUT7	debug.h	50;"	d
HW_DEBUGOUT7	debug.h	68;"	d
I210_I_PHY_ID	dev/e1000/e1000_defines.h	1188;"	d
I217_CGFREG	dev/e1000/e1000_ich8lan.h	238;"	d
I217_CGFREG_ENABLE_MTA_RESET	dev/e1000/e1000_ich8lan.h	239;"	d
I217_EEE_ADVERTISEMENT	dev/e1000/e1000_ich8lan.h	227;"	d
I217_EEE_CAPABILITY	dev/e1000/e1000_ich8lan.h	226;"	d
I217_EEE_LP_ABILITY	dev/e1000/e1000_ich8lan.h	228;"	d
I217_EEE_PCS_STATUS	dev/e1000/e1000_ich8lan.h	225;"	d
I217_E_PHY_ID	dev/e1000/e1000_defines.h	1185;"	d
I217_MEMPWR	dev/e1000/e1000_ich8lan.h	240;"	d
I217_MEMPWR_DISABLE_SMB_RELEASE	dev/e1000/e1000_ich8lan.h	241;"	d
I217_PROXY_CTRL	dev/e1000/e1000_ich8lan.h	234;"	d
I217_PROXY_CTRL_AUTO_DISABLE	dev/e1000/e1000_ich8lan.h	235;"	d
I217_SxCTRL	dev/e1000/e1000_ich8lan.h	236;"	d
I217_SxCTRL_ENABLE_LPI_RESET	dev/e1000/e1000_ich8lan.h	237;"	d
I347AT4_E_PHY_ID	dev/e1000/e1000_defines.h	1173;"	d
I347AT4_PAGE_SELECT	dev/e1000/e1000_defines.h	1250;"	d
I347AT4_PCDC	dev/e1000/e1000_defines.h	1249;"	d
I347AT4_PCDC_CABLE_LENGTH_UNIT	dev/e1000/e1000_defines.h	1269;"	d
I347AT4_PCDL	dev/e1000/e1000_defines.h	1248;"	d
I347AT4_PSCR_DOWNSHIFT_1X	dev/e1000/e1000_defines.h	1259;"	d
I347AT4_PSCR_DOWNSHIFT_2X	dev/e1000/e1000_defines.h	1260;"	d
I347AT4_PSCR_DOWNSHIFT_3X	dev/e1000/e1000_defines.h	1261;"	d
I347AT4_PSCR_DOWNSHIFT_4X	dev/e1000/e1000_defines.h	1262;"	d
I347AT4_PSCR_DOWNSHIFT_5X	dev/e1000/e1000_defines.h	1263;"	d
I347AT4_PSCR_DOWNSHIFT_6X	dev/e1000/e1000_defines.h	1264;"	d
I347AT4_PSCR_DOWNSHIFT_7X	dev/e1000/e1000_defines.h	1265;"	d
I347AT4_PSCR_DOWNSHIFT_8X	dev/e1000/e1000_defines.h	1266;"	d
I347AT4_PSCR_DOWNSHIFT_ENABLE	dev/e1000/e1000_defines.h	1257;"	d
I347AT4_PSCR_DOWNSHIFT_MASK	dev/e1000/e1000_defines.h	1258;"	d
I350_I_PHY_ID	dev/e1000/e1000_defines.h	1187;"	d
I82577_ADDR_REG	dev/e1000/e1000_phy.h	170;"	d
I82577_CFG_ASSERT_CRS_ON_TX	dev/e1000/e1000_phy.h	172;"	d
I82577_CFG_ENABLE_DOWNSHIFT	dev/e1000/e1000_phy.h	173;"	d
I82577_CFG_REG	dev/e1000/e1000_phy.h	171;"	d
I82577_CTRL_REG	dev/e1000/e1000_phy.h	174;"	d
I82577_DSTATUS_CABLE_LENGTH	dev/e1000/e1000_phy.h	194;"	d
I82577_DSTATUS_CABLE_LENGTH_SHIFT	dev/e1000/e1000_phy.h	195;"	d
I82577_E_PHY_ID	dev/e1000/e1000_defines.h	1182;"	d
I82577_MSE_THRESHOLD	dev/e1000/e1000_ich8lan.h	216;"	d
I82577_PHY_CTRL2_AUTO_MDI_MDIX	dev/e1000/e1000_phy.h	190;"	d
I82577_PHY_CTRL2_MANUAL_MDIX	dev/e1000/e1000_phy.h	189;"	d
I82577_PHY_CTRL2_MDIX_CFG_MASK	dev/e1000/e1000_phy.h	191;"	d
I82577_PHY_CTRL_2	dev/e1000/e1000_phy.h	177;"	d
I82577_PHY_DIAG_STATUS	dev/e1000/e1000_phy.h	180;"	d
I82577_PHY_LBK_CTRL	dev/e1000/e1000_phy.h	178;"	d
I82577_PHY_STATUS2_MDIX	dev/e1000/e1000_phy.h	184;"	d
I82577_PHY_STATUS2_REV_POLARITY	dev/e1000/e1000_phy.h	183;"	d
I82577_PHY_STATUS2_SPEED_1000MBPS	dev/e1000/e1000_phy.h	186;"	d
I82577_PHY_STATUS2_SPEED_MASK	dev/e1000/e1000_phy.h	185;"	d
I82577_PHY_STATUS_2	dev/e1000/e1000_phy.h	179;"	d
I82578_ADDR_REG	dev/e1000/e1000_phy.h	169;"	d
I82578_EPSCR_DOWNSHIFT_COUNTER_MASK	dev/e1000/e1000_defines.h	1279;"	d
I82578_EPSCR_DOWNSHIFT_ENABLE	dev/e1000/e1000_defines.h	1278;"	d
I82578_E_PHY_ID	dev/e1000/e1000_defines.h	1183;"	d
I82579_EEE_1000_SUPPORTED	dev/e1000/e1000_ich8lan.h	224;"	d
I82579_EEE_100_SUPPORTED	dev/e1000/e1000_ich8lan.h	223;"	d
I82579_EEE_ADVERTISEMENT	dev/e1000/e1000_ich8lan.h	221;"	d
I82579_EEE_CAPABILITY	dev/e1000/e1000_ich8lan.h	220;"	d
I82579_EEE_LP_ABILITY	dev/e1000/e1000_ich8lan.h	222;"	d
I82579_EEE_PCS_STATUS	dev/e1000/e1000_ich8lan.h	219;"	d
I82579_EMI_ADDR	dev/e1000/e1000_ich8lan.h	212;"	d
I82579_EMI_DATA	dev/e1000/e1000_ich8lan.h	213;"	d
I82579_E_PHY_ID	dev/e1000/e1000_defines.h	1184;"	d
I82579_LPI_CTRL	dev/e1000/e1000_ich8lan.h	205;"	d
I82579_LPI_CTRL_1000_ENABLE	dev/e1000/e1000_ich8lan.h	207;"	d
I82579_LPI_CTRL_100_ENABLE	dev/e1000/e1000_ich8lan.h	206;"	d
I82579_LPI_CTRL_ENABLE_MASK	dev/e1000/e1000_ich8lan.h	208;"	d
I82579_LPI_CTRL_FORCE_PLL_LOCK_COUNT	dev/e1000/e1000_ich8lan.h	209;"	d
I82579_LPI_UPDATE_TIMER	dev/e1000/e1000_ich8lan.h	214;"	d
I82579_MSE_LINK_DOWN	dev/e1000/e1000_ich8lan.h	217;"	d
I82579_MSE_THRESHOLD	dev/e1000/e1000_ich8lan.h	215;"	d
I82579_RX_CONFIG	dev/e1000/e1000_ich8lan.h	218;"	d
I82580_I_PHY_ID	dev/e1000/e1000_defines.h	1186;"	d
ICH_CYCLE_ERASE	dev/e1000/e1000_ich8lan.h	53;"	d
ICH_CYCLE_READ	dev/e1000/e1000_ich8lan.h	51;"	d
ICH_CYCLE_WRITE	dev/e1000/e1000_ich8lan.h	52;"	d
ICH_FLASH_CYCLE_REPEAT_COUNT	dev/e1000/e1000_ich8lan.h	49;"	d
ICH_FLASH_ERASE_COMMAND_TIMEOUT	dev/e1000/e1000_ich8lan.h	47;"	d
ICH_FLASH_FADDR	dev/e1000/e1000_ich8lan.h	41;"	d
ICH_FLASH_FDATA0	dev/e1000/e1000_ich8lan.h	42;"	d
ICH_FLASH_GFPREG	dev/e1000/e1000_ich8lan.h	38;"	d
ICH_FLASH_HSFCTL	dev/e1000/e1000_ich8lan.h	40;"	d
ICH_FLASH_HSFSTS	dev/e1000/e1000_ich8lan.h	39;"	d
ICH_FLASH_LINEAR_ADDR_MASK	dev/e1000/e1000_ich8lan.h	48;"	d
ICH_FLASH_READ_COMMAND_TIMEOUT	dev/e1000/e1000_ich8lan.h	45;"	d
ICH_FLASH_SEG_SIZE_256	dev/e1000/e1000_ich8lan.h	58;"	d
ICH_FLASH_SEG_SIZE_4K	dev/e1000/e1000_ich8lan.h	59;"	d
ICH_FLASH_SEG_SIZE_64K	dev/e1000/e1000_ich8lan.h	61;"	d
ICH_FLASH_SEG_SIZE_8K	dev/e1000/e1000_ich8lan.h	60;"	d
ICH_FLASH_WRITE_COMMAND_TIMEOUT	dev/e1000/e1000_ich8lan.h	46;"	d
ID_LED_DEF1_DEF2	dev/e1000/e1000_defines.h	1118;"	d
ID_LED_DEF1_DEF2	if_em_hw.h	1505;"	d
ID_LED_DEF1_OFF2	dev/e1000/e1000_defines.h	1120;"	d
ID_LED_DEF1_OFF2	if_em_hw.h	1507;"	d
ID_LED_DEF1_ON2	dev/e1000/e1000_defines.h	1119;"	d
ID_LED_DEF1_ON2	if_em_hw.h	1506;"	d
ID_LED_DEFAULT	dev/e1000/e1000_defines.h	1114;"	d
ID_LED_DEFAULT	if_em_hw.h	1501;"	d
ID_LED_DEFAULT_82573	dev/e1000/e1000_82571.h	39;"	d
ID_LED_DEFAULT_82575_SERDES	dev/e1000/e1000_82575.h	38;"	d
ID_LED_DEFAULT_I210	dev/e1000/e1000_i210.h	80;"	d
ID_LED_DEFAULT_I210_SERDES	dev/e1000/e1000_i210.h	83;"	d
ID_LED_DEFAULT_ICH8LAN	dev/e1000/e1000_ich8lan.h	78;"	d
ID_LED_OFF1_DEF2	dev/e1000/e1000_defines.h	1124;"	d
ID_LED_OFF1_DEF2	if_em_hw.h	1511;"	d
ID_LED_OFF1_OFF2	dev/e1000/e1000_defines.h	1126;"	d
ID_LED_OFF1_OFF2	if_em_hw.h	1513;"	d
ID_LED_OFF1_ON2	dev/e1000/e1000_defines.h	1125;"	d
ID_LED_OFF1_ON2	if_em_hw.h	1512;"	d
ID_LED_ON1_DEF2	dev/e1000/e1000_defines.h	1121;"	d
ID_LED_ON1_DEF2	if_em_hw.h	1508;"	d
ID_LED_ON1_OFF2	dev/e1000/e1000_defines.h	1123;"	d
ID_LED_ON1_OFF2	if_em_hw.h	1510;"	d
ID_LED_ON1_ON2	dev/e1000/e1000_defines.h	1122;"	d
ID_LED_ON1_ON2	if_em_hw.h	1509;"	d
ID_LED_RESERVED_0000	dev/e1000/e1000_defines.h	1112;"	d
ID_LED_RESERVED_0000	if_em_hw.h	1499;"	d
ID_LED_RESERVED_F746	dev/e1000/e1000_82571.h	38;"	d
ID_LED_RESERVED_FFFF	dev/e1000/e1000_defines.h	1113;"	d
ID_LED_RESERVED_FFFF	if_em_hw.h	1500;"	d
IEEE_ESR_1000T_FD_CAPS	if_em_hw.h	1905;"	d
IEEE_ESR_1000T_HD_CAPS	if_em_hw.h	1904;"	d
IEEE_ESR_1000X_FD_CAPS	if_em_hw.h	1907;"	d
IEEE_ESR_1000X_HD_CAPS	if_em_hw.h	1906;"	d
IFCAP_HWCSUM	if_compat.h	34;"	d
IFCAP_RXCSUM	if_compat.h	38;"	d
IFCAP_TXCSUM	if_compat.h	37;"	d
IFCAP_VLAN_HWTAGGING	if_compat.h	35;"	d
IFCAP_VLAN_MTU	if_compat.h	36;"	d
IFE_C_E_PHY_ID	dev/e1000/e1000_defines.h	1179;"	d
IFE_E_PHY_ID	dev/e1000/e1000_defines.h	1177;"	d
IFE_PESC_POLARITY_REVERSED	dev/e1000/e1000_phy.h	275;"	d
IFE_PHY_EXTENDED_STATUS_CONTROL	dev/e1000/e1000_phy.h	269;"	d
IFE_PHY_MDIX_CONTROL	dev/e1000/e1000_phy.h	272;"	d
IFE_PHY_SPECIAL_CONTROL	dev/e1000/e1000_phy.h	270;"	d
IFE_PHY_SPECIAL_CONTROL_LED	dev/e1000/e1000_phy.h	271;"	d
IFE_PLUS_E_PHY_ID	dev/e1000/e1000_defines.h	1178;"	d
IFE_PMC_AUTO_MDIX	dev/e1000/e1000_phy.h	289;"	d
IFE_PMC_FORCE_MDIX	dev/e1000/e1000_phy.h	288;"	d
IFE_PMC_MDIX_STATUS	dev/e1000/e1000_phy.h	287;"	d
IFE_PSCL_PROBE_LEDS_OFF	dev/e1000/e1000_phy.h	283;"	d
IFE_PSCL_PROBE_LEDS_ON	dev/e1000/e1000_phy.h	284;"	d
IFE_PSCL_PROBE_MODE	dev/e1000/e1000_phy.h	282;"	d
IFE_PSC_AUTO_POLARITY_DISABLE	dev/e1000/e1000_phy.h	278;"	d
IFE_PSC_FORCE_POLARITY	dev/e1000/e1000_phy.h	279;"	d
IFF_OACTIVE	if_compat.h	32;"	d
IFF_RUNNING	if_compat.h	31;"	d
IFM_1000_SX	if_compat.h	53;"	d
IFM_1000_T	if_compat.h	51;"	d
IFM_1000_TX	if_compat.h	44;"	d
IFM_1000_TX	if_compat.h	52;"	d
IFM_100_TX	if_compat.h	50;"	d
IFM_10_T	if_compat.h	49;"	d
IFM_ACTIVE	if_compat.h	46;"	d
IFM_AUTO	if_compat.h	55;"	d
IFM_AVALID	if_compat.h	41;"	d
IFM_AVALID	if_compat.h	56;"	d
IFM_ETHER	if_compat.h	54;"	d
IFM_FDX	if_compat.h	42;"	d
IFM_FDX	if_compat.h	47;"	d
IFM_GMASK	if_compat.h	57;"	d
IFM_HDX	if_compat.h	43;"	d
IFM_HDX	if_compat.h	48;"	d
IFM_SUBTYPE	if_compat.h	62;"	d
IFM_SUBTYPE_MASK	if_compat.h	59;"	d
IFM_TYPE	if_compat.h	61;"	d
IFM_TYPE_MASK	if_compat.h	58;"	d
IFS_MAX	dev/e1000/e1000_defines.h	511;"	d
IFS_MAX	if_em_hw.h	1588;"	d
IFS_MIN	dev/e1000/e1000_defines.h	512;"	d
IFS_MIN	if_em_hw.h	1590;"	d
IFS_RATIO	dev/e1000/e1000_defines.h	513;"	d
IFS_RATIO	if_em_hw.h	1591;"	d
IFS_STEP	dev/e1000/e1000_defines.h	514;"	d
IFS_STEP	if_em_hw.h	1589;"	d
IF_APPEND	if_compat.h	188;"	d
IF_DEQUEUE	if_compat.h	186;"	d
IF_PREPEND	if_compat.h	187;"	d
IGB_BR_SIZE	dev/e1000/if_igb.h	228;"	d
IGB_CORE_LOCK	dev/e1000/if_igb.h	509;"	d
IGB_CORE_LOCK_ASSERT	dev/e1000/if_igb.h	511;"	d
IGB_CORE_LOCK_DESTROY	dev/e1000/if_igb.h	508;"	d
IGB_CORE_LOCK_INIT	dev/e1000/if_igb.h	506;"	d
IGB_CORE_UNLOCK	dev/e1000/if_igb.h	510;"	d
IGB_DBA_ALIGN	dev/e1000/if_igb.h	204;"	d
IGB_DEFAULT_ITR	dev/e1000/if_igb.h	245;"	d
IGB_DEFAULT_PBA	dev/e1000/if_igb.h	171;"	d
IGB_DEFAULT_RXD	dev/e1000/if_igb.h	66;"	d
IGB_DEFAULT_TXD	dev/e1000/if_igb.h	51;"	d
IGB_EEPROM_APME	dev/e1000/if_igb.h	190;"	d
IGB_FC_PAUSE_TIME	dev/e1000/if_igb.h	189;"	d
IGB_HDR_BUF	dev/e1000/if_igb.h	231;"	d
IGB_INTS_PER_SEC	dev/e1000/if_igb.h	244;"	d
IGB_JUMBO_PBA	dev/e1000/if_igb.h	170;"	d
IGB_LINK_ITR	dev/e1000/if_igb.h	247;"	d
IGB_MASTER_SLAVE	dev/e1000/if_igb.h	163;"	d
IGB_MAX_LOOP	dev/e1000/if_igb.h	174;"	d
IGB_MAX_RXD	dev/e1000/if_igb.h	67;"	d
IGB_MAX_SCATTER	dev/e1000/if_igb.h	226;"	d
IGB_MAX_TXD	dev/e1000/if_igb.h	52;"	d
IGB_MIN_RXD	dev/e1000/if_igb.h	65;"	d
IGB_MIN_TXD	dev/e1000/if_igb.h	50;"	d
IGB_MSIX_BAR	dev/e1000/if_igb.h	209;"	d
IGB_PKTTYPE_MASK	dev/e1000/if_igb.h	232;"	d
IGB_QUEUE_DEPLETED	dev/e1000/if_igb.h	197;"	d
IGB_QUEUE_HUNG	dev/e1000/if_igb.h	196;"	d
IGB_QUEUE_IDLE	dev/e1000/if_igb.h	194;"	d
IGB_QUEUE_THRESHOLD	dev/e1000/if_igb.h	192;"	d
IGB_QUEUE_WORKING	dev/e1000/if_igb.h	195;"	d
IGB_RADV	dev/e1000/if_igb.h	126;"	d
IGB_RDTR	dev/e1000/if_igb.h	113;"	d
IGB_RX_HTHRESH	dev/e1000/if_igb.h	177;"	d
IGB_RX_LOCK	dev/e1000/if_igb.h	520;"	d
IGB_RX_LOCK_ASSERT	dev/e1000/if_igb.h	522;"	d
IGB_RX_LOCK_DESTROY	dev/e1000/if_igb.h	519;"	d
IGB_RX_PTHRESH	dev/e1000/if_igb.h	176;"	d
IGB_RX_UNLOCK	dev/e1000/if_igb.h	521;"	d
IGB_RX_WTHRESH	dev/e1000/if_igb.h	178;"	d
IGB_SMARTSPEED_DOWNSHIFT	dev/e1000/if_igb.h	172;"	d
IGB_SMARTSPEED_MAX	dev/e1000/if_igb.h	173;"	d
IGB_TADV	dev/e1000/if_igb.h	92;"	d
IGB_TIDV	dev/e1000/if_igb.h	79;"	d
IGB_TSO_SEG_SIZE	dev/e1000/if_igb.h	230;"	d
IGB_TSO_SIZE	dev/e1000/if_igb.h	229;"	d
IGB_TX_BUFFER_SIZE	dev/e1000/if_igb.h	188;"	d
IGB_TX_CLEANUP_THRESHOLD	dev/e1000/if_igb.h	137;"	d
IGB_TX_HTHRESH	dev/e1000/if_igb.h	181;"	d
IGB_TX_LOCK	dev/e1000/if_igb.h	514;"	d
IGB_TX_LOCK_ASSERT	dev/e1000/if_igb.h	517;"	d
IGB_TX_LOCK_DESTROY	dev/e1000/if_igb.h	513;"	d
IGB_TX_PTHRESH	dev/e1000/if_igb.h	180;"	d
IGB_TX_TRYLOCK	dev/e1000/if_igb.h	516;"	d
IGB_TX_UNLOCK	dev/e1000/if_igb.h	515;"	d
IGB_TX_WTHRESH	dev/e1000/if_igb.h	182;"	d
IGB_VENDOR_ID	dev/e1000/if_igb.h	168;"	d
IGB_VFTA_SIZE	dev/e1000/if_igb.h	227;"	d
IGB_WATCHDOG	dev/e1000/if_igb.h	131;"	d
IGP01E1000_AGC_LENGTH_SHIFT	dev/e1000/e1000_82541.h	64;"	d
IGP01E1000_AGC_LENGTH_SHIFT	if_em_hw.h	2050;"	d
IGP01E1000_AGC_LENGTH_TABLE_SIZE	dev/e1000/e1000_82541.c	77;"	d	file:
IGP01E1000_AGC_LENGTH_TABLE_SIZE	if_em_hw.h	2053;"	d
IGP01E1000_AGC_RANGE	dev/e1000/e1000_82541.h	65;"	d
IGP01E1000_AGC_RANGE	if_em_hw.h	2056;"	d
IGP01E1000_ANALOG_FUSE_BYPASS	dev/e1000/e1000_82541.h	73;"	d
IGP01E1000_ANALOG_FUSE_BYPASS	if_em_hw.h	2071;"	d
IGP01E1000_ANALOG_FUSE_COARSE_10	dev/e1000/e1000_82541.h	79;"	d
IGP01E1000_ANALOG_FUSE_COARSE_10	if_em_hw.h	2080;"	d
IGP01E1000_ANALOG_FUSE_COARSE_MASK	dev/e1000/e1000_82541.h	77;"	d
IGP01E1000_ANALOG_FUSE_COARSE_MASK	if_em_hw.h	2075;"	d
IGP01E1000_ANALOG_FUSE_COARSE_THRESH	dev/e1000/e1000_82541.h	78;"	d
IGP01E1000_ANALOG_FUSE_COARSE_THRESH	if_em_hw.h	2079;"	d
IGP01E1000_ANALOG_FUSE_CONTROL	dev/e1000/e1000_82541.h	72;"	d
IGP01E1000_ANALOG_FUSE_CONTROL	if_em_hw.h	2070;"	d
IGP01E1000_ANALOG_FUSE_ENABLE_SW_CONTROL	dev/e1000/e1000_82541.h	83;"	d
IGP01E1000_ANALOG_FUSE_ENABLE_SW_CONTROL	if_em_hw.h	2077;"	d
IGP01E1000_ANALOG_FUSE_FINE_1	dev/e1000/e1000_82541.h	80;"	d
IGP01E1000_ANALOG_FUSE_FINE_1	if_em_hw.h	2081;"	d
IGP01E1000_ANALOG_FUSE_FINE_10	dev/e1000/e1000_82541.h	81;"	d
IGP01E1000_ANALOG_FUSE_FINE_10	if_em_hw.h	2082;"	d
IGP01E1000_ANALOG_FUSE_FINE_MASK	dev/e1000/e1000_82541.h	76;"	d
IGP01E1000_ANALOG_FUSE_FINE_MASK	if_em_hw.h	2074;"	d
IGP01E1000_ANALOG_FUSE_POLY_MASK	dev/e1000/e1000_82541.h	82;"	d
IGP01E1000_ANALOG_FUSE_POLY_MASK	if_em_hw.h	2073;"	d
IGP01E1000_ANALOG_FUSE_STATUS	dev/e1000/e1000_82541.h	70;"	d
IGP01E1000_ANALOG_FUSE_STATUS	if_em_hw.h	2069;"	d
IGP01E1000_ANALOG_REGS_PAGE	if_em_hw.h	1780;"	d
IGP01E1000_ANALOG_SPARE_FUSE_ENABLED	dev/e1000/e1000_82541.h	75;"	d
IGP01E1000_ANALOG_SPARE_FUSE_ENABLED	if_em_hw.h	2076;"	d
IGP01E1000_ANALOG_SPARE_FUSE_STATUS	dev/e1000/e1000_82541.h	71;"	d
IGP01E1000_ANALOG_SPARE_FUSE_STATUS	if_em_hw.h	2068;"	d
IGP01E1000_GMII_FIFO	dev/e1000/e1000_phy.h	127;"	d
IGP01E1000_GMII_FIFO	if_em_hw.h	1745;"	d
IGP01E1000_GMII_FLEX_SPD	dev/e1000/e1000_phy.h	230;"	d
IGP01E1000_GMII_FLEX_SPD	if_em_hw.h	2063;"	d
IGP01E1000_GMII_SPD	dev/e1000/e1000_phy.h	231;"	d
IGP01E1000_GMII_SPD	if_em_hw.h	2065;"	d
IGP01E1000_IEEE_FORCE_GIG	dev/e1000/e1000_82541.h	61;"	d
IGP01E1000_IEEE_FORCE_GIGA	if_em_hw.h	1738;"	d
IGP01E1000_IEEE_REGS_PAGE	if_em_hw.h	1736;"	d
IGP01E1000_IEEE_RESTART_AUTONEG	dev/e1000/e1000_82541.h	62;"	d
IGP01E1000_IEEE_RESTART_AUTONEG	if_em_hw.h	1737;"	d
IGP01E1000_I_PHY_ID	dev/e1000/e1000_defines.h	1170;"	d
IGP01E1000_I_PHY_ID	if_em_hw.h	2088;"	d
IGP01E1000_MSE_CHANNEL_A	dev/e1000/e1000_82541.h	88;"	d
IGP01E1000_MSE_CHANNEL_A	if_em_hw.h	2041;"	d
IGP01E1000_MSE_CHANNEL_B	dev/e1000/e1000_82541.h	87;"	d
IGP01E1000_MSE_CHANNEL_B	if_em_hw.h	2040;"	d
IGP01E1000_MSE_CHANNEL_C	dev/e1000/e1000_82541.h	86;"	d
IGP01E1000_MSE_CHANNEL_C	if_em_hw.h	2039;"	d
IGP01E1000_MSE_CHANNEL_D	dev/e1000/e1000_82541.h	85;"	d
IGP01E1000_MSE_CHANNEL_D	if_em_hw.h	2038;"	d
IGP01E1000_PHY_AGC_A	dev/e1000/e1000_82541.h	42;"	d
IGP01E1000_PHY_AGC_A	if_em_hw.h	1750;"	d
IGP01E1000_PHY_AGC_B	dev/e1000/e1000_82541.h	43;"	d
IGP01E1000_PHY_AGC_B	if_em_hw.h	1751;"	d
IGP01E1000_PHY_AGC_C	dev/e1000/e1000_82541.h	44;"	d
IGP01E1000_PHY_AGC_C	if_em_hw.h	1752;"	d
IGP01E1000_PHY_AGC_D	dev/e1000/e1000_82541.h	45;"	d
IGP01E1000_PHY_AGC_D	if_em_hw.h	1753;"	d
IGP01E1000_PHY_AGC_PARAM_A	dev/e1000/e1000_82541.h	47;"	d
IGP01E1000_PHY_AGC_PARAM_A	if_em_hw.h	1761;"	d
IGP01E1000_PHY_AGC_PARAM_B	dev/e1000/e1000_82541.h	48;"	d
IGP01E1000_PHY_AGC_PARAM_B	if_em_hw.h	1762;"	d
IGP01E1000_PHY_AGC_PARAM_C	dev/e1000/e1000_82541.h	49;"	d
IGP01E1000_PHY_AGC_PARAM_C	if_em_hw.h	1763;"	d
IGP01E1000_PHY_AGC_PARAM_D	dev/e1000/e1000_82541.h	50;"	d
IGP01E1000_PHY_AGC_PARAM_D	if_em_hw.h	1764;"	d
IGP01E1000_PHY_ANALOG_CLASS_A	if_em_hw.h	1770;"	d
IGP01E1000_PHY_ANALOG_TX_STATE	if_em_hw.h	1769;"	d
IGP01E1000_PHY_CHANNEL_NUM	dev/e1000/e1000_82541.h	40;"	d
IGP01E1000_PHY_CHANNEL_NUM	if_em_hw.h	1760;"	d
IGP01E1000_PHY_CHANNEL_QUALITY	if_em_hw.h	1746;"	d
IGP01E1000_PHY_DSP_FFE	dev/e1000/e1000_82541.h	57;"	d
IGP01E1000_PHY_DSP_FFE	if_em_hw.h	1758;"	d
IGP01E1000_PHY_DSP_FFE_CM_CP	dev/e1000/e1000_82541.h	58;"	d
IGP01E1000_PHY_DSP_FFE_CM_CP	if_em_hw.h	1772;"	d
IGP01E1000_PHY_DSP_FFE_DEFAULT	dev/e1000/e1000_82541.h	59;"	d
IGP01E1000_PHY_DSP_FFE_DEFAULT	if_em_hw.h	1774;"	d
IGP01E1000_PHY_DSP_RESET	dev/e1000/e1000_82541.h	55;"	d
IGP01E1000_PHY_DSP_RESET	if_em_hw.h	1756;"	d
IGP01E1000_PHY_DSP_SET	if_em_hw.h	1757;"	d
IGP01E1000_PHY_EDAC_MU_INDEX	dev/e1000/e1000_82541.h	52;"	d
IGP01E1000_PHY_EDAC_MU_INDEX	if_em_hw.h	1766;"	d
IGP01E1000_PHY_EDAC_SIGN_EXT_9_BITS	dev/e1000/e1000_82541.h	53;"	d
IGP01E1000_PHY_EDAC_SIGN_EXT_9_BITS	if_em_hw.h	1767;"	d
IGP01E1000_PHY_FORCE_ANALOG_ENABLE	if_em_hw.h	1771;"	d
IGP01E1000_PHY_LINK_HEALTH	dev/e1000/e1000_phy.h	126;"	d
IGP01E1000_PHY_LINK_HEALTH	if_em_hw.h	1744;"	d
IGP01E1000_PHY_PAGE_SELECT	dev/e1000/e1000_phy.h	129;"	d
IGP01E1000_PHY_PAGE_SELECT	if_em_hw.h	1747;"	d
IGP01E1000_PHY_PCS_CTRL_REG	if_em_hw.h	1778;"	d
IGP01E1000_PHY_PCS_INIT_REG	dev/e1000/e1000_phy.h	221;"	d
IGP01E1000_PHY_PCS_INIT_REG	if_em_hw.h	1777;"	d
IGP01E1000_PHY_POLARITY_MASK	dev/e1000/e1000_phy.h	222;"	d
IGP01E1000_PHY_POLARITY_MASK	if_em_hw.h	2060;"	d
IGP01E1000_PHY_PORT_CONFIG	dev/e1000/e1000_phy.h	123;"	d
IGP01E1000_PHY_PORT_CONFIG	if_em_hw.h	1741;"	d
IGP01E1000_PHY_PORT_CTRL	dev/e1000/e1000_phy.h	125;"	d
IGP01E1000_PHY_PORT_CTRL	if_em_hw.h	1743;"	d
IGP01E1000_PHY_PORT_STATUS	dev/e1000/e1000_phy.h	124;"	d
IGP01E1000_PHY_PORT_STATUS	if_em_hw.h	1742;"	d
IGP01E1000_PLHR_AUTONEG_ACTIVE	if_em_hw.h	2031;"	d
IGP01E1000_PLHR_AUTONEG_FAULT	if_em_hw.h	2030;"	d
IGP01E1000_PLHR_DATA_ERR_0	if_em_hw.h	2029;"	d
IGP01E1000_PLHR_DATA_ERR_1	if_em_hw.h	2028;"	d
IGP01E1000_PLHR_GIG_REM_RCVR_NOK	if_em_hw.h	2026;"	d
IGP01E1000_PLHR_GIG_SCRAMBLER_ERROR	if_em_hw.h	2025;"	d
IGP01E1000_PLHR_IDLE_ERROR_CNT_OFLOW	if_em_hw.h	2027;"	d
IGP01E1000_PLHR_SS_DOWNGRADE	dev/e1000/e1000_phy.h	237;"	d
IGP01E1000_PLHR_SS_DOWNGRADE	if_em_hw.h	2024;"	d
IGP01E1000_PLHR_VALID_CHANNEL_A	if_em_hw.h	2035;"	d
IGP01E1000_PLHR_VALID_CHANNEL_B	if_em_hw.h	2034;"	d
IGP01E1000_PLHR_VALID_CHANNEL_C	if_em_hw.h	2033;"	d
IGP01E1000_PLHR_VALID_CHANNEL_D	if_em_hw.h	2032;"	d
IGP01E1000_PSCFR_AUTO_MDIX_PAR_DETECT	if_em_hw.h	1994;"	d
IGP01E1000_PSCFR_DISABLE_JABBER	if_em_hw.h	1998;"	d
IGP01E1000_PSCFR_DISABLE_TPLOOPBACK	if_em_hw.h	1997;"	d
IGP01E1000_PSCFR_DISABLE_TRANSMIT	if_em_hw.h	1999;"	d
IGP01E1000_PSCFR_PRE_EN	if_em_hw.h	1995;"	d
IGP01E1000_PSCFR_SMART_SPEED	dev/e1000/e1000_phy.h	227;"	d
IGP01E1000_PSCFR_SMART_SPEED	if_em_hw.h	1996;"	d
IGP01E1000_PSCR_AUTO_MDIX	dev/e1000/e1000_phy.h	224;"	d
IGP01E1000_PSCR_AUTO_MDIX	if_em_hw.h	2020;"	d
IGP01E1000_PSCR_CORRECT_NC_SCMBLR	if_em_hw.h	2017;"	d
IGP01E1000_PSCR_FLIP_CHIP	if_em_hw.h	2019;"	d
IGP01E1000_PSCR_FORCE_MDI_MDIX	dev/e1000/e1000_phy.h	225;"	d
IGP01E1000_PSCR_FORCE_MDI_MDIX	if_em_hw.h	2021;"	d
IGP01E1000_PSCR_TEN_CRS_SELECT	if_em_hw.h	2018;"	d
IGP01E1000_PSCR_TP_LOOPBACK	if_em_hw.h	2016;"	d
IGP01E1000_PSSR_AUTONEG_FAILED	if_em_hw.h	2002;"	d
IGP01E1000_PSSR_CABLE_LENGTH	if_em_hw.h	2004;"	d
IGP01E1000_PSSR_CABLE_LENGTH_SHIFT	if_em_hw.h	2012;"	d
IGP01E1000_PSSR_FULL_DUPLEX	if_em_hw.h	2005;"	d
IGP01E1000_PSSR_LINK_UP	if_em_hw.h	2006;"	d
IGP01E1000_PSSR_MDIX	dev/e1000/e1000_phy.h	240;"	d
IGP01E1000_PSSR_MDIX	if_em_hw.h	2007;"	d
IGP01E1000_PSSR_MDIX_SHIFT	if_em_hw.h	2013;"	d
IGP01E1000_PSSR_POLARITY_REVERSED	dev/e1000/e1000_phy.h	239;"	d
IGP01E1000_PSSR_POLARITY_REVERSED	if_em_hw.h	2003;"	d
IGP01E1000_PSSR_SPEED_1000MBPS	dev/e1000/e1000_phy.h	242;"	d
IGP01E1000_PSSR_SPEED_1000MBPS	if_em_hw.h	2011;"	d
IGP01E1000_PSSR_SPEED_100MBPS	if_em_hw.h	2010;"	d
IGP01E1000_PSSR_SPEED_10MBPS	if_em_hw.h	2009;"	d
IGP01E1000_PSSR_SPEED_MASK	dev/e1000/e1000_phy.h	241;"	d
IGP01E1000_PSSR_SPEED_MASK	if_em_hw.h	2008;"	d
IGP02E1000_AGC_LENGTH_MASK	dev/e1000/e1000_phy.h	251;"	d
IGP02E1000_AGC_LENGTH_SHIFT	dev/e1000/e1000_phy.h	250;"	d
IGP02E1000_AGC_RANGE	dev/e1000/e1000_phy.h	252;"	d
IGP02E1000_CABLE_LENGTH_TABLE_SIZE	dev/e1000/e1000_phy.c	60;"	d	file:
IGP02E1000_PHY_AGC_A	dev/e1000/e1000_phy.h	245;"	d
IGP02E1000_PHY_AGC_B	dev/e1000/e1000_phy.h	246;"	d
IGP02E1000_PHY_AGC_C	dev/e1000/e1000_phy.h	247;"	d
IGP02E1000_PHY_AGC_D	dev/e1000/e1000_phy.h	248;"	d
IGP02E1000_PHY_CHANNEL_NUM	dev/e1000/e1000_phy.h	244;"	d
IGP02E1000_PHY_POWER_MGMT	dev/e1000/e1000_phy.h	128;"	d
IGP02E1000_PM_D0_LPLU	dev/e1000/e1000_phy.h	234;"	d
IGP02E1000_PM_D3_LPLU	dev/e1000/e1000_phy.h	235;"	d
IGP02E1000_PM_SPD	dev/e1000/e1000_phy.h	233;"	d
IGP03E1000_E_PHY_ID	dev/e1000/e1000_defines.h	1176;"	d
IGP04E1000_E_PHY_ID	dev/e1000/e1000_defines.h	1189;"	d
IGP3_KMRN_DIAG	dev/e1000/e1000_ich8lan.h	111;"	d
IGP3_KMRN_DIAG_PCS_LOCK_LOSS	dev/e1000/e1000_ich8lan.h	114;"	d
IGP3_VR_CTRL	dev/e1000/e1000_ich8lan.h	112;"	d
IGP3_VR_CTRL_DEV_POWERDOWN_MODE_MASK	dev/e1000/e1000_ich8lan.h	115;"	d
IGP3_VR_CTRL_MODE_SHUTDOWN	dev/e1000/e1000_ich8lan.h	116;"	d
IGP_ACTIVITY_LED_ENABLE	dev/e1000/e1000_defines.h	1129;"	d
IGP_ACTIVITY_LED_ENABLE	if_em_hw.h	1516;"	d
IGP_ACTIVITY_LED_MASK	dev/e1000/e1000_defines.h	1128;"	d
IGP_ACTIVITY_LED_MASK	if_em_hw.h	1515;"	d
IGP_LED3_MODE	dev/e1000/e1000_defines.h	1130;"	d
IGP_LED3_MODE	if_em_hw.h	1517;"	d
IGP_PAGE_SHIFT	dev/e1000/e1000_phy.h	131;"	d
ILOS_SHIFT	if_em_hw.h	1642;"	d
IMS_ENABLE_MASK	dev/e1000/e1000_defines.h	591;"	d
IMS_ENABLE_MASK	if_em_hw.h	428;"	d
INFO	setup.h	24;"	d
INIT_DEBUGOUT	debug.h	39;"	d
INIT_DEBUGOUT	debug.h	57;"	d
INIT_DEBUGOUT	dev/e1000/if_em.h	227;"	d
INIT_DEBUGOUT	dev/e1000/if_igb.h	216;"	d
INIT_DEBUGOUT	dev/e1000/if_lem.h	231;"	d
INIT_DEBUGOUT1	debug.h	40;"	d
INIT_DEBUGOUT1	debug.h	58;"	d
INIT_DEBUGOUT1	dev/e1000/if_em.h	228;"	d
INIT_DEBUGOUT1	dev/e1000/if_igb.h	217;"	d
INIT_DEBUGOUT1	dev/e1000/if_lem.h	232;"	d
INIT_DEBUGOUT2	debug.h	41;"	d
INIT_DEBUGOUT2	debug.h	59;"	d
INIT_DEBUGOUT2	dev/e1000/if_em.h	229;"	d
INIT_DEBUGOUT2	dev/e1000/if_igb.h	218;"	d
INIT_DEBUGOUT2	dev/e1000/if_lem.h	233;"	d
INIT_DEBUGOUT3	debug.h	42;"	d
INIT_DEBUGOUT3	debug.h	60;"	d
INIT_DEBUGOUT7	debug.h	43;"	d
INIT_DEBUGOUT7	debug.h	61;"	d
INTR_TYPE_NET	if_em_osdep.h	160;"	d
INVM_DWORD_TO_RECORD_TYPE	dev/e1000/e1000_i210.h	52;"	d
INVM_DWORD_TO_WORD_ADDRESS	dev/e1000/e1000_i210.h	54;"	d
INVM_DWORD_TO_WORD_DATA	dev/e1000/e1000_i210.h	56;"	d
IOCTL_DEBUGOUT	debug.h	44;"	d
IOCTL_DEBUGOUT	debug.h	62;"	d
IOCTL_DEBUGOUT	dev/e1000/if_em.h	230;"	d
IOCTL_DEBUGOUT	dev/e1000/if_igb.h	219;"	d
IOCTL_DEBUGOUT	dev/e1000/if_lem.h	234;"	d
IOCTL_DEBUGOUT1	debug.h	45;"	d
IOCTL_DEBUGOUT1	debug.h	63;"	d
IOCTL_DEBUGOUT1	dev/e1000/if_em.h	231;"	d
IOCTL_DEBUGOUT1	dev/e1000/if_igb.h	220;"	d
IOCTL_DEBUGOUT1	dev/e1000/if_lem.h	235;"	d
IOCTL_DEBUGOUT2	debug.h	46;"	d
IOCTL_DEBUGOUT2	debug.h	64;"	d
IOCTL_DEBUGOUT2	dev/e1000/if_em.h	232;"	d
IOCTL_DEBUGOUT2	dev/e1000/if_igb.h	221;"	d
IOCTL_DEBUGOUT2	dev/e1000/if_lem.h	236;"	d
IP_HEADER_SIZE	if_compat.h	81;"	d
IP_PROTOCOL_TCP	if_em_hw.h	408;"	d
IP_PROTOCOL_UDP	if_em_hw.h	409;"	d
LINK_UP_TIMEOUT	if_em_hw.h	1648;"	d
LP_RNPR_ACKNOWLDGE	if_em_hw.h	1867;"	d
LP_RNPR_ACKNOWLDGE2	if_em_hw.h	1863;"	d
LP_RNPR_MSG_CODE_FIELD	if_em_hw.h	1859;"	d
LP_RNPR_MSG_PAGE	if_em_hw.h	1866;"	d
LP_RNPR_NEXT_PAGE	if_em_hw.h	1868;"	d
LP_RNPR_TOGGLE	if_em_hw.h	1860;"	d
M88E1000_12_PHY_ID	if_em_hw.h	2089;"	d
M88E1000_14_PHY_ID	if_em_hw.h	2090;"	d
M88E1000_CABLE_LENGTH_TABLE_SIZE	dev/e1000/e1000_phy.c	47;"	d	file:
M88E1000_EPSCR_DOWN_NO_IDLE	if_em_hw.h	1970;"	d
M88E1000_EPSCR_FIBER_LOOPBACK	if_em_hw.h	1969;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_1X	dev/e1000/e1000_defines.h	1239;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_1X	if_em_hw.h	1978;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_2X	if_em_hw.h	1979;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_3X	if_em_hw.h	1980;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_4X	if_em_hw.h	1981;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_MASK	dev/e1000/e1000_defines.h	1238;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_MASK	if_em_hw.h	1977;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_1X	dev/e1000/e1000_defines.h	1244;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_1X	if_em_hw.h	1986;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_2X	if_em_hw.h	1987;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_3X	if_em_hw.h	1988;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_DIS	if_em_hw.h	1985;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_MASK	dev/e1000/e1000_defines.h	1243;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_MASK	if_em_hw.h	1984;"	d
M88E1000_EPSCR_TX_CLK_0	if_em_hw.h	1991;"	d
M88E1000_EPSCR_TX_CLK_25	dev/e1000/e1000_defines.h	1245;"	d
M88E1000_EPSCR_TX_CLK_25	if_em_hw.h	1990;"	d
M88E1000_EPSCR_TX_CLK_2_5	if_em_hw.h	1989;"	d
M88E1000_EXT_PHY_SPEC_CTRL	dev/e1000/e1000_defines.h	1195;"	d
M88E1000_EXT_PHY_SPEC_CTRL	if_em_hw.h	1727;"	d
M88E1000_E_PHY_ID	dev/e1000/e1000_defines.h	1167;"	d
M88E1000_E_PHY_ID	if_em_hw.h	2085;"	d
M88E1000_INT_ENABLE	if_em_hw.h	1725;"	d
M88E1000_INT_STATUS	if_em_hw.h	1726;"	d
M88E1000_I_PHY_ID	dev/e1000/e1000_defines.h	1168;"	d
M88E1000_I_PHY_ID	if_em_hw.h	2086;"	d
M88E1000_PHY_EXT_CTRL	dev/e1000/e1000_defines.h	1198;"	d
M88E1000_PHY_EXT_CTRL	if_em_hw.h	1730;"	d
M88E1000_PHY_GEN_CONTROL	dev/e1000/e1000_defines.h	1200;"	d
M88E1000_PHY_GEN_CONTROL	if_em_hw.h	1732;"	d
M88E1000_PHY_PAGE_SELECT	dev/e1000/e1000_defines.h	1199;"	d
M88E1000_PHY_PAGE_SELECT	if_em_hw.h	1731;"	d
M88E1000_PHY_SPEC_CTRL	dev/e1000/e1000_defines.h	1193;"	d
M88E1000_PHY_SPEC_CTRL	if_em_hw.h	1723;"	d
M88E1000_PHY_SPEC_STATUS	dev/e1000/e1000_defines.h	1194;"	d
M88E1000_PHY_SPEC_STATUS	if_em_hw.h	1724;"	d
M88E1000_PHY_VCO_REG_BIT11	dev/e1000/e1000_defines.h	1202;"	d
M88E1000_PHY_VCO_REG_BIT11	if_em_hw.h	1734;"	d
M88E1000_PHY_VCO_REG_BIT8	dev/e1000/e1000_defines.h	1201;"	d
M88E1000_PHY_VCO_REG_BIT8	if_em_hw.h	1733;"	d
M88E1000_PSCR_10BT_EXT_DIST_ENABLE	if_em_hw.h	1932;"	d
M88E1000_PSCR_10BT_EXT_DIST_ENABLE_SHIFT	if_em_hw.h	1945;"	d
M88E1000_PSCR_ASSERT_CRS_ON_TX	dev/e1000/e1000_defines.h	1213;"	d
M88E1000_PSCR_ASSERT_CRS_ON_TX	if_em_hw.h	1941;"	d
M88E1000_PSCR_AUTO_X_1000T	dev/e1000/e1000_defines.h	1210;"	d
M88E1000_PSCR_AUTO_X_1000T	if_em_hw.h	1925;"	d
M88E1000_PSCR_AUTO_X_MODE	dev/e1000/e1000_defines.h	1212;"	d
M88E1000_PSCR_AUTO_X_MODE	if_em_hw.h	1929;"	d
M88E1000_PSCR_AUTO_X_MODE_SHIFT	if_em_hw.h	1944;"	d
M88E1000_PSCR_CLK125_DISABLE	if_em_hw.h	1919;"	d
M88E1000_PSCR_FORCE_LINK_GOOD	if_em_hw.h	1940;"	d
M88E1000_PSCR_JABBER_DISABLE	if_em_hw.h	1916;"	d
M88E1000_PSCR_MDIX_MANUAL_MODE	dev/e1000/e1000_defines.h	1208;"	d
M88E1000_PSCR_MDIX_MANUAL_MODE	if_em_hw.h	1924;"	d
M88E1000_PSCR_MDI_MANUAL_MODE	dev/e1000/e1000_defines.h	1207;"	d
M88E1000_PSCR_MDI_MANUAL_MODE	if_em_hw.h	1922;"	d
M88E1000_PSCR_MII_5BIT_ENABLE	if_em_hw.h	1936;"	d
M88E1000_PSCR_POLARITY_REVERSAL	dev/e1000/e1000_defines.h	1205;"	d
M88E1000_PSCR_POLARITY_REVERSAL	if_em_hw.h	1917;"	d
M88E1000_PSCR_POLARITY_REVERSAL_SHIFT	if_em_hw.h	1943;"	d
M88E1000_PSCR_SCRAMBLER_DISABLE	if_em_hw.h	1939;"	d
M88E1000_PSCR_SQE_TEST	if_em_hw.h	1918;"	d
M88E1000_PSSR_1000MBS	dev/e1000/e1000_defines.h	1231;"	d
M88E1000_PSSR_1000MBS	if_em_hw.h	1961;"	d
M88E1000_PSSR_100MBS	dev/e1000/e1000_defines.h	1230;"	d
M88E1000_PSSR_100MBS	if_em_hw.h	1960;"	d
M88E1000_PSSR_10MBS	if_em_hw.h	1959;"	d
M88E1000_PSSR_CABLE_LENGTH	dev/e1000/e1000_defines.h	1225;"	d
M88E1000_PSSR_CABLE_LENGTH	if_em_hw.h	1952;"	d
M88E1000_PSSR_CABLE_LENGTH_SHIFT	dev/e1000/e1000_defines.h	1233;"	d
M88E1000_PSSR_CABLE_LENGTH_SHIFT	if_em_hw.h	1966;"	d
M88E1000_PSSR_DOWNSHIFT	dev/e1000/e1000_defines.h	1217;"	d
M88E1000_PSSR_DOWNSHIFT	if_em_hw.h	1950;"	d
M88E1000_PSSR_DOWNSHIFT_SHIFT	if_em_hw.h	1964;"	d
M88E1000_PSSR_DPLX	dev/e1000/e1000_defines.h	1228;"	d
M88E1000_PSSR_DPLX	if_em_hw.h	1957;"	d
M88E1000_PSSR_JABBER	if_em_hw.h	1948;"	d
M88E1000_PSSR_LINK	dev/e1000/e1000_defines.h	1226;"	d
M88E1000_PSSR_LINK	if_em_hw.h	1954;"	d
M88E1000_PSSR_MDIX	dev/e1000/e1000_defines.h	1218;"	d
M88E1000_PSSR_MDIX	if_em_hw.h	1951;"	d
M88E1000_PSSR_MDIX_SHIFT	if_em_hw.h	1965;"	d
M88E1000_PSSR_PAGE_RCVD	if_em_hw.h	1956;"	d
M88E1000_PSSR_REV_POLARITY	dev/e1000/e1000_defines.h	1216;"	d
M88E1000_PSSR_REV_POLARITY	if_em_hw.h	1949;"	d
M88E1000_PSSR_REV_POLARITY_SHIFT	if_em_hw.h	1963;"	d
M88E1000_PSSR_SPD_DPLX_RESOLVED	dev/e1000/e1000_defines.h	1227;"	d
M88E1000_PSSR_SPD_DPLX_RESOLVED	if_em_hw.h	1955;"	d
M88E1000_PSSR_SPEED	dev/e1000/e1000_defines.h	1229;"	d
M88E1000_PSSR_SPEED	if_em_hw.h	1958;"	d
M88E1000_RX_ERR_CNTR	dev/e1000/e1000_defines.h	1196;"	d
M88E1000_RX_ERR_CNTR	if_em_hw.h	1728;"	d
M88E1011_I_PHY_ID	dev/e1000/e1000_defines.h	1169;"	d
M88E1011_I_PHY_ID	if_em_hw.h	2087;"	d
M88E1011_I_REV_4	if_em_hw.h	2091;"	d
M88E1111_I_PHY_ID	dev/e1000/e1000_defines.h	1171;"	d
M88E1112_E_PHY_ID	dev/e1000/e1000_defines.h	1172;"	d
M88E1112_VCT_DSP_DISTANCE	dev/e1000/e1000_defines.h	1272;"	d
M88E1340M_E_PHY_ID	dev/e1000/e1000_defines.h	1174;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_5X	dev/e1000/e1000_defines.h	1276;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_MASK	dev/e1000/e1000_defines.h	1275;"	d
M88_VENDOR	dev/e1000/e1000_defines.h	1190;"	d
MAC_DECODE_SIZE	if_em_hw.h	375;"	d
MASTER_DISABLE_TIMEOUT	dev/e1000/e1000_defines.h	714;"	d
MAXIMUM_ETHERNET_FRAME_SIZE	if_em_hw.h	388;"	d
MAXIMUM_ETHERNET_PACKET_SIZE	if_em_hw.h	391;"	d
MAX_CARDS	driver.h	26;"	d
MAX_INTS_PER_SEC	dev/e1000/if_em.c	345;"	d	file:
MAX_INTS_PER_SEC	dev/e1000/if_lem.c	298;"	d	file:
MAX_INTS_PER_SEC	if_em.c	2202;"	d	file:
MAX_JUMBO_FRAME_SIZE	dev/e1000/e1000_defines.h	458;"	d
MAX_JUMBO_FRAME_SIZE	if_em_hw.h	396;"	d
MAX_MTA_REG	dev/e1000/e1000_hw.h	774;"	d
MAX_NUMBER_OF_DESCRIPTORS	if_em_hw.h	443;"	d
MAX_NUM_MULTICAST_ADDRESSES	dev/e1000/if_em.h	184;"	d
MAX_NUM_MULTICAST_ADDRESSES	dev/e1000/if_igb.h	185;"	d
MAX_NUM_MULTICAST_ADDRESSES	dev/e1000/if_lem.h	187;"	d
MAX_NUM_MULTICAST_ADDRESSES	if_em.h	195;"	d
MAX_NUM_VFS	dev/e1000/e1000_82575.h	405;"	d
MAX_PHY_MULTI_PAGE_REG	dev/e1000/e1000_defines.h	1161;"	d
MAX_PHY_MULTI_PAGE_REG	if_em_hw.h	1783;"	d
MAX_PHY_REG_ADDRESS	dev/e1000/e1000_defines.h	1160;"	d
MAX_PHY_REG_ADDRESS	if_em_hw.h	1782;"	d
MAX_PS_BUFFERS	dev/e1000/e1000_hw.h	393;"	d
MAX_TIMERS	timer.c	26;"	d	file:
MCLBYTES	if_compat.h	166;"	d
MCLGET	if_compat.h	179;"	d
MDIO_OWNERSHIP_TIMEOUT	dev/e1000/e1000_defines.h	718;"	d
MGETHDR	if_compat.h	171;"	d
MII_CR_AUTO_NEG_EN	dev/e1000/e1000_defines.h	861;"	d
MII_CR_AUTO_NEG_EN	if_em_hw.h	1791;"	d
MII_CR_COLL_TEST_ENABLE	dev/e1000/e1000_defines.h	856;"	d
MII_CR_COLL_TEST_ENABLE	if_em_hw.h	1786;"	d
MII_CR_FULL_DUPLEX	dev/e1000/e1000_defines.h	857;"	d
MII_CR_FULL_DUPLEX	if_em_hw.h	1787;"	d
MII_CR_ISOLATE	dev/e1000/e1000_defines.h	859;"	d
MII_CR_ISOLATE	if_em_hw.h	1789;"	d
MII_CR_LOOPBACK	dev/e1000/e1000_defines.h	863;"	d
MII_CR_LOOPBACK	if_em_hw.h	1793;"	d
MII_CR_POWER_DOWN	dev/e1000/e1000_defines.h	860;"	d
MII_CR_POWER_DOWN	if_em_hw.h	1790;"	d
MII_CR_RESET	dev/e1000/e1000_defines.h	864;"	d
MII_CR_RESET	if_em_hw.h	1794;"	d
MII_CR_RESTART_AUTO_NEG	dev/e1000/e1000_defines.h	858;"	d
MII_CR_RESTART_AUTO_NEG	if_em_hw.h	1788;"	d
MII_CR_SPEED_10	dev/e1000/e1000_defines.h	867;"	d
MII_CR_SPEED_10	if_em_hw.h	2102;"	d
MII_CR_SPEED_100	dev/e1000/e1000_defines.h	866;"	d
MII_CR_SPEED_100	if_em_hw.h	2101;"	d
MII_CR_SPEED_1000	dev/e1000/e1000_defines.h	865;"	d
MII_CR_SPEED_1000	if_em_hw.h	2100;"	d
MII_CR_SPEED_SELECT_LSB	dev/e1000/e1000_defines.h	862;"	d
MII_CR_SPEED_SELECT_LSB	if_em_hw.h	1792;"	d
MII_CR_SPEED_SELECT_MSB	dev/e1000/e1000_defines.h	855;"	d
MII_CR_SPEED_SELECT_MSB	if_em_hw.h	1785;"	d
MII_SR_100T2_FD_CAPS	dev/e1000/e1000_defines.h	879;"	d
MII_SR_100T2_FD_CAPS	if_em_hw.h	1806;"	d
MII_SR_100T2_HD_CAPS	dev/e1000/e1000_defines.h	878;"	d
MII_SR_100T2_HD_CAPS	if_em_hw.h	1805;"	d
MII_SR_100T4_CAPS	dev/e1000/e1000_defines.h	884;"	d
MII_SR_100T4_CAPS	if_em_hw.h	1811;"	d
MII_SR_100X_FD_CAPS	dev/e1000/e1000_defines.h	883;"	d
MII_SR_100X_FD_CAPS	if_em_hw.h	1810;"	d
MII_SR_100X_HD_CAPS	dev/e1000/e1000_defines.h	882;"	d
MII_SR_100X_HD_CAPS	if_em_hw.h	1809;"	d
MII_SR_10T_FD_CAPS	dev/e1000/e1000_defines.h	881;"	d
MII_SR_10T_FD_CAPS	if_em_hw.h	1808;"	d
MII_SR_10T_HD_CAPS	dev/e1000/e1000_defines.h	880;"	d
MII_SR_10T_HD_CAPS	if_em_hw.h	1807;"	d
MII_SR_AUTONEG_CAPS	dev/e1000/e1000_defines.h	873;"	d
MII_SR_AUTONEG_CAPS	if_em_hw.h	1800;"	d
MII_SR_AUTONEG_COMPLETE	dev/e1000/e1000_defines.h	875;"	d
MII_SR_AUTONEG_COMPLETE	if_em_hw.h	1802;"	d
MII_SR_EXTENDED_CAPS	dev/e1000/e1000_defines.h	870;"	d
MII_SR_EXTENDED_CAPS	if_em_hw.h	1797;"	d
MII_SR_EXTENDED_STATUS	dev/e1000/e1000_defines.h	877;"	d
MII_SR_EXTENDED_STATUS	if_em_hw.h	1804;"	d
MII_SR_JABBER_DETECT	dev/e1000/e1000_defines.h	871;"	d
MII_SR_JABBER_DETECT	if_em_hw.h	1798;"	d
MII_SR_LINK_STATUS	dev/e1000/e1000_defines.h	872;"	d
MII_SR_LINK_STATUS	if_em_hw.h	1799;"	d
MII_SR_PREAMBLE_SUPPRESS	dev/e1000/e1000_defines.h	876;"	d
MII_SR_PREAMBLE_SUPPRESS	if_em_hw.h	1803;"	d
MII_SR_REMOTE_FAULT	dev/e1000/e1000_defines.h	874;"	d
MII_SR_REMOTE_FAULT	if_em_hw.h	1801;"	d
MINIMUM_ETHERNET_FRAME_SIZE	if_em_hw.h	389;"	d
MINIMUM_ETHERNET_PACKET_SIZE	if_em_hw.h	393;"	d
MIN_NUMBER_OF_DESCRIPTORS	if_em_hw.h	442;"	d
MIN_NUM_XMITS	dev/e1000/e1000_defines.h	515;"	d
MIN_NUM_XMITS	if_em_hw.h	1587;"	d
MSGOUT	dev/e1000/e1000_osdep.h	66;"	d
MT_DATA	if_compat.h	165;"	d
M_DEVBUF	if_em_osdep.h	131;"	d
M_DONTWAIT	if_compat.h	162;"	d
M_EXT	if_compat.h	163;"	d
M_NOWAIT	if_em_osdep.h	132;"	d
M_PKTHDR	if_compat.h	164;"	d
M_TSO_LEN	dev/e1000/if_em.c	343;"	d	file:
NODE_ADDRESS_SIZE	if_em_hw.h	371;"	d
NPTX_ACKNOWLDGE2	if_em_hw.h	1850;"	d
NPTX_MSG_CODE_FIELD	if_em_hw.h	1846;"	d
NPTX_MSG_PAGE	if_em_hw.h	1853;"	d
NPTX_NEXT_PAGE	if_em_hw.h	1854;"	d
NPTX_TOGGLE	if_em_hw.h	1847;"	d
NVM_82580_LAN_FUNC_OFFSET	dev/e1000/e1000_defines.h	1052;"	d
NVM_A8_OPCODE_SPI	dev/e1000/e1000_defines.h	1104;"	d
NVM_ALT_MAC_ADDR_PTR	dev/e1000/e1000_defines.h	1042;"	d
NVM_CFG	dev/e1000/e1000_defines.h	1041;"	d
NVM_CHECKSUM_REG	dev/e1000/e1000_defines.h	1043;"	d
NVM_COMPAT	dev/e1000/e1000_defines.h	1016;"	d
NVM_COMPATIBILITY_BIT_MASK	dev/e1000/e1000_defines.h	1045;"	d
NVM_COMPATIBILITY_REG_3	dev/e1000/e1000_defines.h	1044;"	d
NVM_COMPAT_LOM	dev/e1000/e1000_defines.h	1073;"	d
NVM_COMPAT_VALID_CSUM	dev/e1000/e1000_defines.h	1033;"	d
NVM_DEV_ID	dev/e1000/e1000_defines.h	1026;"	d
NVM_ERASE_OPCODE_MICROWIRE	dev/e1000/e1000_defines.h	1096;"	d
NVM_EWDS_OPCODE_MICROWIRE	dev/e1000/e1000_defines.h	1098;"	d
NVM_EWEN_OPCODE_MICROWIRE	dev/e1000/e1000_defines.h	1097;"	d
NVM_FUTURE_INIT_WORD1	dev/e1000/e1000_defines.h	1022;"	d
NVM_FUTURE_INIT_WORD1_VALID_CSUM	dev/e1000/e1000_defines.h	1034;"	d
NVM_ID_LED_SETTINGS	dev/e1000/e1000_defines.h	1017;"	d
NVM_INIT_3GIO_3	dev/e1000/e1000_defines.h	1038;"	d
NVM_INIT_CONTROL2_REG	dev/e1000/e1000_defines.h	1036;"	d
NVM_INIT_CONTROL3_PORT_A	dev/e1000/e1000_defines.h	1040;"	d
NVM_INIT_CONTROL3_PORT_B	dev/e1000/e1000_defines.h	1037;"	d
NVM_INIT_CTRL_2	dev/e1000/e1000_defines.h	1028;"	d
NVM_INIT_CTRL_2_DEFAULT_I211	dev/e1000/e1000_i210.h	88;"	d
NVM_INIT_CTRL_4	dev/e1000/e1000_defines.h	1029;"	d
NVM_INIT_CTRL_4_DEFAULT_I211	dev/e1000/e1000_i210.h	89;"	d
NVM_LED_0_2_CFG	dev/e1000/e1000_defines.h	1031;"	d
NVM_LED_0_2_CFG_DEFAULT_I211	dev/e1000/e1000_i210.h	91;"	d
NVM_LED_1_CFG	dev/e1000/e1000_defines.h	1030;"	d
NVM_LED_1_CFG_DEFAULT_I211	dev/e1000/e1000_i210.h	90;"	d
NVM_MAC_ADDR	dev/e1000/e1000_defines.h	1023;"	d
NVM_MAX_RETRY_SPI	dev/e1000/e1000_defines.h	1101;"	d
NVM_PBA_OFFSET_0	dev/e1000/e1000_defines.h	1082;"	d
NVM_PBA_OFFSET_1	dev/e1000/e1000_defines.h	1083;"	d
NVM_PBA_PTR_GUARD	dev/e1000/e1000_defines.h	1084;"	d
NVM_PHY_CLASS_A	dev/e1000/e1000_defines.h	1086;"	d
NVM_PHY_CLASS_WORD	dev/e1000/e1000_defines.h	1019;"	d
NVM_RDSR_OPCODE_SPI	dev/e1000/e1000_defines.h	1106;"	d
NVM_READ_OPCODE_MICROWIRE	dev/e1000/e1000_defines.h	1094;"	d
NVM_READ_OPCODE_SPI	dev/e1000/e1000_defines.h	1102;"	d
NVM_RESERVED_WORD	dev/e1000/e1000_defines.h	1085;"	d
NVM_SERDES_AMPLITUDE	dev/e1000/e1000_defines.h	1018;"	d
NVM_SERDES_AMPLITUDE_MASK	dev/e1000/e1000_defines.h	1087;"	d
NVM_SIZE_MASK	dev/e1000/e1000_defines.h	1088;"	d
NVM_SIZE_SHIFT	dev/e1000/e1000_defines.h	1089;"	d
NVM_STATUS_RDY_SPI	dev/e1000/e1000_defines.h	1109;"	d
NVM_SUB_DEV_ID	dev/e1000/e1000_defines.h	1024;"	d
NVM_SUB_VEN_ID	dev/e1000/e1000_defines.h	1025;"	d
NVM_SUM	dev/e1000/e1000_defines.h	1079;"	d
NVM_SWDEF_PINS_CTRL_PORT_0	dev/e1000/e1000_defines.h	1039;"	d
NVM_SWDPIO_EXT_SHIFT	dev/e1000/e1000_defines.h	1091;"	d
NVM_VEN_ID	dev/e1000/e1000_defines.h	1027;"	d
NVM_WORD0F_ASM_DIR	dev/e1000/e1000_defines.h	1066;"	d
NVM_WORD0F_PAUSE	dev/e1000/e1000_defines.h	1065;"	d
NVM_WORD0F_PAUSE_MASK	dev/e1000/e1000_defines.h	1064;"	d
NVM_WORD0F_SWPDIO_EXT_MASK	dev/e1000/e1000_defines.h	1067;"	d
NVM_WORD1A_ASPM_MASK	dev/e1000/e1000_defines.h	1070;"	d
NVM_WORD24_82580_LNK_MODE_OFFSET	dev/e1000/e1000_defines.h	1060;"	d
NVM_WORD24_COM_MDIO	dev/e1000/e1000_defines.h	1055;"	d
NVM_WORD24_EXT_MDIO	dev/e1000/e1000_defines.h	1056;"	d
NVM_WORD24_LNK_MODE_OFFSET	dev/e1000/e1000_defines.h	1058;"	d
NVM_WORD_SIZE_BASE_SHIFT	dev/e1000/e1000_defines.h	1090;"	d
NVM_WORD_SIZE_BASE_SHIFT_82541	dev/e1000/e1000_82541.h	38;"	d
NVM_WREN_OPCODE_SPI	dev/e1000/e1000_defines.h	1105;"	d
NVM_WRITE_OPCODE_MICROWIRE	dev/e1000/e1000_defines.h	1095;"	d
NVM_WRITE_OPCODE_SPI	dev/e1000/e1000_defines.h	1103;"	d
NWAY_AR_100T4_CAPS	dev/e1000/e1000_defines.h	892;"	d
NWAY_AR_100T4_CAPS	if_em_hw.h	1819;"	d
NWAY_AR_100TX_FD_CAPS	dev/e1000/e1000_defines.h	891;"	d
NWAY_AR_100TX_FD_CAPS	if_em_hw.h	1818;"	d
NWAY_AR_100TX_HD_CAPS	dev/e1000/e1000_defines.h	890;"	d
NWAY_AR_100TX_HD_CAPS	if_em_hw.h	1817;"	d
NWAY_AR_10T_FD_CAPS	dev/e1000/e1000_defines.h	889;"	d
NWAY_AR_10T_FD_CAPS	if_em_hw.h	1816;"	d
NWAY_AR_10T_HD_CAPS	dev/e1000/e1000_defines.h	888;"	d
NWAY_AR_10T_HD_CAPS	if_em_hw.h	1815;"	d
NWAY_AR_ASM_DIR	dev/e1000/e1000_defines.h	894;"	d
NWAY_AR_ASM_DIR	if_em_hw.h	1821;"	d
NWAY_AR_NEXT_PAGE	dev/e1000/e1000_defines.h	896;"	d
NWAY_AR_NEXT_PAGE	if_em_hw.h	1823;"	d
NWAY_AR_PAUSE	dev/e1000/e1000_defines.h	893;"	d
NWAY_AR_PAUSE	if_em_hw.h	1820;"	d
NWAY_AR_REMOTE_FAULT	dev/e1000/e1000_defines.h	895;"	d
NWAY_AR_REMOTE_FAULT	if_em_hw.h	1822;"	d
NWAY_AR_SELECTOR_FIELD	dev/e1000/e1000_defines.h	887;"	d
NWAY_AR_SELECTOR_FIELD	if_em_hw.h	1814;"	d
NWAY_ER_LP_NEXT_PAGE_CAPS	dev/e1000/e1000_defines.h	915;"	d
NWAY_ER_LP_NEXT_PAGE_CAPS	if_em_hw.h	1842;"	d
NWAY_ER_LP_NWAY_CAPS	dev/e1000/e1000_defines.h	912;"	d
NWAY_ER_LP_NWAY_CAPS	if_em_hw.h	1839;"	d
NWAY_ER_NEXT_PAGE_CAPS	dev/e1000/e1000_defines.h	914;"	d
NWAY_ER_NEXT_PAGE_CAPS	if_em_hw.h	1841;"	d
NWAY_ER_PAGE_RXD	dev/e1000/e1000_defines.h	913;"	d
NWAY_ER_PAGE_RXD	if_em_hw.h	1840;"	d
NWAY_ER_PAR_DETECT_FAULT	dev/e1000/e1000_defines.h	916;"	d
NWAY_ER_PAR_DETECT_FAULT	if_em_hw.h	1843;"	d
NWAY_LPAR_100T4_CAPS	dev/e1000/e1000_defines.h	904;"	d
NWAY_LPAR_100T4_CAPS	if_em_hw.h	1831;"	d
NWAY_LPAR_100TX_FD_CAPS	dev/e1000/e1000_defines.h	903;"	d
NWAY_LPAR_100TX_FD_CAPS	if_em_hw.h	1830;"	d
NWAY_LPAR_100TX_HD_CAPS	dev/e1000/e1000_defines.h	902;"	d
NWAY_LPAR_100TX_HD_CAPS	if_em_hw.h	1829;"	d
NWAY_LPAR_10T_FD_CAPS	dev/e1000/e1000_defines.h	901;"	d
NWAY_LPAR_10T_FD_CAPS	if_em_hw.h	1828;"	d
NWAY_LPAR_10T_HD_CAPS	dev/e1000/e1000_defines.h	900;"	d
NWAY_LPAR_10T_HD_CAPS	if_em_hw.h	1827;"	d
NWAY_LPAR_ACKNOWLEDGE	dev/e1000/e1000_defines.h	908;"	d
NWAY_LPAR_ACKNOWLEDGE	if_em_hw.h	1835;"	d
NWAY_LPAR_ASM_DIR	dev/e1000/e1000_defines.h	906;"	d
NWAY_LPAR_ASM_DIR	if_em_hw.h	1833;"	d
NWAY_LPAR_NEXT_PAGE	dev/e1000/e1000_defines.h	909;"	d
NWAY_LPAR_NEXT_PAGE	if_em_hw.h	1836;"	d
NWAY_LPAR_PAUSE	dev/e1000/e1000_defines.h	905;"	d
NWAY_LPAR_PAUSE	if_em_hw.h	1832;"	d
NWAY_LPAR_REMOTE_FAULT	dev/e1000/e1000_defines.h	907;"	d
NWAY_LPAR_REMOTE_FAULT	if_em_hw.h	1834;"	d
NWAY_LPAR_SELECTOR_FIELD	dev/e1000/e1000_defines.h	899;"	d
NWAY_LPAR_SELECTOR_FIELD	if_em_hw.h	1826;"	d
OFFLOAD_NONE	if_em.h	/^	OFFLOAD_NONE,$/;"	e	enum:_XSUM_CONTEXT_T
OFFLOAD_TCP_IP	if_em.h	/^	OFFLOAD_TCP_IP,$/;"	e	enum:_XSUM_CONTEXT_T
OFFLOAD_UDP_IP	if_em.h	/^	OFFLOAD_UDP_IP$/;"	e	enum:_XSUM_CONTEXT_T
OFFSETOF_IPHDR_SUM	if_compat.h	82;"	d
OFFSETOF_TCPHDR_SUM	if_compat.h	83;"	d
OFFSETOF_UDPHDR_SUM	if_compat.h	84;"	d
PADDRESS_LENGTH_PAIR	dev/e1000/if_lem.h	/^} ADDRESS_LENGTH_PAIR, *PADDRESS_LENGTH_PAIR;$/;"	t	typeref:struct:_ADDRESS_LENGTH_PAIR
PADDRESS_LENGTH_PAIR	if_em.h	/^} ADDRESS_LENGTH_PAIR, *PADDRESS_LENGTH_PAIR;$/;"	t	typeref:struct:_ADDRESS_LENGTH_PAIR
PAGE_SIZE	if_em_osdep.h	133;"	d
PAUSE_SHIFT	if_em_hw.h	1627;"	d
PBA_SIZE	if_em_hw.h	1547;"	d
PCIE_DEVICE_CONTROL2	dev/e1000/e1000_defines.h	1138;"	d
PCIE_DEVICE_CONTROL2_16ms	dev/e1000/e1000_defines.h	1153;"	d
PCIE_ICH8_SNOOP_ALL	dev/e1000/e1000_ich8lan.h	102;"	d
PCIE_LINK_SPEED_2500	dev/e1000/e1000_defines.h	1151;"	d
PCIE_LINK_SPEED_5000	dev/e1000/e1000_defines.h	1152;"	d
PCIE_LINK_SPEED_MASK	dev/e1000/e1000_defines.h	1150;"	d
PCIE_LINK_STATUS	dev/e1000/e1000_defines.h	1137;"	d
PCIE_LINK_WIDTH_MASK	dev/e1000/e1000_defines.h	1148;"	d
PCIE_LINK_WIDTH_SHIFT	dev/e1000/e1000_defines.h	1149;"	d
PCIE_NO_SNOOP_ALL	dev/e1000/e1000_defines.h	837;"	d
PCIM_CMD_BUSMASTEREN	if_em_osdep.h	92;"	d
PCIM_CMD_IOEN	if_em_osdep.h	90;"	d
PCIM_CMD_MEMEN	if_em_osdep.h	91;"	d
PCIR_COMMAND	if_em_osdep.h	86;"	d
PCIR_REVID	if_em_osdep.h	87;"	d
PCIR_SUBDEV_0	if_em_osdep.h	89;"	d
PCIR_SUBVEND_0	if_em_osdep.h	88;"	d
PCIX_COMMAND_MMRBC_MASK	dev/e1000/e1000_defines.h	1140;"	d
PCIX_COMMAND_MMRBC_MASK	if_em_hw.h	1616;"	d
PCIX_COMMAND_MMRBC_SHIFT	dev/e1000/e1000_defines.h	1141;"	d
PCIX_COMMAND_MMRBC_SHIFT	if_em_hw.h	1617;"	d
PCIX_COMMAND_REGISTER	dev/e1000/e1000_defines.h	1133;"	d
PCIX_COMMAND_REGISTER	if_em_hw.h	1612;"	d
PCIX_STATUS_HI_MMRBC_2K	dev/e1000/e1000_defines.h	1145;"	d
PCIX_STATUS_HI_MMRBC_2K	if_em_hw.h	1621;"	d
PCIX_STATUS_HI_MMRBC_4K	dev/e1000/e1000_defines.h	1144;"	d
PCIX_STATUS_HI_MMRBC_4K	if_em_hw.h	1620;"	d
PCIX_STATUS_HI_MMRBC_MASK	dev/e1000/e1000_defines.h	1142;"	d
PCIX_STATUS_HI_MMRBC_MASK	if_em_hw.h	1618;"	d
PCIX_STATUS_HI_MMRBC_SHIFT	dev/e1000/e1000_defines.h	1143;"	d
PCIX_STATUS_HI_MMRBC_SHIFT	if_em_hw.h	1619;"	d
PCIX_STATUS_LO_FUNC_MASK	dev/e1000/e1000_defines.h	1146;"	d
PCIX_STATUS_REGISTER_HI	dev/e1000/e1000_defines.h	1135;"	d
PCIX_STATUS_REGISTER_HI	if_em_hw.h	1614;"	d
PCIX_STATUS_REGISTER_LO	dev/e1000/e1000_defines.h	1134;"	d
PCIX_STATUS_REGISTER_LO	if_em_hw.h	1613;"	d
PCI_ANY_ID	dev/e1000/if_em.h	185;"	d
PCI_ANY_ID	dev/e1000/if_igb.h	186;"	d
PCI_ANY_ID	dev/e1000/if_lem.h	188;"	d
PCI_ANY_ID	if_em.h	196;"	d
PCI_COMMAND_REGISTER	dev/e1000/e1000_osdep.h	83;"	d
PCI_HEADER_TYPE_MULTIFUNC	dev/e1000/e1000_defines.h	1147;"	d
PCI_HEADER_TYPE_REGISTER	dev/e1000/e1000_defines.h	1136;"	d
PDESC_ARRAY	dev/e1000/if_lem.h	/^} DESC_ARRAY, *PDESC_ARRAY;$/;"	t	typeref:struct:_DESCRIPTOR_PAIR
PDESC_ARRAY	if_em.h	/^} DESC_ARRAY, *PDESC_ARRAY;$/;"	t	typeref:struct:_DESCRIPTOR_PAIR
PHY_1000T_CTRL	dev/e1000/e1000_defines.h	957;"	d
PHY_1000T_CTRL	if_em_hw.h	1718;"	d
PHY_1000T_STATUS	dev/e1000/e1000_defines.h	958;"	d
PHY_1000T_STATUS	if_em_hw.h	1719;"	d
PHY_AUTONEG_ADV	dev/e1000/e1000_defines.h	952;"	d
PHY_AUTONEG_ADV	if_em_hw.h	1713;"	d
PHY_AUTONEG_EXP	dev/e1000/e1000_defines.h	954;"	d
PHY_AUTONEG_EXP	if_em_hw.h	1715;"	d
PHY_AUTO_NEG_LIMIT	dev/e1000/e1000_defines.h	711;"	d
PHY_AUTO_NEG_TIME	if_em_hw.h	2104;"	d
PHY_CFG_TIMEOUT	dev/e1000/e1000_defines.h	716;"	d
PHY_CONTROL	dev/e1000/e1000_defines.h	948;"	d
PHY_CONTROL_LB	dev/e1000/e1000_defines.h	961;"	d
PHY_CTRL	if_em_hw.h	1709;"	d
PHY_EXT_STATUS	dev/e1000/e1000_defines.h	959;"	d
PHY_EXT_STATUS	if_em_hw.h	1720;"	d
PHY_FORCE_LIMIT	dev/e1000/e1000_defines.h	712;"	d
PHY_FORCE_TIME	dev/e1000/e1000_defines.h	342;"	d
PHY_FORCE_TIME	if_em_hw.h	2105;"	d
PHY_ID1	dev/e1000/e1000_defines.h	950;"	d
PHY_ID1	if_em_hw.h	1711;"	d
PHY_ID2	dev/e1000/e1000_defines.h	951;"	d
PHY_ID2	if_em_hw.h	1712;"	d
PHY_LP_ABILITY	dev/e1000/e1000_defines.h	953;"	d
PHY_LP_ABILITY	if_em_hw.h	1714;"	d
PHY_LP_NEXT_PAGE	dev/e1000/e1000_defines.h	956;"	d
PHY_LP_NEXT_PAGE	if_em_hw.h	1717;"	d
PHY_NEXT_PAGE_TX	dev/e1000/e1000_defines.h	955;"	d
PHY_NEXT_PAGE_TX	if_em_hw.h	1716;"	d
PHY_OP_READ	dev/e1000/e1000_82543.h	41;"	d
PHY_OP_READ	if_em_hw.h	2096;"	d
PHY_OP_WRITE	dev/e1000/e1000_82543.h	42;"	d
PHY_OP_WRITE	if_em_hw.h	2097;"	d
PHY_PAGE_SHIFT	dev/e1000/e1000_ich8lan.h	108;"	d
PHY_PREAMBLE	dev/e1000/e1000_82543.h	38;"	d
PHY_PREAMBLE	if_em_hw.h	2094;"	d
PHY_PREAMBLE_SIZE	dev/e1000/e1000_82543.h	39;"	d
PHY_PREAMBLE_SIZE	if_em_hw.h	2099;"	d
PHY_REG	dev/e1000/e1000_ich8lan.h	109;"	d
PHY_REG_MASK	dev/e1000/e1000_phy.h	132;"	d
PHY_REVISION_MASK	dev/e1000/e1000_defines.h	1159;"	d
PHY_REVISION_MASK	if_em_hw.h	2106;"	d
PHY_SOF	dev/e1000/e1000_82543.h	40;"	d
PHY_SOF	if_em_hw.h	2095;"	d
PHY_STATUS	dev/e1000/e1000_defines.h	949;"	d
PHY_STATUS	if_em_hw.h	1710;"	d
PHY_TURNAROUND	dev/e1000/e1000_82543.h	43;"	d
PHY_TURNAROUND	if_em_hw.h	2098;"	d
PHY_TX_NORMAL_POLARITY	if_em_hw.h	1910;"	d
PHY_TX_POLARITY_MASK	if_em_hw.h	1909;"	d
PHY_UPPER_SHIFT	dev/e1000/e1000_phy.h	156;"	d
PICOSECS_PER_TICK	dev/e1000/if_igb.h	251;"	d
PICOSECS_PER_TICK	dev/e1000/if_lem.h	267;"	d
POLL_IMS_ENABLE_MASK	if_em_hw.h	416;"	d
POLL_RETURN_COUNT	dev/e1000/if_igb.c	1509;"	d	file:
QUEUE_NAME_LEN	dev/e1000/if_em.c	5337;"	d	file:
QUEUE_NAME_LEN	dev/e1000/if_igb.c	5524;"	d	file:
RECEIVE_BUFFER_ALIGN_SIZE	if_em_hw.h	1645;"	d
REG4_SPEED_MASK	if_em_hw.h	2108;"	d
REG9_SPEED_MASK	if_em_hw.h	2109;"	d
REQ_RX_DESCRIPTOR_MULTIPLE	dev/e1000/e1000_defines.h	40;"	d
REQ_RX_DESCRIPTOR_MULTIPLE	if_em_hw.h	1559;"	d
REQ_TX_DESCRIPTOR_MULTIPLE	dev/e1000/e1000_defines.h	39;"	d
REQ_TX_DESCRIPTOR_MULTIPLE	if_em_hw.h	1558;"	d
RF_ACTIVE	if_em_osdep.h	157;"	d
RF_SHAREABLE	if_em_osdep.h	156;"	d
ROUNDUP	util.h	30;"	d
SIOCADDMULTI	if_compat.h	/^	SIOCADDMULTI,$/;"	e	enum:__anon58
SIOCDELMULTI	if_compat.h	/^	SIOCDELMULTI,$/;"	e	enum:__anon58
SIOCGIFADDR	if_compat.h	/^	SIOCGIFADDR,$/;"	e	enum:__anon58
SIOCGIFMEDIA	if_compat.h	/^	SIOCGIFMEDIA,$/;"	e	enum:__anon58
SIOCSIFADDR	if_compat.h	/^	SIOCSIFADDR = 0x7000,$/;"	e	enum:__anon58
SIOCSIFCAP	if_compat.h	/^	SIOCSIFCAP,$/;"	e	enum:__anon58
SIOCSIFFLAGS	if_compat.h	/^	SIOCSIFFLAGS,$/;"	e	enum:__anon58
SIOCSIFMEDIA	if_compat.h	/^	SIOCSIFMEDIA,$/;"	e	enum:__anon58
SIOCSIFMTU	if_compat.h	/^	SIOCSIFMTU,$/;"	e	enum:__anon58
SPEED_10	dev/e1000/e1000_defines.h	336;"	d
SPEED_10	if_em_hw.h	380;"	d
SPEED_100	dev/e1000/e1000_defines.h	337;"	d
SPEED_100	if_em_hw.h	381;"	d
SPEED_1000	dev/e1000/e1000_defines.h	338;"	d
SPEED_1000	if_em_hw.h	382;"	d
SPEED_MODE_BIT	dev/e1000/if_em.h	202;"	d
SPEED_MODE_BIT	dev/e1000/if_igb.h	206;"	d
SPEED_MODE_BIT	dev/e1000/if_lem.h	206;"	d
SR_1000T_ASYM_PAUSE_DIR	dev/e1000/e1000_defines.h	936;"	d
SR_1000T_ASYM_PAUSE_DIR	if_em_hw.h	1890;"	d
SR_1000T_IDLE_ERROR_CNT	dev/e1000/e1000_defines.h	935;"	d
SR_1000T_IDLE_ERROR_CNT	if_em_hw.h	1889;"	d
SR_1000T_LOCAL_RX_STATUS	dev/e1000/e1000_defines.h	940;"	d
SR_1000T_LOCAL_RX_STATUS	if_em_hw.h	1894;"	d
SR_1000T_LOCAL_RX_STATUS_SHIFT	if_em_hw.h	1898;"	d
SR_1000T_LP_FD_CAPS	dev/e1000/e1000_defines.h	938;"	d
SR_1000T_LP_FD_CAPS	if_em_hw.h	1892;"	d
SR_1000T_LP_HD_CAPS	dev/e1000/e1000_defines.h	937;"	d
SR_1000T_LP_HD_CAPS	if_em_hw.h	1891;"	d
SR_1000T_MS_CONFIG_FAULT	dev/e1000/e1000_defines.h	942;"	d
SR_1000T_MS_CONFIG_FAULT	if_em_hw.h	1896;"	d
SR_1000T_MS_CONFIG_RES	dev/e1000/e1000_defines.h	941;"	d
SR_1000T_MS_CONFIG_RES	if_em_hw.h	1895;"	d
SR_1000T_PHY_EXCESSIVE_IDLE_ERR_COUNT	dev/e1000/e1000_defines.h	944;"	d
SR_1000T_PHY_EXCESSIVE_IDLE_ERR_COUNT	if_em_hw.h	1899;"	d
SR_1000T_REMOTE_RX_STATUS	dev/e1000/e1000_defines.h	939;"	d
SR_1000T_REMOTE_RX_STATUS	if_em_hw.h	1893;"	d
SR_1000T_REMOTE_RX_STATUS_SHIFT	if_em_hw.h	1897;"	d
STATIC	dev/e1000/e1000_osdep.h	75;"	d
SWDPIO_SHIFT	if_em_hw.h	1632;"	d
SWDPIO__EXT_SHIFT	if_em_hw.h	1637;"	d
SW_FLAG_TIMEOUT	dev/e1000/e1000_ich8lan.h	202;"	d
SYSCTL_ADD_NODE	if_compat.h	102;"	d
SYSCTL_ADD_PROC	if_compat.h	104;"	d
SYSCTL_ADD_UQUAD	dev/e1000/if_em.h	218;"	d
SYSCTL_ADD_UQUAD	dev/e1000/if_lem.h	222;"	d
SYSCTL_HANDLER_ARGS	if_compat.h	101;"	d
SYS_RES_IOPORT	if_em_osdep.h	153;"	d
SYS_RES_IRQ	if_em_osdep.h	155;"	d
SYS_RES_MEMORY	if_em_osdep.h	154;"	d
TAILQ_ENTRY	if_em_osdep.h	205;"	d
TAILQ_FIRST	if_em_osdep.h	208;"	d
TAILQ_FOREACH	if_em_osdep.h	214;"	d
TAILQ_FOREACH_SAFE	if_em_osdep.h	217;"	d
TAILQ_HEAD	if_em_osdep.h	202;"	d
TAILQ_INIT	if_em_osdep.h	221;"	d
TAILQ_INSERT_HEAD	if_em_osdep.h	226;"	d
TAILQ_NEXT	if_em_osdep.h	211;"	d
TAILQ_REMOVE	if_em_osdep.h	235;"	d
TBI_ACCEPT	dev/e1000/e1000_api.h	154;"	d
TBI_ACCEPT	if_em_hw.h	1682;"	d
TBI_COMPAT_ENABLED	dev/e1000/e1000_82543.h	45;"	d
TBI_SBP_ENABLED	dev/e1000/e1000_82543.h	47;"	d
TRUE	dev/e1000/e1000_osdep.h	77;"	d
TRUE	if_em_osdep.h	71;"	d
TSYNC_PORT	dev/e1000/if_igb.h	252;"	d
TSYNC_PORT	dev/e1000/if_lem.h	268;"	d
TUNABLE_INT	if_em_osdep.h	68;"	d
TX_THRESHOLD_DECREMENT	if_em_hw.h	1583;"	d
TX_THRESHOLD_DISABLE	if_em_hw.h	1585;"	d
TX_THRESHOLD_INCREMENT	if_em_hw.h	1582;"	d
TX_THRESHOLD_START	if_em_hw.h	1581;"	d
TX_THRESHOLD_STOP	if_em_hw.h	1584;"	d
TX_THRESHOLD_TIMER_MS	if_em_hw.h	1586;"	d
UPDATE_VF_REG	dev/e1000/if_igb.h	524;"	d
VERSION	setup.h	22;"	d
VLAN_INPUT_TAG	if_compat.h	89;"	d
VLAN_OUTPUT_TAG	if_compat.h	91;"	d
VLAN_TAG_SIZE	dev/e1000/e1000_defines.h	670;"	d
VLAN_TAG_SIZE	if_em_hw.h	400;"	d
VLAN_TAG_VALUE	if_compat.h	90;"	d
WAIT_FOR_AUTO_NEG_DEFAULT	dev/e1000/if_em.h	159;"	d
WAIT_FOR_AUTO_NEG_DEFAULT	dev/e1000/if_igb.h	152;"	d
WAIT_FOR_AUTO_NEG_DEFAULT	dev/e1000/if_lem.h	162;"	d
WAIT_FOR_AUTO_NEG_DEFAULT	if_em.h	165;"	d
XSUM_CONTEXT_T	if_em.h	/^} XSUM_CONTEXT_T;$/;"	t	typeref:enum:_XSUM_CONTEXT_T
_80003es2lan	dev/e1000/e1000_hw.h	/^		struct e1000_dev_spec_80003es2lan _80003es2lan;$/;"	m	union:e1000_hw::__anon28	typeref:struct:e1000_hw::__anon28::e1000_dev_spec_80003es2lan
_82541	dev/e1000/e1000_hw.h	/^		struct e1000_dev_spec_82541 _82541;$/;"	m	union:e1000_hw::__anon28	typeref:struct:e1000_hw::__anon28::e1000_dev_spec_82541
_82542	dev/e1000/e1000_hw.h	/^		struct e1000_dev_spec_82542 _82542;$/;"	m	union:e1000_hw::__anon28	typeref:struct:e1000_hw::__anon28::e1000_dev_spec_82542
_82543	dev/e1000/e1000_hw.h	/^		struct e1000_dev_spec_82543 _82543;$/;"	m	union:e1000_hw::__anon28	typeref:struct:e1000_hw::__anon28::e1000_dev_spec_82543
_82571	dev/e1000/e1000_hw.h	/^		struct e1000_dev_spec_82571 _82571;$/;"	m	union:e1000_hw::__anon28	typeref:struct:e1000_hw::__anon28::e1000_dev_spec_82571
_82575	dev/e1000/e1000_hw.h	/^		struct e1000_dev_spec_82575 _82575;$/;"	m	union:e1000_hw::__anon28	typeref:struct:e1000_hw::__anon28::e1000_dev_spec_82575
_ADDRESS_LENGTH_PAIR	dev/e1000/if_lem.h	/^typedef struct _ADDRESS_LENGTH_PAIR$/;"	s
_ADDRESS_LENGTH_PAIR	if_em.h	/^typedef struct _ADDRESS_LENGTH_PAIR$/;"	s
_DESCRIPTOR_PAIR	dev/e1000/if_lem.h	/^typedef struct _DESCRIPTOR_PAIR$/;"	s
_DESCRIPTOR_PAIR	if_em.h	/^typedef struct _DESCRIPTOR_PAIR $/;"	s
_E1000_80003ES2LAN_H_	dev/e1000/e1000_80003es2lan.h	36;"	d
_E1000_82541_H_	dev/e1000/e1000_82541.h	36;"	d
_E1000_82543_H_	dev/e1000/e1000_82543.h	36;"	d
_E1000_82571_H_	dev/e1000/e1000_82571.h	36;"	d
_E1000_82575_H_	dev/e1000/e1000_82575.h	36;"	d
_E1000_API_H_	dev/e1000/e1000_api.h	36;"	d
_E1000_DEFINES_H_	dev/e1000/e1000_defines.h	36;"	d
_E1000_HW_H_	dev/e1000/e1000_hw.h	36;"	d
_E1000_I210_H_	dev/e1000/e1000_i210.h	36;"	d
_E1000_ICH8LAN_H_	dev/e1000/e1000_ich8lan.h	36;"	d
_E1000_MAC_H_	dev/e1000/e1000_mac.h	36;"	d
_E1000_MANAGE_H_	dev/e1000/e1000_manage.h	36;"	d
_E1000_MBX_H_	dev/e1000/e1000_mbx.h	36;"	d
_E1000_NVM_H_	dev/e1000/e1000_nvm.h	36;"	d
_E1000_PHY_H_	dev/e1000/e1000_phy.h	36;"	d
_E1000_REGS_H_	dev/e1000/e1000_regs.h	36;"	d
_E1000_VF_H_	dev/e1000/e1000_vf.h	36;"	d
_EM_HW_H_	if_em_hw.h	40;"	d
_EM_H_DEFINED_	dev/e1000/if_em.h	37;"	d
_EM_H_DEFINED_	if_em.h	37;"	d
_FREEBSD_OS_H_	dev/e1000/e1000_osdep.h	37;"	d
_IF_EM_OSDEP_H_	if_em_osdep.h	35;"	d
_IGB_H_DEFINED_	dev/e1000/if_igb.h	36;"	d
_LEM_H_DEFINED_	dev/e1000/if_lem.h	37;"	d
_XSUM_CONTEXT_T	if_em.h	/^typedef enum _XSUM_CONTEXT_T {$/;"	g
__DEBUG_H	debug.h	20;"	d
__DEVICE_H	device.h	20;"	d
__DRIVER_H	driver.h	20;"	d
__FreeBSD_version	if_compat.h	29;"	d
__IF_COMPAT_H	if_compat.h	20;"	d
__MEMPOOL_H	mempool.h	20;"	d
__SETUP_H	setup.h	20;"	d
__TIMER_H	timer.h	20;"	d
__UTIL_H	util.h	20;"	d
__e1000_access_emi_reg_locked	dev/e1000/e1000_ich8lan.c	/^static s32 __e1000_access_emi_reg_locked(struct e1000_hw *hw, u16 address,$/;"	f	file:
__e1000_read_kmrn_reg	dev/e1000/e1000_phy.c	/^static s32 __e1000_read_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 *data,$/;"	f	file:
__e1000_read_phy_reg_hv	dev/e1000/e1000_phy.c	/^static s32 __e1000_read_phy_reg_hv(struct e1000_hw *hw, u32 offset, u16 *data,$/;"	f	file:
__e1000_read_phy_reg_igp	dev/e1000/e1000_phy.c	/^static s32 __e1000_read_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 *data,$/;"	f	file:
__e1000_write_kmrn_reg	dev/e1000/e1000_phy.c	/^static s32 __e1000_write_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 data,$/;"	f	file:
__e1000_write_phy_reg_hv	dev/e1000/e1000_phy.c	/^static s32 __e1000_write_phy_reg_hv(struct e1000_hw *hw, u32 offset, u16 data,$/;"	f	file:
__e1000_write_phy_reg_igp	dev/e1000/e1000_phy.c	/^static s32 __e1000_write_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 data,$/;"	f	file:
__haiku_handle_fbsd_drivers_list	dev/e1000/glue.c	/^__haiku_handle_fbsd_drivers_list(status_t (*handler)(driver_t *[]))$/;"	f
__le16	dev/e1000/e1000_hw.h	355;"	d
__le16	dev/e1000/e1000_osdep.h	107;"	d
__le32	dev/e1000/e1000_hw.h	356;"	d
__le32	dev/e1000/e1000_osdep.h	108;"	d
__le64	dev/e1000/e1000_hw.h	357;"	d
__le64	dev/e1000/e1000_osdep.h	109;"	d
_em_vendor_info_t	dev/e1000/if_em.h	/^typedef struct _em_vendor_info_t {$/;"	s
_em_vendor_info_t	dev/e1000/if_lem.h	/^typedef struct _em_vendor_info_t {$/;"	s
_igb_vendor_info_t	dev/e1000/if_igb.h	/^typedef struct _igb_vendor_info_t {$/;"	s
ac_enaddr	if_compat.h	/^	uint8 ac_enaddr[ETHER_ADDR_LEN];$/;"	m	struct:arpcom
ac_if	if_compat.h	/^	struct ifnet ac_if;$/;"	m	struct:arpcom	typeref:struct:arpcom::ifnet
acks	dev/e1000/e1000_hw.h	/^	u32 acks;$/;"	m	struct:e1000_mbx_stats
acks	dev/e1000/e1000_vf.h	/^	u32 acks;$/;"	m	struct:e1000_mbx_stats
acquire	dev/e1000/e1000_hw.h	/^	s32  (*acquire)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
acquire	dev/e1000/e1000_hw.h	/^	s32  (*acquire)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
acquire_swfw_sync	dev/e1000/e1000_hw.h	/^	s32  (*acquire_swfw_sync)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mac_operations
active_checksum_context	if_em.h	/^	XSUM_CONTEXT_T  active_checksum_context;$/;"	m	struct:adapter
adapter	dev/e1000/if_em.h	/^	struct adapter *adapter;	\/* Back-pointer to the adapter struct *\/$/;"	m	struct:em_int_delay_info	typeref:struct:em_int_delay_info::adapter
adapter	dev/e1000/if_em.h	/^        struct adapter          *adapter;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::adapter
adapter	dev/e1000/if_em.h	/^        struct adapter          *adapter;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::adapter
adapter	dev/e1000/if_em.h	/^struct adapter {$/;"	s
adapter	dev/e1000/if_igb.h	/^	struct adapter		*adapter;$/;"	m	struct:igb_queue	typeref:struct:igb_queue::adapter
adapter	dev/e1000/if_igb.h	/^	struct adapter		*adapter;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::adapter
adapter	dev/e1000/if_igb.h	/^	struct adapter		*adapter;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::adapter
adapter	dev/e1000/if_igb.h	/^struct adapter {$/;"	s
adapter	dev/e1000/if_lem.h	/^	struct adapter *adapter;	\/* Back-pointer to the adapter struct *\/$/;"	m	struct:em_int_delay_info	typeref:struct:em_int_delay_info::adapter
adapter	dev/e1000/if_lem.h	/^struct adapter {$/;"	s
adapter	device.h	/^	struct adapter *	adapter;$/;"	m	struct:device	typeref:struct:device::adapter
adapter	if_em.h	/^        struct adapter *adapter;        \/* Back-pointer to the adapter struct *\/$/;"	m	struct:em_int_delay_info	typeref:struct:em_int_delay_info::adapter
adapter	if_em.h	/^struct adapter {$/;"	s
adaptive_ifs	dev/e1000/e1000_hw.h	/^	bool adaptive_ifs;$/;"	m	struct:e1000_mac_info
adaptive_ifs	if_em_hw.h	/^    boolean_t adaptive_ifs;$/;"	m	struct:em_hw
addr	dev/e1000/e1000_hw.h	/^	u32 addr;$/;"	m	struct:e1000_phy_info
addr	dev/e1000/e1000_hw.h	/^	u8 addr[ETH_ADDR_LEN];$/;"	m	struct:e1000_mac_info
addr	dev/e1000/e1000_vf.h	/^	u8 addr[6];$/;"	m	struct:e1000_mac_info
address	dev/e1000/if_lem.h	/^	uint64_t   address;$/;"	m	struct:_ADDRESS_LENGTH_PAIR
address	if_em.h	/^    u_int64_t   address;$/;"	m	struct:_ADDRESS_LENGTH_PAIR
address_bits	dev/e1000/e1000_hw.h	/^	u16 address_bits;$/;"	m	struct:e1000_nvm_info
address_bits	if_em_hw.h	/^    uint16_t address_bits;$/;"	m	struct:em_eeprom_info
adv	dev/e1000/e1000_82575.h	/^			u32 adv:8;$/;"	m	struct:e1000_adv_context_desc::__anon35::__anon36
algnerrc	dev/e1000/e1000_hw.h	/^	u64 algnerrc;$/;"	m	struct:e1000_hw_stats
algnerrc	if_em_hw.h	/^    uint64_t algnerrc;$/;"	m	struct:em_hw_stats
api_version	driver.c	/^int32 api_version = B_CUR_DRIVER_API_VERSION;$/;"	v
arc_subsystem_valid	dev/e1000/e1000_hw.h	/^	bool arc_subsystem_valid;$/;"	m	struct:e1000_mac_info
area_free	util.c	/^area_free(void *p)$/;"	f
area_malloc	util.c	/^area_malloc(size_t size)$/;"	f
arpcom	if_compat.h	/^struct arpcom$/;"	s
asf_firmware_present	dev/e1000/e1000_hw.h	/^	bool asf_firmware_present;$/;"	m	struct:e1000_mac_info
atomic_read	util.h	32;"	d
autoneg	dev/e1000/e1000_hw.h	/^	bool autoneg;$/;"	m	struct:e1000_mac_info
autoneg	if_em_hw.h	/^    uint8_t autoneg;$/;"	m	struct:em_hw
autoneg_advertised	dev/e1000/e1000_hw.h	/^	u16 autoneg_advertised;$/;"	m	struct:e1000_phy_info
autoneg_advertised	if_em_hw.h	/^    uint16_t autoneg_advertised;$/;"	m	struct:em_hw
autoneg_failed	dev/e1000/e1000_hw.h	/^	bool autoneg_failed;$/;"	m	struct:e1000_mac_info
autoneg_failed	if_em_hw.h	/^    uint32_t autoneg_failed;$/;"	m	struct:em_hw
autoneg_mask	dev/e1000/e1000_hw.h	/^	u16 autoneg_mask;$/;"	m	struct:e1000_phy_info
autoneg_wait_to_complete	dev/e1000/e1000_hw.h	/^	bool autoneg_wait_to_complete;$/;"	m	struct:e1000_phy_info
b2ogprc	dev/e1000/e1000_hw.h	/^	u64 b2ogprc;$/;"	m	struct:e1000_hw_stats
b2ospc	dev/e1000/e1000_hw.h	/^	u64 b2ospc;$/;"	m	struct:e1000_hw_stats
back	dev/e1000/e1000_hw.h	/^	void *back;$/;"	m	struct:e1000_hw
back	dev/e1000/e1000_vf.h	/^	void *back;$/;"	m	struct:e1000_hw
back	if_em_hw.h	/^    void *back;$/;"	m	struct:em_hw
base_gorc	dev/e1000/e1000_hw.h	/^	u64 base_gorc;$/;"	m	struct:e1000_vf_stats
base_gorc	dev/e1000/e1000_vf.h	/^	u64 base_gorc;$/;"	m	struct:e1000_vf_stats
base_gorlbc	dev/e1000/e1000_hw.h	/^	u64 base_gorlbc;$/;"	m	struct:e1000_vf_stats
base_gorlbc	dev/e1000/e1000_vf.h	/^	u64 base_gorlbc;$/;"	m	struct:e1000_vf_stats
base_gotc	dev/e1000/e1000_hw.h	/^	u64 base_gotc;$/;"	m	struct:e1000_vf_stats
base_gotc	dev/e1000/e1000_vf.h	/^	u64 base_gotc;$/;"	m	struct:e1000_vf_stats
base_gotlbc	dev/e1000/e1000_hw.h	/^	u64 base_gotlbc;$/;"	m	struct:e1000_vf_stats
base_gotlbc	dev/e1000/e1000_vf.h	/^	u64 base_gotlbc;$/;"	m	struct:e1000_vf_stats
base_gprc	dev/e1000/e1000_hw.h	/^	u64 base_gprc;$/;"	m	struct:e1000_vf_stats
base_gprc	dev/e1000/e1000_vf.h	/^	u64 base_gprc;$/;"	m	struct:e1000_vf_stats
base_gprlbc	dev/e1000/e1000_hw.h	/^	u64 base_gprlbc;$/;"	m	struct:e1000_vf_stats
base_gprlbc	dev/e1000/e1000_vf.h	/^	u64 base_gprlbc;$/;"	m	struct:e1000_vf_stats
base_gptc	dev/e1000/e1000_hw.h	/^	u64 base_gptc;$/;"	m	struct:e1000_vf_stats
base_gptc	dev/e1000/e1000_vf.h	/^	u64 base_gptc;$/;"	m	struct:e1000_vf_stats
base_gptlbc	dev/e1000/e1000_hw.h	/^	u64 base_gptlbc;$/;"	m	struct:e1000_vf_stats
base_gptlbc	dev/e1000/e1000_vf.h	/^	u64 base_gptlbc;$/;"	m	struct:e1000_vf_stats
base_mprc	dev/e1000/e1000_hw.h	/^	u64 base_mprc;$/;"	m	struct:e1000_vf_stats
base_mprc	dev/e1000/e1000_vf.h	/^	u64 base_mprc;$/;"	m	struct:e1000_vf_stats
bcmp	if_em_osdep.h	65;"	d
bcopy	if_em_osdep.h	62;"	d
berasesz	dev/e1000/e1000_ich8lan.c	/^		u16 berasesz:2; \/* bit 4:3 Sector Erase Size *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
blink_led	dev/e1000/e1000_hw.h	/^	s32  (*blink_led)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
bool	dev/e1000/e1000_osdep.h	/^typedef boolean_t	bool;$/;"	t
boolean_t	if_em_osdep.h	/^typedef bool	boolean_t;$/;"	t
bprc	dev/e1000/e1000_hw.h	/^	u64 bprc;$/;"	m	struct:e1000_hw_stats
bprc	if_em_hw.h	/^    uint64_t bprc;$/;"	m	struct:em_hw_stats
bptc	dev/e1000/e1000_hw.h	/^	u64 bptc;$/;"	m	struct:e1000_hw_stats
bptc	if_em_hw.h	/^    uint64_t bptc;$/;"	m	struct:em_hw_stats
br	dev/e1000/if_em.h	/^	struct buf_ring         *br;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::buf_ring
br	dev/e1000/if_igb.h	/^	struct buf_ring		*br;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::buf_ring
br	dev/e1000/if_lem.h	/^	struct buf_ring	*br;$/;"	m	struct:adapter	typeref:struct:adapter::buf_ring
buffer_addr	dev/e1000/e1000_82575.h	/^		__le64 buffer_addr;    \/* Address of descriptor's data buf *\/$/;"	m	struct:e1000_adv_tx_desc::__anon45
buffer_addr	dev/e1000/e1000_82575.h	/^	__le64 buffer_addr;    \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_adv_data_desc
buffer_addr	dev/e1000/e1000_hw.h	/^		__le64 buffer_addr;$/;"	m	struct:e1000_rx_desc_extended::__anon1
buffer_addr	dev/e1000/e1000_hw.h	/^		__le64 buffer_addr[MAX_PS_BUFFERS];$/;"	m	struct:e1000_rx_desc_packet_split::__anon7
buffer_addr	dev/e1000/e1000_hw.h	/^	__le64 buffer_addr;   \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_tx_desc
buffer_addr	dev/e1000/e1000_hw.h	/^	__le64 buffer_addr;  \/* Address of the descriptor's buffer address *\/$/;"	m	struct:e1000_data_desc
buffer_addr	dev/e1000/e1000_hw.h	/^	__le64 buffer_addr; \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_rx_desc
buffer_addr	dev/e1000/e1000_vf.h	/^		u64 buffer_addr;    \/* Address of descriptor's data buf *\/$/;"	m	struct:e1000_adv_tx_desc::__anon55
buffer_addr	if_em_hw.h	/^    uint64_t buffer_addr;       \/* Address of the descriptor's buffer address *\/$/;"	m	struct:em_data_desc
buffer_addr	if_em_hw.h	/^    uint64_t buffer_addr;       \/* Address of the descriptor's data buffer *\/$/;"	m	struct:em_tx_desc
buffer_addr	if_em_hw.h	/^    uint64_t buffer_addr; \/* Address of the descriptor's data buffer *\/$/;"	m	struct:em_rx_desc
bus	dev/e1000/e1000_hw.h	/^	struct e1000_bus_info  bus;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_bus_info
bus_alloc_resource	if_em_osdep.c	/^bus_alloc_resource(device_t dev, int type, int *rid, int d, int e, int f, int g)$/;"	f
bus_generic_detach	if_em_osdep.h	151;"	d
bus_release_resource	if_em_osdep.c	/^bus_release_resource(device_t dev, int type, int reg, struct resource *res)$/;"	f
bus_setup_intr	if_em_osdep.c	/^bus_setup_intr(device_t dev, struct resource *res, int p3, interrupt_handler int_func, void *cookie, void **tag)$/;"	f
bus_speed	if_em_hw.h	/^    em_bus_speed bus_speed;$/;"	m	struct:em_hw
bus_teardown_intr	if_em_osdep.c	/^bus_teardown_intr(device_t dev, struct resource *res, void *tag)$/;"	f
bus_type	if_em_hw.h	/^    em_bus_type bus_type;$/;"	m	struct:em_hw
bus_width	if_em_hw.h	/^    em_bus_width bus_width;$/;"	m	struct:em_hw
bytes	dev/e1000/if_igb.h	/^	u32			bytes;$/;"	m	struct:rx_ring
bytes	dev/e1000/if_igb.h	/^	u32			bytes;$/;"	m	struct:tx_ring
bzero	if_em_osdep.h	59;"	d
cable_length	dev/e1000/e1000_hw.h	/^	u16 cable_length;$/;"	m	struct:e1000_phy_info
cable_length	if_em_hw.h	/^    em_cable_length cable_length;$/;"	m	struct:em_phy_info
cable_polarity	dev/e1000/e1000_hw.h	/^	enum e1000_rev_polarity cable_polarity;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_rev_polarity
cable_polarity	if_em_hw.h	/^    em_rev_polarity cable_polarity;$/;"	m	struct:em_phy_info
callout_handle	if_em_osdep.h	/^struct callout_handle$/;"	s
callout_handle_init	if_em_osdep.c	/^callout_handle_init(struct callout_handle *handle)$/;"	f
cbrdpc	dev/e1000/e1000_hw.h	/^	u64 cbrdpc;$/;"	m	struct:e1000_hw_stats
cbrmpc	dev/e1000/e1000_hw.h	/^	u64 cbrmpc;$/;"	m	struct:e1000_hw_stats
cbtmpc	dev/e1000/e1000_hw.h	/^	u64 cbtmpc;$/;"	m	struct:e1000_hw_stats
cexterr	dev/e1000/e1000_hw.h	/^	u64 cexterr;$/;"	m	struct:e1000_hw_stats
cexterr	if_em_hw.h	/^    uint64_t cexterr;$/;"	m	struct:em_hw_stats
cfg_on_link_up	dev/e1000/e1000_hw.h	/^	s32  (*cfg_on_link_up)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
check_for_ack	dev/e1000/e1000_hw.h	/^	s32 (*check_for_ack)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mbx_operations
check_for_ack	dev/e1000/e1000_vf.h	/^	s32 (*check_for_ack)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mbx_operations
check_for_link	dev/e1000/e1000_hw.h	/^	s32  (*check_for_link)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
check_for_link	dev/e1000/e1000_vf.h	/^	s32  (*check_for_link)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
check_for_msg	dev/e1000/e1000_hw.h	/^	s32 (*check_for_msg)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mbx_operations
check_for_msg	dev/e1000/e1000_vf.h	/^	s32 (*check_for_msg)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mbx_operations
check_for_rst	dev/e1000/e1000_hw.h	/^	s32 (*check_for_rst)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mbx_operations
check_for_rst	dev/e1000/e1000_vf.h	/^	s32 (*check_for_rst)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mbx_operations
check_mng_mode	dev/e1000/e1000_hw.h	/^	bool (*check_mng_mode)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
check_polarity	dev/e1000/e1000_hw.h	/^	s32  (*check_polarity)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
check_reset_block	dev/e1000/e1000_hw.h	/^	s32  (*check_reset_block)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
checksum	dev/e1000/e1000_hw.h	/^	u8  checksum;$/;"	m	struct:e1000_host_mng_command_header
checksum	dev/e1000/e1000_hw.h	/^	u8  checksum;$/;"	m	struct:e1000_host_mng_dhcp_cookie
checksum	dev/e1000/e1000_hw.h	/^	u8 checksum;$/;"	m	struct:e1000_host_command_header
chunk_head	mempool.c	/^void *chunk_head = 0;$/;"	v
chunk_pool	mempool.c	/^void *chunk_pool = 0;$/;"	v
chunk_pool_get	mempool.c	/^chunk_pool_get(void)$/;"	f
chunk_pool_lock	mempool.c	/^spinlock chunk_pool_lock = 0;$/;"	v
chunk_pool_put	mempool.c	/^chunk_pool_put(void *p)$/;"	f
clean_tx_interrupts	if_em.h	/^	unsigned long   clean_tx_interrupts;$/;"	m	struct:adapter
cleanup_led	dev/e1000/e1000_hw.h	/^	s32  (*cleanup_led)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
clear_hw_cntrs	dev/e1000/e1000_hw.h	/^	void (*clear_hw_cntrs)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
clear_semaphore_once	dev/e1000/e1000_hw.h	/^	bool clear_semaphore_once;$/;"	m	struct:e1000_dev_spec_82575
clear_vfta	dev/e1000/e1000_hw.h	/^	void (*clear_vfta)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
clear_vfta	dev/e1000/e1000_vf.h	/^	void (*clear_vfta)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
clock	dev/e1000/if_igb.h	/^	struct nettimer         clock;$/;"	m	struct:adapter	typeref:struct:adapter::nettimer
closed	device.h	/^	volatile bool		closed;$/;"	m	struct:device
cmd	dev/e1000/e1000_hw.h	/^			u8 cmd;  \/* Descriptor control *\/$/;"	m	struct:e1000_tx_desc::__anon14::__anon15
cmd	dev/e1000/e1000_hw.h	/^			u8 cmd;$/;"	m	struct:e1000_data_desc::__anon24::__anon25
cmd	if_em_hw.h	/^            uint8_t cmd;        \/* *\/$/;"	m	struct:em_data_desc::__anon90::__anon91
cmd	if_em_hw.h	/^            uint8_t cmd;        \/* Descriptor control *\/$/;"	m	struct:em_tx_desc::__anon80::__anon81
cmd_and_length	dev/e1000/e1000_hw.h	/^	__le32 cmd_and_length;$/;"	m	struct:e1000_context_desc
cmd_and_length	if_em_hw.h	/^    uint32_t cmd_and_length;    \/* *\/$/;"	m	struct:em_context_desc
cmd_type_len	dev/e1000/e1000_82575.h	/^		__le32 cmd_type_len;$/;"	m	struct:e1000_adv_tx_desc::__anon45
cmd_type_len	dev/e1000/e1000_vf.h	/^		u32 cmd_type_len;$/;"	m	struct:e1000_adv_tx_desc::__anon55
colc	dev/e1000/e1000_hw.h	/^	u64 colc;$/;"	m	struct:e1000_hw_stats
colc	if_em_hw.h	/^    uint64_t colc;$/;"	m	struct:em_hw_stats
collision_delta	dev/e1000/e1000_hw.h	/^	u32 collision_delta;$/;"	m	struct:e1000_mac_info
collision_delta	if_em_hw.h	/^    uint32_t collision_delta;$/;"	m	struct:em_hw
command_data	dev/e1000/e1000_hw.h	/^	u8 command_data[E1000_HI_MAX_DATA_LENGTH];$/;"	m	struct:e1000_host_command_info
command_data	dev/e1000/e1000_hw.h	/^	u8 command_data[E1000_HI_MAX_MNG_DATA_LENGTH];$/;"	m	struct:e1000_host_mng_command_info
command_header	dev/e1000/e1000_hw.h	/^	struct e1000_host_command_header command_header;$/;"	m	struct:e1000_host_command_info	typeref:struct:e1000_host_command_info::e1000_host_command_header
command_header	dev/e1000/e1000_hw.h	/^	struct e1000_host_mng_command_header command_header;$/;"	m	struct:e1000_host_mng_command_info	typeref:struct:e1000_host_mng_command_info::e1000_host_mng_command_header
command_id	dev/e1000/e1000_hw.h	/^	u8  command_id;$/;"	m	struct:e1000_host_mng_command_header
command_id	dev/e1000/e1000_hw.h	/^	u8 command_id;$/;"	m	struct:e1000_host_command_header
command_length	dev/e1000/e1000_hw.h	/^	u16 command_length;$/;"	m	struct:e1000_host_mng_command_header
command_length	dev/e1000/e1000_hw.h	/^	u8 command_length;$/;"	m	struct:e1000_host_command_header
command_options	dev/e1000/e1000_hw.h	/^	u8 command_options;$/;"	m	struct:e1000_host_command_header
commit	dev/e1000/e1000_hw.h	/^	s32  (*commit)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
compare	dev/e1000/if_igb.h	/^	struct nettime_compare  compare;$/;"	m	struct:adapter	typeref:struct:adapter::nettime_compare
config	dev/e1000/e1000_82575.h	/^		} config;$/;"	m	union:e1000_adv_data_desc::__anon29	typeref:struct:e1000_adv_data_desc::__anon29::__anon30
config_collision_dist	dev/e1000/e1000_hw.h	/^	void (*config_collision_dist)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
contigfree	if_em_osdep.c	/^contigfree(void *p, int p1, int p2)$/;"	f
contigmalloc	if_em_osdep.c	/^contigmalloc(int size, int p1, int p2, int p3, int p4, int p5, int p6)$/;"	f
cookie	if_em_osdep.c	/^	void *cookie;$/;"	m	struct:int_tag	file:
cookie	timer.c	/^	void *			cookie;$/;"	m	struct:timer_info	file:
core_mtx	dev/e1000/if_em.h	/^	struct mtx	core_mtx;$/;"	m	struct:adapter	typeref:struct:adapter::mtx
core_mtx	dev/e1000/if_igb.h	/^	struct mtx	core_mtx;$/;"	m	struct:adapter	typeref:struct:adapter::mtx
core_mtx	dev/e1000/if_lem.h	/^	struct mtx	core_mtx;$/;"	m	struct:adapter	typeref:struct:adapter::mtx
crcerrs	dev/e1000/e1000_hw.h	/^	u64 crcerrs;$/;"	m	struct:e1000_hw_stats
crcerrs	if_em_hw.h	/^    uint64_t crcerrs;$/;"	m	struct:em_hw_stats
create_timer	timer.c	/^create_timer(timer_function func, void *cookie, bigtime_t interval, uint32 flags)$/;"	f
cso	dev/e1000/e1000_hw.h	/^			u8 cso;  \/* Checksum offset *\/$/;"	m	struct:e1000_tx_desc::__anon14::__anon15
cso	if_em_hw.h	/^            uint8_t cso;        \/* Checksum offset *\/$/;"	m	struct:em_tx_desc::__anon80::__anon81
css	dev/e1000/e1000_hw.h	/^			u8 css;  \/* Checksum start *\/$/;"	m	struct:e1000_tx_desc::__anon16::__anon17
css	if_em_hw.h	/^            uint8_t css;        \/* Checksum start *\/$/;"	m	struct:em_tx_desc::__anon82::__anon83
csum	dev/e1000/e1000_82575.h	/^					__le16 csum; \/* Packet Checksum *\/$/;"	m	struct:e1000_adv_rx_desc::__anon38::__anon39::__anon42::__anon43
csum	dev/e1000/e1000_hw.h	/^					__le16 csum;     \/* Packet Checksum *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon8::__anon9::__anon10::__anon11
csum	dev/e1000/e1000_hw.h	/^					__le16 csum;   \/* Packet Checksum *\/$/;"	m	struct:e1000_rx_desc_extended::__anon2::__anon3::__anon4::__anon5
csum	dev/e1000/e1000_hw.h	/^	__le16 csum; \/* Packet checksum *\/$/;"	m	struct:e1000_rx_desc
csum	dev/e1000/e1000_vf.h	/^					u16 csum;     \/* Packet Checksum *\/$/;"	m	struct:e1000_adv_rx_desc::__anon48::__anon49::__anon52::__anon53
csum	if_em_hw.h	/^    uint16_t csum;       \/* Packet checksum *\/$/;"	m	struct:em_rx_desc
csum_data	if_compat.h	/^	uint16			csum_data;$/;"	m	struct:m_pkthdr
csum_flags	if_compat.h	/^	int				csum_flags;$/;"	m	struct:m_pkthdr
csum_ip	dev/e1000/e1000_82575.h	/^				} csum_ip;$/;"	m	union:e1000_adv_rx_desc::__anon38::__anon39::__anon42	typeref:struct:e1000_adv_rx_desc::__anon38::__anon39::__anon42::__anon43
csum_ip	dev/e1000/e1000_hw.h	/^				} csum_ip;$/;"	m	union:e1000_rx_desc_extended::__anon2::__anon3::__anon4	typeref:struct:e1000_rx_desc_extended::__anon2::__anon3::__anon4::__anon5
csum_ip	dev/e1000/e1000_hw.h	/^				} csum_ip;$/;"	m	union:e1000_rx_desc_packet_split::__anon8::__anon9::__anon10	typeref:struct:e1000_rx_desc_packet_split::__anon8::__anon9::__anon10::__anon11
csum_ip	dev/e1000/e1000_vf.h	/^				} csum_ip;$/;"	m	union:e1000_adv_rx_desc::__anon48::__anon49::__anon52	typeref:struct:e1000_adv_rx_desc::__anon48::__anon49::__anon52::__anon53
current_ifs_val	dev/e1000/e1000_hw.h	/^	u16 current_ifs_val;$/;"	m	struct:e1000_mac_info
current_ifs_val	if_em_hw.h	/^    uint16_t current_ifs_val;$/;"	m	struct:em_hw
current_mode	dev/e1000/e1000_hw.h	/^	enum e1000_fc_mode current_mode;  \/* FC mode in effect *\/$/;"	m	struct:e1000_fc_info	typeref:enum:e1000_fc_info::e1000_fc_mode
cycles	dev/e1000/if_igb.h	/^	struct cyclecounter     cycles;$/;"	m	struct:adapter	typeref:struct:adapter::cyclecounter
dael	dev/e1000/e1000_ich8lan.c	/^		u16 dael:1; \/* bit 2 Direct Access error Log *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
data	dev/e1000/e1000_82575.h	/^				__le32 data;$/;"	m	union:e1000_adv_rx_desc::__anon38::__anon39::__anon40
data	dev/e1000/e1000_82575.h	/^		u32 data;$/;"	m	union:e1000_adv_data_desc::__anon29
data	dev/e1000/e1000_82575.h	/^		u32 data;$/;"	m	union:e1000_adv_data_desc::__anon31
data	dev/e1000/e1000_hw.h	/^		__le32 data;$/;"	m	union:e1000_context_desc::__anon22
data	dev/e1000/e1000_hw.h	/^		__le32 data;$/;"	m	union:e1000_data_desc::__anon24
data	dev/e1000/e1000_hw.h	/^		__le32 data;$/;"	m	union:e1000_data_desc::__anon26
data	dev/e1000/e1000_hw.h	/^		__le32 data;$/;"	m	union:e1000_tx_desc::__anon14
data	dev/e1000/e1000_hw.h	/^		__le32 data;$/;"	m	union:e1000_tx_desc::__anon16
data	dev/e1000/e1000_vf.h	/^				u32 data;$/;"	m	union:e1000_adv_rx_desc::__anon48::__anon49::__anon50
data	if_em_hw.h	/^        uint32_t data;$/;"	m	union:em_context_desc::__anon88
data	if_em_hw.h	/^        uint32_t data;$/;"	m	union:em_data_desc::__anon90
data	if_em_hw.h	/^        uint32_t data;$/;"	m	union:em_data_desc::__anon92
data	if_em_hw.h	/^        uint32_t data;$/;"	m	union:em_tx_desc::__anon80
data	if_em_hw.h	/^        uint32_t data;$/;"	m	union:em_tx_desc::__anon82
datalen	dev/e1000/e1000_82575.h	/^			u32 datalen:16; \/* Data buffer length *\/$/;"	m	struct:e1000_adv_data_desc::__anon29::__anon30
dc	dev/e1000/e1000_hw.h	/^	u64 dc;$/;"	m	struct:e1000_hw_stats
dc	if_em_hw.h	/^    uint64_t dc;$/;"	m	struct:em_hw_stats
dcmd	dev/e1000/e1000_82575.h	/^			u32 dcmd:8;  \/* Descriptor command *\/$/;"	m	struct:e1000_adv_data_desc::__anon29::__anon30
delay_usec	dev/e1000/e1000_hw.h	/^	u16 delay_usec;$/;"	m	struct:e1000_nvm_info
delay_usec	if_em_hw.h	/^    uint16_t delay_usec;$/;"	m	struct:em_eeprom_info
delete_timer	timer.c	/^delete_timer(timer_id id)$/;"	f
descriptor	dev/e1000/if_lem.h	/^	ADDRESS_LENGTH_PAIR descriptor[4];$/;"	m	struct:_DESCRIPTOR_PAIR
descriptor	if_em.h	/^    ADDRESS_LENGTH_PAIR descriptor[4];$/;"	m	struct:_DESCRIPTOR_PAIR
dev	dev/e1000/e1000_osdep.h	/^	struct device     *dev;$/;"	m	struct:e1000_osdep	typeref:struct:e1000_osdep::device
dev	dev/e1000/if_em.h	/^	struct device	*dev;$/;"	m	struct:adapter	typeref:struct:adapter::device
dev	dev/e1000/if_igb.h	/^	struct device	*dev;$/;"	m	struct:adapter	typeref:struct:adapter::device
dev	dev/e1000/if_lem.h	/^	struct device	*dev;$/;"	m	struct:adapter	typeref:struct:adapter::device
dev	if_em.h	/^	struct device   *dev;$/;"	m	struct:adapter	typeref:struct:adapter::device
dev	if_em_osdep.h	/^	ipro1000_device *dev;$/;"	m	struct:em_osdep
devId	device.h	/^	int 				devId;$/;"	m	struct:device
dev_spec	dev/e1000/e1000_hw.h	/^	} dev_spec;$/;"	m	struct:e1000_hw	typeref:union:e1000_hw::__anon28
dev_spec	dev/e1000/e1000_vf.h	/^	} dev_spec;$/;"	m	struct:e1000_hw	typeref:union:e1000_hw::__anon57
device	device.h	/^typedef struct device {$/;"	s
device_control	dev/e1000/if_igb.h	/^	unsigned long	device_control;$/;"	m	struct:adapter
device_get_softc	if_compat.h	276;"	d
device_get_unit	if_compat.h	279;"	d
device_id	dev/e1000/e1000_hw.h	/^	u16 device_id;$/;"	m	struct:e1000_hw
device_id	dev/e1000/e1000_vf.h	/^	u16 device_id;$/;"	m	struct:e1000_hw
device_id	dev/e1000/if_em.h	/^	unsigned int device_id;$/;"	m	struct:_em_vendor_info_t
device_id	dev/e1000/if_igb.h	/^	unsigned int device_id;$/;"	m	struct:_igb_vendor_info_t
device_id	dev/e1000/if_lem.h	/^	unsigned int device_id;$/;"	m	struct:_em_vendor_info_t
device_id	if_em_hw.h	/^    uint16_t device_id;$/;"	m	struct:em_hw
device_ifp	device.c	/^device_ifp(ipro1000_device *device)$/;"	f	file:
device_t	if_em_osdep.h	/^typedef ipro1000_device * device_t;$/;"	t
disable_polarity_correction	dev/e1000/e1000_hw.h	/^	bool disable_polarity_correction;$/;"	m	struct:e1000_phy_info
disable_polarity_correction	if_em_hw.h	/^    boolean_t disable_polarity_correction;$/;"	m	struct:em_hw
discard	dev/e1000/if_em.h	/^	bool			discard;$/;"	m	struct:rx_ring
discard	dev/e1000/if_igb.h	/^	bool			discard;$/;"	m	struct:rx_ring
dma_fairness	dev/e1000/e1000_hw.h	/^	bool dma_fairness;$/;"	m	struct:e1000_dev_spec_82542
dma_fairness	dev/e1000/e1000_hw.h	/^	bool dma_fairness;$/;"	m	struct:e1000_dev_spec_82543
dma_fairness	if_em_hw.h	/^    uint8_t dma_fairness;$/;"	m	struct:em_hw
dma_map	dev/e1000/if_em.h	/^        bus_dmamap_t            dma_map;$/;"	m	struct:em_dma_alloc
dma_map	dev/e1000/if_igb.h	/^        bus_dmamap_t            dma_map;$/;"	m	struct:igb_dma_alloc
dma_map	dev/e1000/if_lem.h	/^        bus_dmamap_t            dma_map;$/;"	m	struct:em_dma_alloc
dma_nseg	dev/e1000/if_em.h	/^        int                     dma_nseg;$/;"	m	struct:em_dma_alloc
dma_nseg	dev/e1000/if_igb.h	/^        int                     dma_nseg;$/;"	m	struct:igb_dma_alloc
dma_nseg	dev/e1000/if_lem.h	/^        int                     dma_nseg;$/;"	m	struct:em_dma_alloc
dma_paddr	dev/e1000/if_em.h	/^        bus_addr_t              dma_paddr;$/;"	m	struct:em_dma_alloc
dma_paddr	dev/e1000/if_igb.h	/^        bus_addr_t              dma_paddr;$/;"	m	struct:igb_dma_alloc
dma_paddr	dev/e1000/if_lem.h	/^        bus_addr_t              dma_paddr;$/;"	m	struct:em_dma_alloc
dma_seg	dev/e1000/if_em.h	/^        bus_dma_segment_t       dma_seg;$/;"	m	struct:em_dma_alloc
dma_seg	dev/e1000/if_igb.h	/^        bus_dma_segment_t       dma_seg;$/;"	m	struct:igb_dma_alloc
dma_seg	dev/e1000/if_lem.h	/^        bus_dma_segment_t       dma_seg;$/;"	m	struct:em_dma_alloc
dma_tag	dev/e1000/if_em.h	/^        bus_dma_tag_t           dma_tag;$/;"	m	struct:em_dma_alloc
dma_tag	dev/e1000/if_igb.h	/^        bus_dma_tag_t           dma_tag;$/;"	m	struct:igb_dma_alloc
dma_tag	dev/e1000/if_lem.h	/^        bus_dma_tag_t           dma_tag;$/;"	m	struct:em_dma_alloc
dma_vaddr	dev/e1000/if_em.h	/^        caddr_t                 dma_vaddr;$/;"	m	struct:em_dma_alloc
dma_vaddr	dev/e1000/if_igb.h	/^        caddr_t                 dma_vaddr;$/;"	m	struct:igb_dma_alloc
dma_vaddr	dev/e1000/if_lem.h	/^        caddr_t                 dma_vaddr;$/;"	m	struct:em_dma_alloc
dmac	dev/e1000/if_igb.h	/^	u32		dmac;$/;"	m	struct:adapter
doosync	dev/e1000/e1000_hw.h	/^	u64 doosync;$/;"	m	struct:e1000_hw_stats
downshift	if_em_hw.h	/^    em_downshift downshift;$/;"	m	struct:em_phy_info
drbr_needs_enqueue	dev/e1000/if_igb.h	/^drbr_needs_enqueue(struct ifnet *ifp, struct buf_ring *br)$/;"	f
driver_free	if_em_osdep.c	/^driver_free(void *p, int p2)$/;"	f
driver_malloc	if_em_osdep.c	/^driver_malloc(int size, int p2, int p3)$/;"	f
dropped_pkts	dev/e1000/if_em.h	/^	unsigned long	dropped_pkts;$/;"	m	struct:adapter
dropped_pkts	dev/e1000/if_igb.h	/^	unsigned long	dropped_pkts;$/;"	m	struct:adapter
dropped_pkts	dev/e1000/if_lem.h	/^	unsigned long	dropped_pkts;$/;"	m	struct:adapter
dropped_pkts	if_em.h	/^	unsigned long   dropped_pkts;$/;"	m	struct:adapter
dsp_config	dev/e1000/e1000_hw.h	/^	enum e1000_dsp_config dsp_config;$/;"	m	struct:e1000_dev_spec_82541	typeref:enum:e1000_dev_spec_82541::e1000_dsp_config
dsp_config_state	if_em_hw.h	/^    em_dsp_config dsp_config_state;$/;"	m	struct:em_hw
dtyp	dev/e1000/e1000_82575.h	/^			u32 dtyp:4;  \/* Descriptor type *\/$/;"	m	struct:e1000_adv_data_desc::__anon29::__anon30
dtyp	dev/e1000/e1000_82575.h	/^			u32 dtyp:4;$/;"	m	struct:e1000_adv_context_desc::__anon35::__anon36
e1000_1000t_rx_status	dev/e1000/e1000_hw.h	/^enum e1000_1000t_rx_status {$/;"	g
e1000_1000t_rx_status_not_ok	dev/e1000/e1000_hw.h	/^	e1000_1000t_rx_status_not_ok = 0,$/;"	e	enum:e1000_1000t_rx_status
e1000_1000t_rx_status_ok	dev/e1000/e1000_hw.h	/^	e1000_1000t_rx_status_ok,$/;"	e	enum:e1000_1000t_rx_status
e1000_1000t_rx_status_undefined	dev/e1000/e1000_hw.h	/^	e1000_1000t_rx_status_undefined = 0xFF$/;"	e	enum:e1000_1000t_rx_status
e1000_80003es2lan	dev/e1000/e1000_hw.h	/^	e1000_80003es2lan,$/;"	e	enum:e1000_mac_type
e1000_82540	dev/e1000/e1000_hw.h	/^	e1000_82540,$/;"	e	enum:e1000_mac_type
e1000_82541	dev/e1000/e1000_hw.h	/^	e1000_82541,$/;"	e	enum:e1000_mac_type
e1000_82541_rev_2	dev/e1000/e1000_hw.h	/^	e1000_82541_rev_2,$/;"	e	enum:e1000_mac_type
e1000_82542	dev/e1000/e1000_hw.h	/^	e1000_82542,$/;"	e	enum:e1000_mac_type
e1000_82543	dev/e1000/e1000_hw.h	/^	e1000_82543,$/;"	e	enum:e1000_mac_type
e1000_82544	dev/e1000/e1000_hw.h	/^	e1000_82544,$/;"	e	enum:e1000_mac_type
e1000_82545	dev/e1000/e1000_hw.h	/^	e1000_82545,$/;"	e	enum:e1000_mac_type
e1000_82545_rev_3	dev/e1000/e1000_hw.h	/^	e1000_82545_rev_3,$/;"	e	enum:e1000_mac_type
e1000_82546	dev/e1000/e1000_hw.h	/^	e1000_82546,$/;"	e	enum:e1000_mac_type
e1000_82546_rev_3	dev/e1000/e1000_hw.h	/^	e1000_82546_rev_3,$/;"	e	enum:e1000_mac_type
e1000_82547	dev/e1000/e1000_hw.h	/^	e1000_82547,$/;"	e	enum:e1000_mac_type
e1000_82547_rev_2	dev/e1000/e1000_hw.h	/^	e1000_82547_rev_2,$/;"	e	enum:e1000_mac_type
e1000_82571	dev/e1000/e1000_hw.h	/^	e1000_82571,$/;"	e	enum:e1000_mac_type
e1000_82572	dev/e1000/e1000_hw.h	/^	e1000_82572,$/;"	e	enum:e1000_mac_type
e1000_82573	dev/e1000/e1000_hw.h	/^	e1000_82573,$/;"	e	enum:e1000_mac_type
e1000_82574	dev/e1000/e1000_hw.h	/^	e1000_82574,$/;"	e	enum:e1000_mac_type
e1000_82575	dev/e1000/e1000_hw.h	/^	e1000_82575,$/;"	e	enum:e1000_mac_type
e1000_82576	dev/e1000/e1000_hw.h	/^	e1000_82576,$/;"	e	enum:e1000_mac_type
e1000_82580	dev/e1000/e1000_hw.h	/^	e1000_82580,$/;"	e	enum:e1000_mac_type
e1000_82580_rxpbs_table	dev/e1000/e1000_82575.c	/^static const u16 e1000_82580_rxpbs_table[] = {$/;"	v	file:
e1000_82583	dev/e1000/e1000_hw.h	/^	e1000_82583,$/;"	e	enum:e1000_mac_type
e1000_access_phy_debug_regs_hv	dev/e1000/e1000_phy.c	/^static s32 e1000_access_phy_debug_regs_hv(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_access_phy_wakeup_reg_bm	dev/e1000/e1000_phy.c	/^static s32 e1000_access_phy_wakeup_reg_bm(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_acquire_mac_csr_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_acquire_mac_csr_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_nvm_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_acquire_nvm_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_nvm_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_acquire_nvm_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_nvm_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_acquire_nvm_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_nvm_generic	dev/e1000/e1000_nvm.c	/^s32 e1000_acquire_nvm_generic(struct e1000_hw *hw)$/;"	f
e1000_acquire_nvm_i210	dev/e1000/e1000_i210.c	/^static s32 e1000_acquire_nvm_i210(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_nvm_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_acquire_nvm_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_phy	dev/e1000/e1000_api.c	/^s32 e1000_acquire_phy(struct e1000_hw *hw)$/;"	f
e1000_acquire_phy_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_acquire_phy_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_phy_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_acquire_phy_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_swflag_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_acquire_swflag_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_swfw_sync_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_acquire_swfw_sync_80003es2lan(struct e1000_hw *hw, u16 mask)$/;"	f	file:
e1000_acquire_swfw_sync_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_acquire_swfw_sync_82575(struct e1000_hw *hw, u16 mask)$/;"	f	file:
e1000_acquire_swfw_sync_i210	dev/e1000/e1000_i210.c	/^s32 e1000_acquire_swfw_sync_i210(struct e1000_hw *hw, u16 mask)$/;"	f
e1000_acquire_vf	dev/e1000/e1000_vf.c	/^static s32 e1000_acquire_vf(struct e1000_hw *hw)$/;"	f	file:
e1000_adjust_serdes_amplitude_82540	dev/e1000/e1000_82540.c	/^static s32 e1000_adjust_serdes_amplitude_82540(struct e1000_hw *hw)$/;"	f	file:
e1000_adv_context_desc	dev/e1000/e1000_82575.h	/^struct e1000_adv_context_desc {$/;"	s
e1000_adv_data_desc	dev/e1000/e1000_82575.h	/^struct e1000_adv_data_desc {$/;"	s
e1000_adv_rx_desc	dev/e1000/e1000_82575.h	/^union e1000_adv_rx_desc {$/;"	u
e1000_adv_rx_desc	dev/e1000/e1000_vf.h	/^union e1000_adv_rx_desc {$/;"	u
e1000_adv_tx_context_desc	dev/e1000/e1000_82575.h	/^struct e1000_adv_tx_context_desc {$/;"	s
e1000_adv_tx_context_desc	dev/e1000/e1000_vf.h	/^struct e1000_adv_tx_context_desc {$/;"	s
e1000_adv_tx_desc	dev/e1000/e1000_82575.h	/^union e1000_adv_tx_desc {$/;"	u
e1000_adv_tx_desc	dev/e1000/e1000_vf.h	/^union e1000_adv_tx_desc {$/;"	u
e1000_base_cx	dev/e1000/e1000_phy.h	/^	u8 e1000_base_cx:1;$/;"	m	struct:sfp_e1000_flags
e1000_base_lx	dev/e1000/e1000_phy.h	/^	u8 e1000_base_lx:1;$/;"	m	struct:sfp_e1000_flags
e1000_base_sx	dev/e1000/e1000_phy.h	/^	u8 e1000_base_sx:1;$/;"	m	struct:sfp_e1000_flags
e1000_base_t	dev/e1000/e1000_phy.h	/^	u8 e1000_base_t:1;$/;"	m	struct:sfp_e1000_flags
e1000_blink_led	dev/e1000/e1000_api.c	/^s32 e1000_blink_led(struct e1000_hw *hw)$/;"	f
e1000_blink_led_generic	dev/e1000/e1000_mac.c	/^s32 e1000_blink_led_generic(struct e1000_hw *hw)$/;"	f
e1000_bus_info	dev/e1000/e1000_hw.h	/^struct e1000_bus_info {$/;"	s
e1000_bus_speed	dev/e1000/e1000_hw.h	/^enum e1000_bus_speed {$/;"	g
e1000_bus_speed_100	dev/e1000/e1000_hw.h	/^	e1000_bus_speed_100,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_120	dev/e1000/e1000_hw.h	/^	e1000_bus_speed_120,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_133	dev/e1000/e1000_hw.h	/^	e1000_bus_speed_133,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_2500	dev/e1000/e1000_hw.h	/^	e1000_bus_speed_2500,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_33	dev/e1000/e1000_hw.h	/^	e1000_bus_speed_33,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_5000	dev/e1000/e1000_hw.h	/^	e1000_bus_speed_5000,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_66	dev/e1000/e1000_hw.h	/^	e1000_bus_speed_66,$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_reserved	dev/e1000/e1000_hw.h	/^	e1000_bus_speed_reserved$/;"	e	enum:e1000_bus_speed
e1000_bus_speed_unknown	dev/e1000/e1000_hw.h	/^	e1000_bus_speed_unknown = 0,$/;"	e	enum:e1000_bus_speed
e1000_bus_type	dev/e1000/e1000_hw.h	/^enum e1000_bus_type {$/;"	g
e1000_bus_type_pci	dev/e1000/e1000_hw.h	/^	e1000_bus_type_pci,$/;"	e	enum:e1000_bus_type
e1000_bus_type_pci_express	dev/e1000/e1000_hw.h	/^	e1000_bus_type_pci_express,$/;"	e	enum:e1000_bus_type
e1000_bus_type_pcix	dev/e1000/e1000_hw.h	/^	e1000_bus_type_pcix,$/;"	e	enum:e1000_bus_type
e1000_bus_type_reserved	dev/e1000/e1000_hw.h	/^	e1000_bus_type_reserved$/;"	e	enum:e1000_bus_type
e1000_bus_type_unknown	dev/e1000/e1000_hw.h	/^	e1000_bus_type_unknown = 0,$/;"	e	enum:e1000_bus_type
e1000_bus_width	dev/e1000/e1000_hw.h	/^enum e1000_bus_width {$/;"	g
e1000_bus_width_32	dev/e1000/e1000_hw.h	/^	e1000_bus_width_32,$/;"	e	enum:e1000_bus_width
e1000_bus_width_64	dev/e1000/e1000_hw.h	/^	e1000_bus_width_64,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x1	dev/e1000/e1000_hw.h	/^	e1000_bus_width_pcie_x1,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x2	dev/e1000/e1000_hw.h	/^	e1000_bus_width_pcie_x2,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x4	dev/e1000/e1000_hw.h	/^	e1000_bus_width_pcie_x4 = 4,$/;"	e	enum:e1000_bus_width
e1000_bus_width_pcie_x8	dev/e1000/e1000_hw.h	/^	e1000_bus_width_pcie_x8 = 8,$/;"	e	enum:e1000_bus_width
e1000_bus_width_reserved	dev/e1000/e1000_hw.h	/^	e1000_bus_width_reserved$/;"	e	enum:e1000_bus_width
e1000_bus_width_unknown	dev/e1000/e1000_hw.h	/^	e1000_bus_width_unknown = 0,$/;"	e	enum:e1000_bus_width
e1000_calc_rx_da_crc	dev/e1000/e1000_ich8lan.c	/^static u32 e1000_calc_rx_da_crc(u8 mac[])$/;"	f	file:
e1000_calculate_checksum	dev/e1000/e1000_manage.c	/^u8 e1000_calculate_checksum(u8 *buffer, u32 length)$/;"	f
e1000_cfg_kmrn_1000_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_cfg_kmrn_1000_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_cfg_kmrn_10_100_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_cfg_kmrn_10_100_80003es2lan(struct e1000_hw *hw, u16 duplex)$/;"	f	file:
e1000_cfg_on_link_up	dev/e1000/e1000_api.c	/^s32 e1000_cfg_on_link_up(struct e1000_hw *hw)$/;"	f
e1000_cfg_on_link_up_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_cfg_on_link_up_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_check_alt_mac_addr_generic	dev/e1000/e1000_mac.c	/^s32 e1000_check_alt_mac_addr_generic(struct e1000_hw *hw)$/;"	f
e1000_check_downshift_generic	dev/e1000/e1000_phy.c	/^s32 e1000_check_downshift_generic(struct e1000_hw *hw)$/;"	f
e1000_check_for_ack	dev/e1000/e1000_mbx.c	/^s32 e1000_check_for_ack(struct e1000_hw *hw, u16 mbx_id)$/;"	f
e1000_check_for_ack_pf	dev/e1000/e1000_mbx.c	/^static s32 e1000_check_for_ack_pf(struct e1000_hw *hw, u16 vf_number)$/;"	f	file:
e1000_check_for_ack_vf	dev/e1000/e1000_mbx.c	/^static s32 e1000_check_for_ack_vf(struct e1000_hw *hw, u16 mbx_id)$/;"	f	file:
e1000_check_for_bit_pf	dev/e1000/e1000_mbx.c	/^static s32 e1000_check_for_bit_pf(struct e1000_hw *hw, u32 mask)$/;"	f	file:
e1000_check_for_bit_vf	dev/e1000/e1000_mbx.c	/^static s32 e1000_check_for_bit_vf(struct e1000_hw *hw, u32 mask)$/;"	f	file:
e1000_check_for_copper_link_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_check_for_copper_link_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_check_for_copper_link_generic	dev/e1000/e1000_mac.c	/^s32 e1000_check_for_copper_link_generic(struct e1000_hw *hw)$/;"	f
e1000_check_for_copper_link_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_check_for_copper_link_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_check_for_fiber_link_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_check_for_fiber_link_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_check_for_fiber_link_generic	dev/e1000/e1000_mac.c	/^s32 e1000_check_for_fiber_link_generic(struct e1000_hw *hw)$/;"	f
e1000_check_for_link	dev/e1000/e1000_api.c	/^s32 e1000_check_for_link(struct e1000_hw *hw)$/;"	f
e1000_check_for_link_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_check_for_link_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_check_for_link_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_check_for_link_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_check_for_link_vf	dev/e1000/e1000_vf.c	/^static s32 e1000_check_for_link_vf(struct e1000_hw *hw)$/;"	f	file:
e1000_check_for_msg	dev/e1000/e1000_mbx.c	/^s32 e1000_check_for_msg(struct e1000_hw *hw, u16 mbx_id)$/;"	f
e1000_check_for_msg_pf	dev/e1000/e1000_mbx.c	/^static s32 e1000_check_for_msg_pf(struct e1000_hw *hw, u16 vf_number)$/;"	f	file:
e1000_check_for_msg_vf	dev/e1000/e1000_mbx.c	/^static s32 e1000_check_for_msg_vf(struct e1000_hw *hw, u16 mbx_id)$/;"	f	file:
e1000_check_for_rst	dev/e1000/e1000_mbx.c	/^s32 e1000_check_for_rst(struct e1000_hw *hw, u16 mbx_id)$/;"	f
e1000_check_for_rst_pf	dev/e1000/e1000_mbx.c	/^static s32 e1000_check_for_rst_pf(struct e1000_hw *hw, u16 vf_number)$/;"	f	file:
e1000_check_for_rst_vf	dev/e1000/e1000_mbx.c	/^static s32 e1000_check_for_rst_vf(struct e1000_hw *hw, u16 mbx_id)$/;"	f	file:
e1000_check_for_serdes_link_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_check_for_serdes_link_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_check_for_serdes_link_generic	dev/e1000/e1000_mac.c	/^s32 e1000_check_for_serdes_link_generic(struct e1000_hw *hw)$/;"	f
e1000_check_mng_mode	dev/e1000/e1000_api.c	/^bool e1000_check_mng_mode(struct e1000_hw *hw)$/;"	f
e1000_check_mng_mode_82574	dev/e1000/e1000_82571.c	/^static bool e1000_check_mng_mode_82574(struct e1000_hw *hw)$/;"	f	file:
e1000_check_mng_mode_generic	dev/e1000/e1000_manage.c	/^bool e1000_check_mng_mode_generic(struct e1000_hw *hw)$/;"	f
e1000_check_mng_mode_ich8lan	dev/e1000/e1000_ich8lan.c	/^static bool e1000_check_mng_mode_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_check_mng_mode_pchlan	dev/e1000/e1000_ich8lan.c	/^static bool e1000_check_mng_mode_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_check_phy_82574	dev/e1000/e1000_82571.c	/^bool e1000_check_phy_82574(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_82577	dev/e1000/e1000_phy.c	/^s32 e1000_check_polarity_82577(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_ife	dev/e1000/e1000_phy.c	/^s32 e1000_check_polarity_ife(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_igp	dev/e1000/e1000_phy.c	/^s32 e1000_check_polarity_igp(struct e1000_hw *hw)$/;"	f
e1000_check_polarity_m88	dev/e1000/e1000_phy.c	/^s32 e1000_check_polarity_m88(struct e1000_hw *hw)$/;"	f
e1000_check_reset_block	dev/e1000/e1000_api.c	/^s32 e1000_check_reset_block(struct e1000_hw *hw)$/;"	f
e1000_check_reset_block_generic	dev/e1000/e1000_phy.c	/^s32 e1000_check_reset_block_generic(struct e1000_hw *hw)$/;"	f
e1000_check_reset_block_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_check_reset_block_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_cleanup_led	dev/e1000/e1000_api.c	/^s32 e1000_cleanup_led(struct e1000_hw *hw)$/;"	f
e1000_cleanup_led_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_cleanup_led_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_cleanup_led_generic	dev/e1000/e1000_mac.c	/^s32 e1000_cleanup_led_generic(struct e1000_hw *hw)$/;"	f
e1000_cleanup_led_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_cleanup_led_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_cleanup_led_pchlan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_cleanup_led_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static void e1000_clear_hw_cntrs_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_82540	dev/e1000/e1000_82540.c	/^static void e1000_clear_hw_cntrs_82540(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_82541	dev/e1000/e1000_82541.c	/^static void e1000_clear_hw_cntrs_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_82542	dev/e1000/e1000_82542.c	/^static void e1000_clear_hw_cntrs_82542(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_82543	dev/e1000/e1000_82543.c	/^static void e1000_clear_hw_cntrs_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_82571	dev/e1000/e1000_82571.c	/^static void e1000_clear_hw_cntrs_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_82575	dev/e1000/e1000_82575.c	/^static void e1000_clear_hw_cntrs_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_hw_cntrs_base_generic	dev/e1000/e1000_mac.c	/^void e1000_clear_hw_cntrs_base_generic(struct e1000_hw *hw)$/;"	f
e1000_clear_hw_cntrs_ich8lan	dev/e1000/e1000_ich8lan.c	/^static void e1000_clear_hw_cntrs_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_vfta	dev/e1000/e1000_api.c	/^void e1000_clear_vfta(struct e1000_hw *hw)$/;"	f
e1000_clear_vfta_82571	dev/e1000/e1000_82571.c	/^static void e1000_clear_vfta_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_clear_vfta_generic	dev/e1000/e1000_mac.c	/^void e1000_clear_vfta_generic(struct e1000_hw *hw)$/;"	f
e1000_clear_vfta_i350	dev/e1000/e1000_82575.c	/^void e1000_clear_vfta_i350(struct e1000_hw *hw)$/;"	f
e1000_clock_in_i2c_bit	dev/e1000/e1000_82575.c	/^static s32 e1000_clock_in_i2c_bit(struct e1000_hw *hw, bool *data)$/;"	f	file:
e1000_clock_in_i2c_byte	dev/e1000/e1000_82575.c	/^static s32 e1000_clock_in_i2c_byte(struct e1000_hw *hw, u8 *data)$/;"	f	file:
e1000_clock_out_i2c_bit	dev/e1000/e1000_82575.c	/^static s32 e1000_clock_out_i2c_bit(struct e1000_hw *hw, bool data)$/;"	f	file:
e1000_clock_out_i2c_byte	dev/e1000/e1000_82575.c	/^static s32 e1000_clock_out_i2c_byte(struct e1000_hw *hw, u8 data)$/;"	f	file:
e1000_commit_fc_settings_generic	dev/e1000/e1000_mac.c	/^s32 e1000_commit_fc_settings_generic(struct e1000_hw *hw)$/;"	f
e1000_config_collision_dist	dev/e1000/e1000_api.c	/^void e1000_config_collision_dist(struct e1000_hw *hw)$/;"	f
e1000_config_collision_dist_82575	dev/e1000/e1000_82575.c	/^static void e1000_config_collision_dist_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_config_collision_dist_generic	dev/e1000/e1000_mac.c	/^static void e1000_config_collision_dist_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_config_dsp_after_link_change_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_config_dsp_after_link_change_82541(struct e1000_hw *hw,$/;"	f	file:
e1000_config_fc_after_link_up_generic	dev/e1000/e1000_mac.c	/^s32 e1000_config_fc_after_link_up_generic(struct e1000_hw *hw)$/;"	f
e1000_config_mac_to_phy_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_config_mac_to_phy_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_configure_k1_ich8lan	dev/e1000/e1000_ich8lan.c	/^s32 e1000_configure_k1_ich8lan(struct e1000_hw *hw, bool k1_enable)$/;"	f
e1000_context_desc	dev/e1000/e1000_hw.h	/^struct e1000_context_desc {$/;"	s
e1000_copper_link_autoneg	dev/e1000/e1000_phy.c	/^s32 e1000_copper_link_autoneg(struct e1000_hw *hw)$/;"	f
e1000_copper_link_setup_82577	dev/e1000/e1000_phy.c	/^s32 e1000_copper_link_setup_82577(struct e1000_hw *hw)$/;"	f
e1000_copper_link_setup_gg82563_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_copper_link_setup_gg82563_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_copper_link_setup_igp	dev/e1000/e1000_phy.c	/^s32 e1000_copper_link_setup_igp(struct e1000_hw *hw)$/;"	f
e1000_copper_link_setup_m88	dev/e1000/e1000_phy.c	/^s32 e1000_copper_link_setup_m88(struct e1000_hw *hw)$/;"	f
e1000_copper_link_setup_m88_gen2	dev/e1000/e1000_phy.c	/^s32 e1000_copper_link_setup_m88_gen2(struct e1000_hw *hw)$/;"	f
e1000_copy_rx_addrs_to_phy_ich8lan	dev/e1000/e1000_ich8lan.c	/^void e1000_copy_rx_addrs_to_phy_ich8lan(struct e1000_hw *hw)$/;"	f
e1000_data_desc	dev/e1000/e1000_hw.h	/^struct e1000_data_desc {$/;"	s
e1000_determine_phy_address	dev/e1000/e1000_phy.c	/^s32 e1000_determine_phy_address(struct e1000_hw *hw)$/;"	f
e1000_dev_spec_80003es2lan	dev/e1000/e1000_hw.h	/^struct e1000_dev_spec_80003es2lan {$/;"	s
e1000_dev_spec_82541	dev/e1000/e1000_hw.h	/^struct e1000_dev_spec_82541 {$/;"	s
e1000_dev_spec_82542	dev/e1000/e1000_hw.h	/^struct e1000_dev_spec_82542 {$/;"	s
e1000_dev_spec_82543	dev/e1000/e1000_hw.h	/^struct e1000_dev_spec_82543 {$/;"	s
e1000_dev_spec_82571	dev/e1000/e1000_hw.h	/^struct e1000_dev_spec_82571 {$/;"	s
e1000_dev_spec_82575	dev/e1000/e1000_hw.h	/^struct e1000_dev_spec_82575 {$/;"	s
e1000_dev_spec_ich8lan	dev/e1000/e1000_hw.h	/^struct e1000_dev_spec_ich8lan {$/;"	s
e1000_dev_spec_vf	dev/e1000/e1000_hw.h	/^struct e1000_dev_spec_vf {$/;"	s
e1000_dev_spec_vf	dev/e1000/e1000_vf.h	/^struct e1000_dev_spec_vf {$/;"	s
e1000_disable_pcie_master	dev/e1000/e1000_api.c	/^s32 e1000_disable_pcie_master(struct e1000_hw *hw)$/;"	f
e1000_disable_pcie_master_generic	dev/e1000/e1000_mac.c	/^s32 e1000_disable_pcie_master_generic(struct e1000_hw *hw)$/;"	f
e1000_disable_phy_wakeup_reg_access_bm	dev/e1000/e1000_phy.c	/^s32 e1000_disable_phy_wakeup_reg_access_bm(struct e1000_hw *hw, u16 *phy_reg)$/;"	f
e1000_dsp_config	dev/e1000/e1000_hw.h	/^enum e1000_dsp_config {$/;"	g
e1000_dsp_config_activated	dev/e1000/e1000_hw.h	/^	e1000_dsp_config_activated,$/;"	e	enum:e1000_dsp_config
e1000_dsp_config_disabled	dev/e1000/e1000_hw.h	/^	e1000_dsp_config_disabled = 0,$/;"	e	enum:e1000_dsp_config
e1000_dsp_config_enabled	dev/e1000/e1000_hw.h	/^	e1000_dsp_config_enabled,$/;"	e	enum:e1000_dsp_config
e1000_dsp_config_undefined	dev/e1000/e1000_hw.h	/^	e1000_dsp_config_undefined = 0xFF$/;"	e	enum:e1000_dsp_config
e1000_enable_mng_pass_thru	dev/e1000/e1000_manage.c	/^bool e1000_enable_mng_pass_thru(struct e1000_hw *hw)$/;"	f
e1000_enable_phy_wakeup_reg_access_bm	dev/e1000/e1000_phy.c	/^s32 e1000_enable_phy_wakeup_reg_access_bm(struct e1000_hw *hw, u16 *phy_reg)$/;"	f
e1000_enable_tx_pkt_filtering	dev/e1000/e1000_api.c	/^bool e1000_enable_tx_pkt_filtering(struct e1000_hw *hw)$/;"	f
e1000_enable_tx_pkt_filtering_generic	dev/e1000/e1000_manage.c	/^bool e1000_enable_tx_pkt_filtering_generic(struct e1000_hw *hw)$/;"	f
e1000_erase_flash_bank_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_erase_flash_bank_ich8lan(struct e1000_hw *hw, u32 bank)$/;"	f	file:
e1000_fc_default	dev/e1000/e1000_hw.h	/^	e1000_fc_default = 0xFF$/;"	e	enum:e1000_fc_mode
e1000_fc_full	dev/e1000/e1000_hw.h	/^	e1000_fc_full,$/;"	e	enum:e1000_fc_mode
e1000_fc_info	dev/e1000/e1000_hw.h	/^struct e1000_fc_info {$/;"	s
e1000_fc_mode	dev/e1000/e1000_hw.h	/^enum e1000_fc_mode {$/;"	g
e1000_fc_none	dev/e1000/e1000_hw.h	/^	e1000_fc_none = 0,$/;"	e	enum:e1000_fc_mode
e1000_fc_rx_pause	dev/e1000/e1000_hw.h	/^	e1000_fc_rx_pause,$/;"	e	enum:e1000_fc_mode
e1000_fc_tx_pause	dev/e1000/e1000_hw.h	/^	e1000_fc_tx_pause,$/;"	e	enum:e1000_fc_mode
e1000_ffe_config	dev/e1000/e1000_hw.h	/^enum e1000_ffe_config {$/;"	g
e1000_ffe_config_active	dev/e1000/e1000_hw.h	/^	e1000_ffe_config_active,$/;"	e	enum:e1000_ffe_config
e1000_ffe_config_blocked	dev/e1000/e1000_hw.h	/^	e1000_ffe_config_blocked$/;"	e	enum:e1000_ffe_config
e1000_ffe_config_enabled	dev/e1000/e1000_hw.h	/^	e1000_ffe_config_enabled = 0,$/;"	e	enum:e1000_ffe_config
e1000_fix_nvm_checksum_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_fix_nvm_checksum_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_flash_cycle_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_flash_cycle_ich8lan(struct e1000_hw *hw, u32 timeout)$/;"	f	file:
e1000_flash_cycle_init_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_flash_cycle_init_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_force_mac_fc	dev/e1000/e1000_api.c	/^s32 e1000_force_mac_fc(struct e1000_hw *hw)$/;"	f
e1000_force_mac_fc_generic	dev/e1000/e1000_mac.c	/^s32 e1000_force_mac_fc_generic(struct e1000_hw *hw)$/;"	f
e1000_gate_hw_phy_config_ich8lan	dev/e1000/e1000_ich8lan.c	/^static void e1000_gate_hw_phy_config_ich8lan(struct e1000_hw *hw, bool gate)$/;"	f	file:
e1000_get_auto_rd_done_generic	dev/e1000/e1000_mac.c	/^s32 e1000_get_auto_rd_done_generic(struct e1000_hw *hw)$/;"	f
e1000_get_bus_info	dev/e1000/e1000_api.c	/^s32 e1000_get_bus_info(struct e1000_hw *hw)$/;"	f
e1000_get_bus_info_82542	dev/e1000/e1000_82542.c	/^static s32 e1000_get_bus_info_82542(struct e1000_hw *hw)$/;"	f	file:
e1000_get_bus_info_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_get_bus_info_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_get_bus_info_pci_generic	dev/e1000/e1000_mac.c	/^s32 e1000_get_bus_info_pci_generic(struct e1000_hw *hw)$/;"	f
e1000_get_bus_info_pcie_generic	dev/e1000/e1000_mac.c	/^s32 e1000_get_bus_info_pcie_generic(struct e1000_hw *hw)$/;"	f
e1000_get_bus_info_pcie_vf	dev/e1000/e1000_vf.c	/^static s32 e1000_get_bus_info_pcie_vf(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cable_length	dev/e1000/e1000_api.c	/^s32 e1000_get_cable_length(struct e1000_hw *hw)$/;"	f
e1000_get_cable_length_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_get_cable_length_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cable_length_82577	dev/e1000/e1000_phy.c	/^s32 e1000_get_cable_length_82577(struct e1000_hw *hw)$/;"	f
e1000_get_cable_length_igp_2	dev/e1000/e1000_phy.c	/^s32 e1000_get_cable_length_igp_2(struct e1000_hw *hw)$/;"	f
e1000_get_cable_length_igp_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_get_cable_length_igp_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cable_length_m88	dev/e1000/e1000_phy.c	/^s32 e1000_get_cable_length_m88(struct e1000_hw *hw)$/;"	f
e1000_get_cable_length_m88_gen2	dev/e1000/e1000_phy.c	/^s32 e1000_get_cable_length_m88_gen2(struct e1000_hw *hw)$/;"	f
e1000_get_cfg_done_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_get_cfg_done_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cfg_done_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_get_cfg_done_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cfg_done_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_get_cfg_done_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_get_cfg_done_generic	dev/e1000/e1000_phy.c	/^s32 e1000_get_cfg_done_generic(struct e1000_hw *hw)$/;"	f
e1000_get_cfg_done_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_get_cfg_done_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_get_hw_semaphore_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_get_hw_semaphore_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_get_hw_semaphore_82573	dev/e1000/e1000_82571.c	/^static s32 e1000_get_hw_semaphore_82573(struct e1000_hw *hw)$/;"	f	file:
e1000_get_hw_semaphore_82574	dev/e1000/e1000_82571.c	/^static s32 e1000_get_hw_semaphore_82574(struct e1000_hw *hw)$/;"	f	file:
e1000_get_hw_semaphore_generic	dev/e1000/e1000_mac.c	/^s32 e1000_get_hw_semaphore_generic(struct e1000_hw *hw)$/;"	f
e1000_get_hw_semaphore_i210	dev/e1000/e1000_i210.c	/^static s32 e1000_get_hw_semaphore_i210(struct e1000_hw *hw)$/;"	f	file:
e1000_get_i2c_ack	dev/e1000/e1000_82575.c	/^static s32 e1000_get_i2c_ack(struct e1000_hw *hw)$/;"	f	file:
e1000_get_i2c_data	dev/e1000/e1000_82575.c	/^static bool e1000_get_i2c_data(u32 *i2cctl)$/;"	f	file:
e1000_get_laa_state_82571	dev/e1000/e1000_82571.c	/^bool e1000_get_laa_state_82571(struct e1000_hw *hw)$/;"	f
e1000_get_link_up_info_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_get_link_up_info_80003es2lan(struct e1000_hw *hw, u16 *speed,$/;"	f	file:
e1000_get_link_up_info_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_get_link_up_info_82541(struct e1000_hw *hw, u16 *speed,$/;"	f	file:
e1000_get_link_up_info_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_get_link_up_info_82575(struct e1000_hw *hw, u16 *speed,$/;"	f	file:
e1000_get_link_up_info_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_get_link_up_info_ich8lan(struct e1000_hw *hw, u16 *speed,$/;"	f	file:
e1000_get_link_up_info_vf	dev/e1000/e1000_vf.c	/^static s32 e1000_get_link_up_info_vf(struct e1000_hw *hw, u16 *speed,$/;"	f	file:
e1000_get_media_type_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_get_media_type_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_get_pba_block_size	dev/e1000/e1000_nvm.c	/^s32 e1000_get_pba_block_size(struct e1000_hw *hw, u16 *eeprom_buf,$/;"	f
e1000_get_pcs_speed_and_duplex_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_get_pcs_speed_and_duplex_82575(struct e1000_hw *hw,$/;"	f	file:
e1000_get_phy_addr_for_bm_page	dev/e1000/e1000_phy.c	/^static u32 e1000_get_phy_addr_for_bm_page(u32 page, u32 reg)$/;"	f	file:
e1000_get_phy_addr_for_hv_page	dev/e1000/e1000_phy.c	/^static u32 e1000_get_phy_addr_for_hv_page(u32 page)$/;"	f	file:
e1000_get_phy_id	dev/e1000/e1000_phy.c	/^s32 e1000_get_phy_id(struct e1000_hw *hw)$/;"	f
e1000_get_phy_id_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_get_phy_id_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_get_phy_id_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_get_phy_id_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_get_phy_info	dev/e1000/e1000_api.c	/^s32 e1000_get_phy_info(struct e1000_hw *hw)$/;"	f
e1000_get_phy_info_82577	dev/e1000/e1000_phy.c	/^s32 e1000_get_phy_info_82577(struct e1000_hw *hw)$/;"	f
e1000_get_phy_info_ife	dev/e1000/e1000_phy.c	/^s32 e1000_get_phy_info_ife(struct e1000_hw *hw)$/;"	f
e1000_get_phy_info_igp	dev/e1000/e1000_phy.c	/^s32 e1000_get_phy_info_igp(struct e1000_hw *hw)$/;"	f
e1000_get_phy_info_m88	dev/e1000/e1000_phy.c	/^s32 e1000_get_phy_info_m88(struct e1000_hw *hw)$/;"	f
e1000_get_phy_type_from_id	dev/e1000/e1000_phy.c	/^enum e1000_phy_type e1000_get_phy_type_from_id(u32 phy_id)$/;"	f
e1000_get_speed_and_duplex	dev/e1000/e1000_api.c	/^s32 e1000_get_speed_and_duplex(struct e1000_hw *hw, u16 *speed, u16 *duplex)$/;"	f
e1000_get_speed_and_duplex_copper_generic	dev/e1000/e1000_mac.c	/^s32 e1000_get_speed_and_duplex_copper_generic(struct e1000_hw *hw, u16 *speed,$/;"	f
e1000_get_speed_and_duplex_fiber_serdes_generic	dev/e1000/e1000_mac.c	/^s32 e1000_get_speed_and_duplex_fiber_serdes_generic(struct e1000_hw *hw,$/;"	f
e1000_gg82563_cable_length_table	dev/e1000/e1000_80003es2lan.c	/^static const u16 e1000_gg82563_cable_length_table[] = {$/;"	v	file:
e1000_gig_downshift_workaround_ich8lan	dev/e1000/e1000_ich8lan.c	/^void e1000_gig_downshift_workaround_ich8lan(struct e1000_hw *hw)$/;"	f
e1000_hash_mc_addr	dev/e1000/e1000_api.c	/^u32 e1000_hash_mc_addr(struct e1000_hw *hw, u8 *mc_addr)$/;"	f
e1000_hash_mc_addr_generic	dev/e1000/e1000_mac.c	/^u32 e1000_hash_mc_addr_generic(struct e1000_hw *hw, u8 *mc_addr)$/;"	f
e1000_hash_mc_addr_vf	dev/e1000/e1000_vf.c	/^static u32 e1000_hash_mc_addr_vf(struct e1000_hw *hw, u8 *mc_addr)$/;"	f	file:
e1000_host_command_header	dev/e1000/e1000_hw.h	/^struct e1000_host_command_header {$/;"	s
e1000_host_command_info	dev/e1000/e1000_hw.h	/^struct e1000_host_command_info {$/;"	s
e1000_host_interface_command	dev/e1000/e1000_manage.c	/^s32 e1000_host_interface_command(struct e1000_hw *hw, u8 *buffer, u32 length)$/;"	f
e1000_host_mng_command_header	dev/e1000/e1000_hw.h	/^struct e1000_host_mng_command_header {$/;"	s
e1000_host_mng_command_info	dev/e1000/e1000_hw.h	/^struct e1000_host_mng_command_info {$/;"	s
e1000_host_mng_dhcp_cookie	dev/e1000/e1000_hw.h	/^struct e1000_host_mng_dhcp_cookie {$/;"	s
e1000_hv_phy_workarounds_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_hv_phy_workarounds_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_hw	dev/e1000/e1000_hw.h	/^struct e1000_hw {$/;"	s
e1000_hw	dev/e1000/e1000_vf.h	/^struct e1000_hw {$/;"	s
e1000_hw_stats	dev/e1000/e1000_hw.h	/^struct e1000_hw_stats {$/;"	s
e1000_i210	dev/e1000/e1000_hw.h	/^	e1000_i210,$/;"	e	enum:e1000_mac_type
e1000_i211	dev/e1000/e1000_hw.h	/^	e1000_i211,$/;"	e	enum:e1000_mac_type
e1000_i2c_bus_clear	dev/e1000/e1000_82575.c	/^void e1000_i2c_bus_clear(struct e1000_hw *hw)$/;"	f
e1000_i2c_start	dev/e1000/e1000_82575.c	/^static void e1000_i2c_start(struct e1000_hw *hw)$/;"	f	file:
e1000_i2c_stop	dev/e1000/e1000_82575.c	/^static void e1000_i2c_stop(struct e1000_hw *hw)$/;"	f	file:
e1000_i350	dev/e1000/e1000_hw.h	/^	e1000_i350,$/;"	e	enum:e1000_mac_type
e1000_ich10lan	dev/e1000/e1000_hw.h	/^	e1000_ich10lan,$/;"	e	enum:e1000_mac_type
e1000_ich8lan	dev/e1000/e1000_hw.h	/^	e1000_ich8lan,$/;"	e	enum:e1000_mac_type
e1000_ich9lan	dev/e1000/e1000_hw.h	/^	e1000_ich9lan,$/;"	e	enum:e1000_mac_type
e1000_id_led_init	dev/e1000/e1000_api.c	/^s32 e1000_id_led_init(struct e1000_hw *hw)$/;"	f
e1000_id_led_init_generic	dev/e1000/e1000_mac.c	/^s32 e1000_id_led_init_generic(struct e1000_hw *hw)$/;"	f
e1000_id_led_init_pchlan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_id_led_init_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_igp3_phy_powerdown_workaround_ich8lan	dev/e1000/e1000_ich8lan.c	/^void e1000_igp3_phy_powerdown_workaround_ich8lan(struct e1000_hw *hw)$/;"	f
e1000_igp_2_cable_length_table	dev/e1000/e1000_phy.c	/^static const u16 e1000_igp_2_cable_length_table[] = {$/;"	v	file:
e1000_igp_cable_length_table	dev/e1000/e1000_82541.c	/^static const u16 e1000_igp_cable_length_table[] =$/;"	v	file:
e1000_init_function_pointers_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^void e1000_init_function_pointers_80003es2lan(struct e1000_hw *hw)$/;"	f
e1000_init_function_pointers_82540	dev/e1000/e1000_82540.c	/^void e1000_init_function_pointers_82540(struct e1000_hw *hw)$/;"	f
e1000_init_function_pointers_82541	dev/e1000/e1000_82541.c	/^void e1000_init_function_pointers_82541(struct e1000_hw *hw)$/;"	f
e1000_init_function_pointers_82542	dev/e1000/e1000_82542.c	/^void e1000_init_function_pointers_82542(struct e1000_hw *hw)$/;"	f
e1000_init_function_pointers_82543	dev/e1000/e1000_82543.c	/^void e1000_init_function_pointers_82543(struct e1000_hw *hw)$/;"	f
e1000_init_function_pointers_82571	dev/e1000/e1000_82571.c	/^void e1000_init_function_pointers_82571(struct e1000_hw *hw)$/;"	f
e1000_init_function_pointers_82575	dev/e1000/e1000_82575.c	/^void e1000_init_function_pointers_82575(struct e1000_hw *hw)$/;"	f
e1000_init_function_pointers_i210	dev/e1000/e1000_i210.c	/^void e1000_init_function_pointers_i210(struct e1000_hw *hw)$/;"	f
e1000_init_function_pointers_ich8lan	dev/e1000/e1000_ich8lan.c	/^void e1000_init_function_pointers_ich8lan(struct e1000_hw *hw)$/;"	f
e1000_init_function_pointers_vf	dev/e1000/e1000_vf.c	/^void e1000_init_function_pointers_vf(struct e1000_hw *hw)$/;"	f
e1000_init_hw	dev/e1000/e1000_api.c	/^s32 e1000_init_hw(struct e1000_hw *hw)$/;"	f
e1000_init_hw_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_init_hw_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_hw_82540	dev/e1000/e1000_82540.c	/^static s32 e1000_init_hw_82540(struct e1000_hw *hw)$/;"	f	file:
e1000_init_hw_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_init_hw_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_init_hw_82542	dev/e1000/e1000_82542.c	/^static s32 e1000_init_hw_82542(struct e1000_hw *hw)$/;"	f	file:
e1000_init_hw_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_init_hw_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_init_hw_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_init_hw_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_init_hw_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_init_hw_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_init_hw_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_init_hw_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_hw_vf	dev/e1000/e1000_vf.c	/^static s32 e1000_init_hw_vf(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_ops_generic	dev/e1000/e1000_mac.c	/^void e1000_init_mac_ops_generic(struct e1000_hw *hw)$/;"	f
e1000_init_mac_params	dev/e1000/e1000_api.c	/^s32 e1000_init_mac_params(struct e1000_hw *hw)$/;"	f
e1000_init_mac_params_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_init_mac_params_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_82540	dev/e1000/e1000_82540.c	/^static s32 e1000_init_mac_params_82540(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_init_mac_params_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_82542	dev/e1000/e1000_82542.c	/^static s32 e1000_init_mac_params_82542(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_init_mac_params_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_init_mac_params_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_init_mac_params_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_init_mac_params_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mac_params_vf	dev/e1000/e1000_vf.c	/^static s32 e1000_init_mac_params_vf(struct e1000_hw *hw)$/;"	f	file:
e1000_init_mbx_ops_generic	dev/e1000/e1000_mbx.c	/^void e1000_init_mbx_ops_generic(struct e1000_hw *hw)$/;"	f
e1000_init_mbx_params	dev/e1000/e1000_api.c	/^s32 e1000_init_mbx_params(struct e1000_hw *hw)$/;"	f
e1000_init_mbx_params_pf	dev/e1000/e1000_mbx.c	/^s32 e1000_init_mbx_params_pf(struct e1000_hw *hw)$/;"	f
e1000_init_mbx_params_vf	dev/e1000/e1000_mbx.c	/^s32 e1000_init_mbx_params_vf(struct e1000_hw *hw)$/;"	f
e1000_init_nvm_ops_generic	dev/e1000/e1000_nvm.c	/^void e1000_init_nvm_ops_generic(struct e1000_hw *hw)$/;"	f
e1000_init_nvm_params	dev/e1000/e1000_api.c	/^s32 e1000_init_nvm_params(struct e1000_hw *hw)$/;"	f
e1000_init_nvm_params_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_init_nvm_params_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_nvm_params_82540	dev/e1000/e1000_82540.c	/^static s32 e1000_init_nvm_params_82540(struct e1000_hw *hw)$/;"	f	file:
e1000_init_nvm_params_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_init_nvm_params_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_init_nvm_params_82542	dev/e1000/e1000_82542.c	/^static s32 e1000_init_nvm_params_82542(struct e1000_hw *hw)$/;"	f	file:
e1000_init_nvm_params_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_init_nvm_params_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_init_nvm_params_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_init_nvm_params_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_init_nvm_params_82575	dev/e1000/e1000_82575.c	/^s32 e1000_init_nvm_params_82575(struct e1000_hw *hw)$/;"	f
e1000_init_nvm_params_i210	dev/e1000/e1000_i210.c	/^static s32 e1000_init_nvm_params_i210(struct e1000_hw *hw)$/;"	f	file:
e1000_init_nvm_params_i211	dev/e1000/e1000_i210.c	/^static s32 e1000_init_nvm_params_i211(struct e1000_hw *hw)$/;"	f	file:
e1000_init_nvm_params_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_init_nvm_params_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_nvm_params_vf	dev/e1000/e1000_vf.c	/^static s32 e1000_init_nvm_params_vf(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_disabled_82543	dev/e1000/e1000_82543.c	/^static bool e1000_init_phy_disabled_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_ops_generic	dev/e1000/e1000_phy.c	/^void e1000_init_phy_ops_generic(struct e1000_hw *hw)$/;"	f
e1000_init_phy_params	dev/e1000/e1000_api.c	/^s32 e1000_init_phy_params(struct e1000_hw *hw)$/;"	f
e1000_init_phy_params_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_init_phy_params_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_82540	dev/e1000/e1000_82540.c	/^static s32 e1000_init_phy_params_82540(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_init_phy_params_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_82542	dev/e1000/e1000_82542.c	/^static s32 e1000_init_phy_params_82542(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_init_phy_params_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_init_phy_params_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_init_phy_params_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_init_phy_params_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_pchlan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_init_phy_params_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_params_vf	dev/e1000/e1000_vf.c	/^static s32 e1000_init_phy_params_vf(struct e1000_hw *hw)$/;"	f	file:
e1000_init_phy_workarounds_pchlan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_init_phy_workarounds_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_init_rx_addrs_generic	dev/e1000/e1000_mac.c	/^void e1000_init_rx_addrs_generic(struct e1000_hw *hw, u16 rar_count)$/;"	f
e1000_init_script_state_82541	dev/e1000/e1000_82541.c	/^void e1000_init_script_state_82541(struct e1000_hw *hw, bool state)$/;"	f
e1000_initialize_hw_bits_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static void e1000_initialize_hw_bits_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_initialize_hw_bits_82571	dev/e1000/e1000_82571.c	/^static void e1000_initialize_hw_bits_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_initialize_hw_bits_ich8lan	dev/e1000/e1000_ich8lan.c	/^static void e1000_initialize_hw_bits_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_k1_gig_workaround_hv	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_k1_gig_workaround_hv(struct e1000_hw *hw, bool link)$/;"	f	file:
e1000_k1_workaround_lpt_lp	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_k1_workaround_lpt_lp(struct e1000_hw *hw, bool link)$/;"	f	file:
e1000_k1_workaround_lv	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_k1_workaround_lv(struct e1000_hw *hw)$/;"	f	file:
e1000_kmrn_lock_loss_workaround_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_kmrn_lock_loss_workaround_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_lan_init_done_ich8lan	dev/e1000/e1000_ich8lan.c	/^static void e1000_lan_init_done_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_led_off	dev/e1000/e1000_api.c	/^s32 e1000_led_off(struct e1000_hw *hw)$/;"	f
e1000_led_off_82542	dev/e1000/e1000_82542.c	/^static s32 e1000_led_off_82542(struct e1000_hw *hw)$/;"	f	file:
e1000_led_off_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_led_off_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_led_off_generic	dev/e1000/e1000_mac.c	/^s32 e1000_led_off_generic(struct e1000_hw *hw)$/;"	f
e1000_led_off_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_led_off_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_led_off_pchlan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_led_off_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_led_on	dev/e1000/e1000_api.c	/^s32 e1000_led_on(struct e1000_hw *hw)$/;"	f
e1000_led_on_82542	dev/e1000/e1000_82542.c	/^static s32 e1000_led_on_82542(struct e1000_hw *hw)$/;"	f	file:
e1000_led_on_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_led_on_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_led_on_82574	dev/e1000/e1000_82571.c	/^static s32 e1000_led_on_82574(struct e1000_hw *hw)$/;"	f	file:
e1000_led_on_generic	dev/e1000/e1000_mac.c	/^s32 e1000_led_on_generic(struct e1000_hw *hw)$/;"	f
e1000_led_on_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_led_on_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_led_on_pchlan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_led_on_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_link_stall_workaround_hv	dev/e1000/e1000_phy.c	/^s32 e1000_link_stall_workaround_hv(struct e1000_hw *hw)$/;"	f
e1000_load_firmware	dev/e1000/e1000_manage.c	/^s32 e1000_load_firmware(struct e1000_hw *hw, u8 *buffer, u32 length)$/;"	f
e1000_lower_eec_clk	dev/e1000/e1000_nvm.c	/^static void e1000_lower_eec_clk(struct e1000_hw *hw, u32 *eecd)$/;"	f	file:
e1000_lower_i2c_clk	dev/e1000/e1000_82575.c	/^static void e1000_lower_i2c_clk(struct e1000_hw *hw, u32 *i2cctl)$/;"	f	file:
e1000_lower_mdi_clk_82543	dev/e1000/e1000_82543.c	/^static void e1000_lower_mdi_clk_82543(struct e1000_hw *hw, u32 *ctrl)$/;"	f	file:
e1000_ltr2ns	dev/e1000/e1000_ich8lan.c	/^static u64 e1000_ltr2ns(u16 ltr)$/;"	f	file:
e1000_lv_jumbo_workaround_ich8lan	dev/e1000/e1000_ich8lan.c	/^s32 e1000_lv_jumbo_workaround_ich8lan(struct e1000_hw *hw, bool enable)$/;"	f
e1000_lv_phy_workarounds_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_lv_phy_workarounds_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_m88_cable_length_table	dev/e1000/e1000_phy.c	/^static const u16 e1000_m88_cable_length_table[] = {$/;"	v	file:
e1000_mac_info	dev/e1000/e1000_hw.h	/^struct e1000_mac_info {$/;"	s
e1000_mac_info	dev/e1000/e1000_vf.h	/^struct e1000_mac_info {$/;"	s
e1000_mac_operations	dev/e1000/e1000_hw.h	/^struct e1000_mac_operations {$/;"	s
e1000_mac_operations	dev/e1000/e1000_vf.h	/^struct e1000_mac_operations {$/;"	s
e1000_mac_type	dev/e1000/e1000_hw.h	/^enum e1000_mac_type {$/;"	g
e1000_mac_type	dev/e1000/e1000_vf.h	/^enum e1000_mac_type {$/;"	g
e1000_mbx_info	dev/e1000/e1000_hw.h	/^struct e1000_mbx_info {$/;"	s
e1000_mbx_info	dev/e1000/e1000_vf.h	/^struct e1000_mbx_info {$/;"	s
e1000_mbx_operations	dev/e1000/e1000_hw.h	/^struct e1000_mbx_operations {$/;"	s
e1000_mbx_operations	dev/e1000/e1000_vf.h	/^struct e1000_mbx_operations {$/;"	s
e1000_mbx_stats	dev/e1000/e1000_hw.h	/^struct e1000_mbx_stats {$/;"	s
e1000_mbx_stats	dev/e1000/e1000_vf.h	/^struct e1000_mbx_stats {$/;"	s
e1000_media_type	dev/e1000/e1000_hw.h	/^enum e1000_media_type {$/;"	g
e1000_media_type_copper	dev/e1000/e1000_hw.h	/^	e1000_media_type_copper = 1,$/;"	e	enum:e1000_media_type
e1000_media_type_fiber	dev/e1000/e1000_hw.h	/^	e1000_media_type_fiber = 2,$/;"	e	enum:e1000_media_type
e1000_media_type_internal_serdes	dev/e1000/e1000_hw.h	/^	e1000_media_type_internal_serdes = 3,$/;"	e	enum:e1000_media_type
e1000_media_type_unknown	dev/e1000/e1000_hw.h	/^	e1000_media_type_unknown = 0,$/;"	e	enum:e1000_media_type
e1000_mng_enable_host_if	dev/e1000/e1000_api.c	/^s32 e1000_mng_enable_host_if(struct e1000_hw *hw)$/;"	f
e1000_mng_enable_host_if_generic	dev/e1000/e1000_manage.c	/^s32 e1000_mng_enable_host_if_generic(struct e1000_hw *hw)$/;"	f
e1000_mng_host_if_write	dev/e1000/e1000_api.c	/^s32 e1000_mng_host_if_write(struct e1000_hw *hw, u8 *buffer, u16 length,$/;"	f
e1000_mng_host_if_write_generic	dev/e1000/e1000_manage.c	/^s32 e1000_mng_host_if_write_generic(struct e1000_hw *hw, u8 *buffer,$/;"	f
e1000_mng_mode	dev/e1000/e1000_manage.h	/^enum e1000_mng_mode {$/;"	g
e1000_mng_mode_asf	dev/e1000/e1000_manage.h	/^	e1000_mng_mode_asf,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_host_if_only	dev/e1000/e1000_manage.h	/^	e1000_mng_mode_host_if_only$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_ipmi	dev/e1000/e1000_manage.h	/^	e1000_mng_mode_ipmi,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_none	dev/e1000/e1000_manage.h	/^	e1000_mng_mode_none = 0,$/;"	e	enum:e1000_mng_mode
e1000_mng_mode_pt	dev/e1000/e1000_manage.h	/^	e1000_mng_mode_pt,$/;"	e	enum:e1000_mng_mode
e1000_mng_write_cmd_header	dev/e1000/e1000_api.c	/^s32 e1000_mng_write_cmd_header(struct e1000_hw *hw,$/;"	f
e1000_mng_write_cmd_header_generic	dev/e1000/e1000_manage.c	/^s32 e1000_mng_write_cmd_header_generic(struct e1000_hw *hw,$/;"	f
e1000_mng_write_dhcp_info	dev/e1000/e1000_api.c	/^s32 e1000_mng_write_dhcp_info(struct e1000_hw *hw, u8 *buffer, u16 length)$/;"	f
e1000_mng_write_dhcp_info_generic	dev/e1000/e1000_manage.c	/^s32 e1000_mng_write_dhcp_info_generic(struct e1000_hw *hw, u8 *buffer,$/;"	f
e1000_ms_auto	dev/e1000/e1000_hw.h	/^	e1000_ms_auto$/;"	e	enum:e1000_ms_type
e1000_ms_force_master	dev/e1000/e1000_hw.h	/^	e1000_ms_force_master,$/;"	e	enum:e1000_ms_type
e1000_ms_force_slave	dev/e1000/e1000_hw.h	/^	e1000_ms_force_slave,$/;"	e	enum:e1000_ms_type
e1000_ms_hw_default	dev/e1000/e1000_hw.h	/^	e1000_ms_hw_default = 0,$/;"	e	enum:e1000_ms_type
e1000_ms_type	dev/e1000/e1000_hw.h	/^enum e1000_ms_type {$/;"	g
e1000_null_led_default	dev/e1000/e1000_nvm.c	/^s32 e1000_null_led_default(struct e1000_hw *hw, u16 *data)$/;"	f
e1000_null_link_info	dev/e1000/e1000_mac.c	/^s32 e1000_null_link_info(struct e1000_hw *hw, u16 *s, u16 *d)$/;"	f
e1000_null_lplu_state	dev/e1000/e1000_phy.c	/^s32 e1000_null_lplu_state(struct e1000_hw *hw, bool active)$/;"	f
e1000_null_mac_generic	dev/e1000/e1000_mac.c	/^void e1000_null_mac_generic(struct e1000_hw *hw)$/;"	f
e1000_null_mbx_check_for_flag	dev/e1000/e1000_mbx.c	/^static s32 e1000_null_mbx_check_for_flag(struct e1000_hw *hw, u16 mbx_id)$/;"	f	file:
e1000_null_mbx_transact	dev/e1000/e1000_mbx.c	/^static s32 e1000_null_mbx_transact(struct e1000_hw *hw, u32 *msg, u16 size,$/;"	f	file:
e1000_null_mng_mode	dev/e1000/e1000_mac.c	/^bool e1000_null_mng_mode(struct e1000_hw *hw) {$/;"	f
e1000_null_nvm_generic	dev/e1000/e1000_nvm.c	/^void e1000_null_nvm_generic(struct e1000_hw *hw)$/;"	f
e1000_null_ops_generic	dev/e1000/e1000_mac.c	/^s32 e1000_null_ops_generic(struct e1000_hw *hw)$/;"	f
e1000_null_phy_generic	dev/e1000/e1000_phy.c	/^void e1000_null_phy_generic(struct e1000_hw *hw)$/;"	f
e1000_null_rar_set	dev/e1000/e1000_mac.c	/^void e1000_null_rar_set(struct e1000_hw *hw, u8 *h, u32 a)$/;"	f
e1000_null_read_nvm	dev/e1000/e1000_nvm.c	/^s32 e1000_null_read_nvm(struct e1000_hw *hw, u16 a, u16 b, u16 *c)$/;"	f
e1000_null_read_reg	dev/e1000/e1000_phy.c	/^s32 e1000_null_read_reg(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_null_set_obff_timer	dev/e1000/e1000_mac.c	/^s32 e1000_null_set_obff_timer(struct e1000_hw *hw, u32 a)$/;"	f
e1000_null_set_page	dev/e1000/e1000_phy.c	/^s32 e1000_null_set_page(struct e1000_hw *hw, u16 data)$/;"	f
e1000_null_update_mc	dev/e1000/e1000_mac.c	/^void e1000_null_update_mc(struct e1000_hw *hw, u8 *h, u32 a)$/;"	f
e1000_null_write_nvm	dev/e1000/e1000_nvm.c	/^s32 e1000_null_write_nvm(struct e1000_hw *hw, u16 a, u16 b, u16 *c)$/;"	f
e1000_null_write_reg	dev/e1000/e1000_phy.c	/^s32 e1000_null_write_reg(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_null_write_vfta	dev/e1000/e1000_mac.c	/^void e1000_null_write_vfta(struct e1000_hw *hw, u32 a, u32 b)$/;"	f
e1000_num_macs	dev/e1000/e1000_hw.h	/^	e1000_num_macs  \/* List is 1-based, so subtract 1 for TRUE count. *\/$/;"	e	enum:e1000_mac_type
e1000_num_macs	dev/e1000/e1000_vf.h	/^	e1000_num_macs  \/* List is 1-based, so subtract 1 for TRUE count. *\/$/;"	e	enum:e1000_mac_type
e1000_num_media_types	dev/e1000/e1000_hw.h	/^	e1000_num_media_types$/;"	e	enum:e1000_media_type
e1000_num_promisc_types	dev/e1000/e1000_82575.h	/^	e1000_num_promisc_types$/;"	e	enum:e1000_promisc_type
e1000_num_promisc_types	dev/e1000/e1000_vf.h	/^	e1000_num_promisc_types$/;"	e	enum:e1000_promisc_type
e1000_nvm_eeprom_microwire	dev/e1000/e1000_hw.h	/^	e1000_nvm_eeprom_microwire,$/;"	e	enum:e1000_nvm_type
e1000_nvm_eeprom_spi	dev/e1000/e1000_hw.h	/^	e1000_nvm_eeprom_spi,$/;"	e	enum:e1000_nvm_type
e1000_nvm_flash_hw	dev/e1000/e1000_hw.h	/^	e1000_nvm_flash_hw,$/;"	e	enum:e1000_nvm_type
e1000_nvm_flash_sw	dev/e1000/e1000_hw.h	/^	e1000_nvm_flash_sw$/;"	e	enum:e1000_nvm_type
e1000_nvm_info	dev/e1000/e1000_hw.h	/^struct e1000_nvm_info {$/;"	s
e1000_nvm_none	dev/e1000/e1000_hw.h	/^	e1000_nvm_none,$/;"	e	enum:e1000_nvm_type
e1000_nvm_operations	dev/e1000/e1000_hw.h	/^struct e1000_nvm_operations {$/;"	s
e1000_nvm_override	dev/e1000/e1000_hw.h	/^enum e1000_nvm_override {$/;"	g
e1000_nvm_override_microwire_large	dev/e1000/e1000_hw.h	/^	e1000_nvm_override_microwire_large$/;"	e	enum:e1000_nvm_override
e1000_nvm_override_microwire_small	dev/e1000/e1000_hw.h	/^	e1000_nvm_override_microwire_small,$/;"	e	enum:e1000_nvm_override
e1000_nvm_override_none	dev/e1000/e1000_hw.h	/^	e1000_nvm_override_none = 0,$/;"	e	enum:e1000_nvm_override
e1000_nvm_override_spi_large	dev/e1000/e1000_hw.h	/^	e1000_nvm_override_spi_large,$/;"	e	enum:e1000_nvm_override
e1000_nvm_override_spi_small	dev/e1000/e1000_hw.h	/^	e1000_nvm_override_spi_small,$/;"	e	enum:e1000_nvm_override
e1000_nvm_type	dev/e1000/e1000_hw.h	/^enum e1000_nvm_type {$/;"	g
e1000_nvm_unknown	dev/e1000/e1000_hw.h	/^	e1000_nvm_unknown = 0,$/;"	e	enum:e1000_nvm_type
e1000_obtain_mbx_lock_pf	dev/e1000/e1000_mbx.c	/^static s32 e1000_obtain_mbx_lock_pf(struct e1000_hw *hw, u16 vf_number)$/;"	f	file:
e1000_obtain_mbx_lock_vf	dev/e1000/e1000_mbx.c	/^static s32 e1000_obtain_mbx_lock_vf(struct e1000_hw *hw)$/;"	f	file:
e1000_oem_bits_config_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_oem_bits_config_ich8lan(struct e1000_hw *hw, bool d0_state)$/;"	f	file:
e1000_osdep	dev/e1000/e1000_osdep.h	/^struct e1000_osdep$/;"	s
e1000_pba	dev/e1000/e1000_nvm.h	/^struct e1000_pba {$/;"	s
e1000_pch2lan	dev/e1000/e1000_hw.h	/^	e1000_pch2lan,$/;"	e	enum:e1000_mac_type
e1000_pch_lpt	dev/e1000/e1000_hw.h	/^	e1000_pch_lpt,$/;"	e	enum:e1000_mac_type
e1000_pchlan	dev/e1000/e1000_hw.h	/^	e1000_pchlan,$/;"	e	enum:e1000_mac_type
e1000_pci_clear_mwi	dev/e1000/e1000_osdep.c	/^e1000_pci_clear_mwi(struct e1000_hw *hw)$/;"	f
e1000_pci_set_mwi	dev/e1000/e1000_osdep.c	/^e1000_pci_set_mwi(struct e1000_hw *hw)$/;"	f
e1000_pcix_mmrbc_workaround_generic	dev/e1000/e1000_mac.c	/^void e1000_pcix_mmrbc_workaround_generic(struct e1000_hw *hw)$/;"	f
e1000_phy_82577	dev/e1000/e1000_hw.h	/^	e1000_phy_82577,$/;"	e	enum:e1000_phy_type
e1000_phy_82578	dev/e1000/e1000_hw.h	/^	e1000_phy_82578,$/;"	e	enum:e1000_phy_type
e1000_phy_82579	dev/e1000/e1000_hw.h	/^	e1000_phy_82579,$/;"	e	enum:e1000_phy_type
e1000_phy_82580	dev/e1000/e1000_hw.h	/^	e1000_phy_82580,$/;"	e	enum:e1000_phy_type
e1000_phy_bm	dev/e1000/e1000_hw.h	/^	e1000_phy_bm,$/;"	e	enum:e1000_phy_type
e1000_phy_commit	dev/e1000/e1000_api.c	/^s32 e1000_phy_commit(struct e1000_hw *hw)$/;"	f
e1000_phy_force_speed_duplex_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_phy_force_speed_duplex_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_force_speed_duplex_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_phy_force_speed_duplex_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_force_speed_duplex_82577	dev/e1000/e1000_phy.c	/^s32 e1000_phy_force_speed_duplex_82577(struct e1000_hw *hw)$/;"	f
e1000_phy_force_speed_duplex_ife	dev/e1000/e1000_phy.c	/^s32 e1000_phy_force_speed_duplex_ife(struct e1000_hw *hw)$/;"	f
e1000_phy_force_speed_duplex_igp	dev/e1000/e1000_phy.c	/^s32 e1000_phy_force_speed_duplex_igp(struct e1000_hw *hw)$/;"	f
e1000_phy_force_speed_duplex_m88	dev/e1000/e1000_phy.c	/^s32 e1000_phy_force_speed_duplex_m88(struct e1000_hw *hw)$/;"	f
e1000_phy_force_speed_duplex_setup	dev/e1000/e1000_phy.c	/^void e1000_phy_force_speed_duplex_setup(struct e1000_hw *hw, u16 *phy_ctrl)$/;"	f
e1000_phy_gg82563	dev/e1000/e1000_hw.h	/^	e1000_phy_gg82563,$/;"	e	enum:e1000_phy_type
e1000_phy_has_link_generic	dev/e1000/e1000_phy.c	/^s32 e1000_phy_has_link_generic(struct e1000_hw *hw, u32 iterations,$/;"	f
e1000_phy_hw_reset	dev/e1000/e1000_api.c	/^s32 e1000_phy_hw_reset(struct e1000_hw *hw)$/;"	f
e1000_phy_hw_reset_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_phy_hw_reset_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_hw_reset_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_phy_hw_reset_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_hw_reset_generic	dev/e1000/e1000_phy.c	/^s32 e1000_phy_hw_reset_generic(struct e1000_hw *hw)$/;"	f
e1000_phy_hw_reset_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_phy_hw_reset_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_hw_reset_sgmii_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_phy_hw_reset_sgmii_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_i210	dev/e1000/e1000_hw.h	/^	e1000_phy_i210,$/;"	e	enum:e1000_phy_type
e1000_phy_i217	dev/e1000/e1000_hw.h	/^	e1000_phy_i217,$/;"	e	enum:e1000_phy_type
e1000_phy_ife	dev/e1000/e1000_hw.h	/^	e1000_phy_ife,$/;"	e	enum:e1000_phy_type
e1000_phy_igp	dev/e1000/e1000_hw.h	/^	e1000_phy_igp,$/;"	e	enum:e1000_phy_type
e1000_phy_igp_2	dev/e1000/e1000_hw.h	/^	e1000_phy_igp_2,$/;"	e	enum:e1000_phy_type
e1000_phy_igp_3	dev/e1000/e1000_hw.h	/^	e1000_phy_igp_3,$/;"	e	enum:e1000_phy_type
e1000_phy_info	dev/e1000/e1000_hw.h	/^struct e1000_phy_info {$/;"	s
e1000_phy_init_script_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_phy_init_script_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_init_script_igp3	dev/e1000/e1000_phy.c	/^s32 e1000_phy_init_script_igp3(struct e1000_hw *hw)$/;"	f
e1000_phy_is_accessible_pchlan	dev/e1000/e1000_ich8lan.c	/^static bool e1000_phy_is_accessible_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_m88	dev/e1000/e1000_hw.h	/^	e1000_phy_m88,$/;"	e	enum:e1000_phy_type
e1000_phy_none	dev/e1000/e1000_hw.h	/^	e1000_phy_none,$/;"	e	enum:e1000_phy_type
e1000_phy_operations	dev/e1000/e1000_hw.h	/^struct e1000_phy_operations {$/;"	s
e1000_phy_reset_dsp_generic	dev/e1000/e1000_phy.c	/^s32 e1000_phy_reset_dsp_generic(struct e1000_hw *hw)$/;"	f
e1000_phy_setup_autoneg	dev/e1000/e1000_phy.c	/^s32 e1000_phy_setup_autoneg(struct e1000_hw *hw)$/;"	f
e1000_phy_stats	dev/e1000/e1000_hw.h	/^struct e1000_phy_stats {$/;"	s
e1000_phy_sw_reset_generic	dev/e1000/e1000_phy.c	/^s32 e1000_phy_sw_reset_generic(struct e1000_hw *hw)$/;"	f
e1000_phy_type	dev/e1000/e1000_hw.h	/^enum e1000_phy_type {$/;"	g
e1000_phy_unknown	dev/e1000/e1000_hw.h	/^	e1000_phy_unknown = 0,$/;"	e	enum:e1000_phy_type
e1000_phy_vf	dev/e1000/e1000_hw.h	/^	e1000_phy_vf,$/;"	e	enum:e1000_phy_type
e1000_platform_pm_pch_lpt	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_platform_pm_pch_lpt(struct e1000_hw *hw, bool link)$/;"	f	file:
e1000_polarity_reversal_workaround_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_polarity_reversal_workaround_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_poll_eerd_eewr_done	dev/e1000/e1000_nvm.c	/^s32 e1000_poll_eerd_eewr_done(struct e1000_hw *hw, int ee_reg)$/;"	f
e1000_poll_fiber_serdes_link_generic	dev/e1000/e1000_mac.c	/^s32 e1000_poll_fiber_serdes_link_generic(struct e1000_hw *hw)$/;"	f
e1000_poll_for_ack	dev/e1000/e1000_mbx.c	/^static s32 e1000_poll_for_ack(struct e1000_hw *hw, u16 mbx_id)$/;"	f	file:
e1000_poll_for_msg	dev/e1000/e1000_mbx.c	/^static s32 e1000_poll_for_msg(struct e1000_hw *hw, u16 mbx_id)$/;"	f	file:
e1000_pool_flash_update_done_i210	dev/e1000/e1000_i210.c	/^s32 e1000_pool_flash_update_done_i210(struct e1000_hw *hw)$/;"	f
e1000_post_phy_reset_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_post_phy_reset_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_power_down_phy	dev/e1000/e1000_api.c	/^void e1000_power_down_phy(struct e1000_hw *hw)$/;"	f
e1000_power_down_phy_copper	dev/e1000/e1000_phy.c	/^void e1000_power_down_phy_copper(struct e1000_hw *hw)$/;"	f
e1000_power_down_phy_copper_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static void e1000_power_down_phy_copper_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_power_down_phy_copper_82540	dev/e1000/e1000_82540.c	/^static void e1000_power_down_phy_copper_82540(struct e1000_hw *hw)$/;"	f	file:
e1000_power_down_phy_copper_82541	dev/e1000/e1000_82541.c	/^static void e1000_power_down_phy_copper_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_power_down_phy_copper_82571	dev/e1000/e1000_82571.c	/^static void e1000_power_down_phy_copper_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_power_down_phy_copper_82575	dev/e1000/e1000_82575.c	/^static void e1000_power_down_phy_copper_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_power_down_phy_copper_ich8lan	dev/e1000/e1000_ich8lan.c	/^static void e1000_power_down_phy_copper_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_power_up_fiber_serdes_link	dev/e1000/e1000_api.c	/^void e1000_power_up_fiber_serdes_link(struct e1000_hw *hw)$/;"	f
e1000_power_up_phy	dev/e1000/e1000_api.c	/^void e1000_power_up_phy(struct e1000_hw *hw)$/;"	f
e1000_power_up_phy_copper	dev/e1000/e1000_phy.c	/^void e1000_power_up_phy_copper(struct e1000_hw *hw)$/;"	f
e1000_power_up_serdes_link_82575	dev/e1000/e1000_82575.c	/^static void e1000_power_up_serdes_link_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_promisc_disabled	dev/e1000/e1000_82575.h	/^	e1000_promisc_disabled = 0,   \/* all promisc modes disabled *\/$/;"	e	enum:e1000_promisc_type
e1000_promisc_disabled	dev/e1000/e1000_vf.h	/^	e1000_promisc_disabled = 0,   \/* all promisc modes disabled *\/$/;"	e	enum:e1000_promisc_type
e1000_promisc_enabled	dev/e1000/e1000_82575.h	/^	e1000_promisc_enabled = 3,    \/* both uni and multicast promisc *\/$/;"	e	enum:e1000_promisc_type
e1000_promisc_enabled	dev/e1000/e1000_vf.h	/^	e1000_promisc_enabled = 3,    \/* both uni and multicast promisc *\/$/;"	e	enum:e1000_promisc_type
e1000_promisc_multicast	dev/e1000/e1000_82575.h	/^	e1000_promisc_multicast = 2,  \/* multicast promiscuous enabled *\/$/;"	e	enum:e1000_promisc_type
e1000_promisc_multicast	dev/e1000/e1000_vf.h	/^	e1000_promisc_multicast = 2,  \/* multicast promiscuous enabled *\/$/;"	e	enum:e1000_promisc_type
e1000_promisc_set_vf	dev/e1000/e1000_vf.c	/^s32 e1000_promisc_set_vf(struct e1000_hw *hw, enum e1000_promisc_type type)$/;"	f
e1000_promisc_type	dev/e1000/e1000_82575.h	/^enum e1000_promisc_type {$/;"	g
e1000_promisc_type	dev/e1000/e1000_vf.h	/^enum e1000_promisc_type {$/;"	g
e1000_promisc_unicast	dev/e1000/e1000_82575.h	/^	e1000_promisc_unicast = 1,    \/* unicast promiscuous enabled *\/$/;"	e	enum:e1000_promisc_type
e1000_promisc_unicast	dev/e1000/e1000_vf.h	/^	e1000_promisc_unicast = 1,    \/* unicast promiscuous enabled *\/$/;"	e	enum:e1000_promisc_type
e1000_put_hw_semaphore_82571	dev/e1000/e1000_82571.c	/^static void e1000_put_hw_semaphore_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_put_hw_semaphore_82573	dev/e1000/e1000_82571.c	/^static void e1000_put_hw_semaphore_82573(struct e1000_hw *hw)$/;"	f	file:
e1000_put_hw_semaphore_82574	dev/e1000/e1000_82571.c	/^static void e1000_put_hw_semaphore_82574(struct e1000_hw *hw)$/;"	f	file:
e1000_put_hw_semaphore_generic	dev/e1000/e1000_mac.c	/^void e1000_put_hw_semaphore_generic(struct e1000_hw *hw)$/;"	f
e1000_raise_eec_clk	dev/e1000/e1000_nvm.c	/^static void e1000_raise_eec_clk(struct e1000_hw *hw, u32 *eecd)$/;"	f	file:
e1000_raise_i2c_clk	dev/e1000/e1000_82575.c	/^static void e1000_raise_i2c_clk(struct e1000_hw *hw, u32 *i2cctl)$/;"	f	file:
e1000_raise_mdi_clk_82543	dev/e1000/e1000_82543.c	/^static void e1000_raise_mdi_clk_82543(struct e1000_hw *hw, u32 *ctrl)$/;"	f	file:
e1000_rar_set	dev/e1000/e1000_api.c	/^void e1000_rar_set(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f
e1000_rar_set_82542	dev/e1000/e1000_82542.c	/^static void e1000_rar_set_82542(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f	file:
e1000_rar_set_generic	dev/e1000/e1000_mac.c	/^static void e1000_rar_set_generic(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f	file:
e1000_rar_set_pch2lan	dev/e1000/e1000_ich8lan.c	/^static void e1000_rar_set_pch2lan(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f	file:
e1000_rar_set_pch_lpt	dev/e1000/e1000_ich8lan.c	/^static void e1000_rar_set_pch_lpt(struct e1000_hw *hw, u8 *addr, u32 index)$/;"	f	file:
e1000_rar_set_vf	dev/e1000/e1000_vf.c	/^static void e1000_rar_set_vf(struct e1000_hw *hw, u8 * addr, u32 index)$/;"	f	file:
e1000_read_emi_reg_locked	dev/e1000/e1000_ich8lan.c	/^s32 e1000_read_emi_reg_locked(struct e1000_hw *hw, u16 addr, u16 *data)$/;"	f
e1000_read_flash_byte_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_read_flash_byte_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_flash_data_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_read_flash_data_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_flash_word_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_read_flash_word_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_i2c_byte_generic	dev/e1000/e1000_82575.c	/^s32 e1000_read_i2c_byte_generic(struct e1000_hw *hw, u8 byte_offset,$/;"	f
e1000_read_i2c_byte_null	dev/e1000/e1000_phy.c	/^s32 e1000_read_i2c_byte_null(struct e1000_hw *hw, u8 byte_offset,$/;"	f
e1000_read_invm_i211	dev/e1000/e1000_i210.c	/^s32 e1000_read_invm_i211(struct e1000_hw *hw, u8 address, u16 *data)$/;"	f
e1000_read_kmrn_reg	dev/e1000/e1000_api.c	/^s32 e1000_read_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_kmrn_reg_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_read_kmrn_reg_80003es2lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_kmrn_reg_generic	dev/e1000/e1000_phy.c	/^s32 e1000_read_kmrn_reg_generic(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_kmrn_reg_locked	dev/e1000/e1000_phy.c	/^s32 e1000_read_kmrn_reg_locked(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_mac_addr	dev/e1000/e1000_api.c	/^s32 e1000_read_mac_addr(struct e1000_hw *hw)$/;"	f
e1000_read_mac_addr_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_read_mac_addr_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_read_mac_addr_82540	dev/e1000/e1000_82540.c	/^s32 e1000_read_mac_addr_82540(struct e1000_hw *hw)$/;"	f
e1000_read_mac_addr_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_read_mac_addr_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_read_mac_addr_82542	dev/e1000/e1000_82542.c	/^static s32 e1000_read_mac_addr_82542(struct e1000_hw *hw)$/;"	f	file:
e1000_read_mac_addr_82543	dev/e1000/e1000_82543.c	/^s32 e1000_read_mac_addr_82543(struct e1000_hw *hw)$/;"	f
e1000_read_mac_addr_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_read_mac_addr_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_read_mac_addr_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_read_mac_addr_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_read_mac_addr_generic	dev/e1000/e1000_nvm.c	/^s32 e1000_read_mac_addr_generic(struct e1000_hw *hw)$/;"	f
e1000_read_mac_addr_vf	dev/e1000/e1000_vf.c	/^static s32 e1000_read_mac_addr_vf(struct e1000_hw *hw)$/;"	f	file:
e1000_read_mbx	dev/e1000/e1000_mbx.c	/^s32 e1000_read_mbx(struct e1000_hw *hw, u32 *msg, u16 size, u16 mbx_id)$/;"	f
e1000_read_mbx_pf	dev/e1000/e1000_mbx.c	/^static s32 e1000_read_mbx_pf(struct e1000_hw *hw, u32 *msg, u16 size,$/;"	f	file:
e1000_read_mbx_vf	dev/e1000/e1000_mbx.c	/^static s32 e1000_read_mbx_vf(struct e1000_hw *hw, u32 *msg, u16 size,$/;"	f	file:
e1000_read_nvm	dev/e1000/e1000_api.c	/^s32 e1000_read_nvm(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000_read_nvm_eerd	dev/e1000/e1000_nvm.c	/^s32 e1000_read_nvm_eerd(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000_read_nvm_i211	dev/e1000/e1000_i210.c	/^static s32 e1000_read_nvm_i211(struct e1000_hw *hw, u16 offset,$/;"	f	file:
e1000_read_nvm_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_read_nvm_ich8lan(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	file:
e1000_read_nvm_microwire	dev/e1000/e1000_nvm.c	/^s32 e1000_read_nvm_microwire(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f
e1000_read_nvm_spi	dev/e1000/e1000_nvm.c	/^s32 e1000_read_nvm_spi(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000_read_nvm_srrd_i210	dev/e1000/e1000_i210.c	/^s32 e1000_read_nvm_srrd_i210(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f
e1000_read_pba_length	dev/e1000/e1000_api.c	/^s32 e1000_read_pba_length(struct e1000_hw *hw, u32 *pba_num_size)$/;"	f
e1000_read_pba_length_generic	dev/e1000/e1000_nvm.c	/^s32 e1000_read_pba_length_generic(struct e1000_hw *hw, u32 *pba_num_size)$/;"	f
e1000_read_pba_raw	dev/e1000/e1000_nvm.c	/^s32 e1000_read_pba_raw(struct e1000_hw *hw, u16 *eeprom_buf,$/;"	f
e1000_read_pba_string	dev/e1000/e1000_api.c	/^s32 e1000_read_pba_string(struct e1000_hw *hw, u8 *pba_num, u32 pba_num_size)$/;"	f
e1000_read_pba_string_generic	dev/e1000/e1000_nvm.c	/^s32 e1000_read_pba_string_generic(struct e1000_hw *hw, u8 *pba_num,$/;"	f
e1000_read_pci_cfg	dev/e1000/e1000_osdep.c	/^e1000_read_pci_cfg(struct e1000_hw *hw, u32 reg, u16 *value)$/;"	f
e1000_read_pcie_cap_reg	dev/e1000/e1000_osdep.c	/^e1000_read_pcie_cap_reg(struct e1000_hw *hw, u32 reg, u16 *value)$/;"	f
e1000_read_phy_reg	dev/e1000/e1000_api.c	/^s32 e1000_read_phy_reg(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_read_phy_reg_82543(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f	file:
e1000_read_phy_reg_82580	dev/e1000/e1000_82575.c	/^static s32 e1000_read_phy_reg_82580(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f	file:
e1000_read_phy_reg_bm	dev/e1000/e1000_phy.c	/^s32 e1000_read_phy_reg_bm(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_bm2	dev/e1000/e1000_phy.c	/^s32 e1000_read_phy_reg_bm2(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_gg82563_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_read_phy_reg_gg82563_80003es2lan(struct e1000_hw *hw,$/;"	f	file:
e1000_read_phy_reg_gs40g	dev/e1000/e1000_phy.c	/^s32 e1000_read_phy_reg_gs40g(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_hv	dev/e1000/e1000_phy.c	/^s32 e1000_read_phy_reg_hv(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_hv_locked	dev/e1000/e1000_phy.c	/^s32 e1000_read_phy_reg_hv_locked(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_i2c	dev/e1000/e1000_phy.c	/^s32 e1000_read_phy_reg_i2c(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_igp	dev/e1000/e1000_phy.c	/^s32 e1000_read_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_igp_locked	dev/e1000/e1000_phy.c	/^s32 e1000_read_phy_reg_igp_locked(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_m88	dev/e1000/e1000_phy.c	/^s32 e1000_read_phy_reg_m88(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_mdic	dev/e1000/e1000_phy.c	/^s32 e1000_read_phy_reg_mdic(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_page_hv	dev/e1000/e1000_phy.c	/^s32 e1000_read_phy_reg_page_hv(struct e1000_hw *hw, u32 offset, u16 *data)$/;"	f
e1000_read_phy_reg_sgmii_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_read_phy_reg_sgmii_82575(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_read_posted_mbx	dev/e1000/e1000_mbx.c	/^s32 e1000_read_posted_mbx(struct e1000_hw *hw, u32 *msg, u16 size, u16 mbx_id)$/;"	f
e1000_read_sfp_data_byte	dev/e1000/e1000_phy.c	/^s32 e1000_read_sfp_data_byte(struct e1000_hw *hw, u16 offset, u8 *data)$/;"	f
e1000_read_v2p_mailbox	dev/e1000/e1000_mbx.c	/^static u32 e1000_read_v2p_mailbox(struct e1000_hw *hw)$/;"	f	file:
e1000_ready_nvm_eeprom	dev/e1000/e1000_nvm.c	/^static s32 e1000_ready_nvm_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_release_mac_csr_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static void e1000_release_mac_csr_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_release_nvm_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static void e1000_release_nvm_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_release_nvm_82571	dev/e1000/e1000_82571.c	/^static void e1000_release_nvm_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_release_nvm_82575	dev/e1000/e1000_82575.c	/^static void e1000_release_nvm_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_release_nvm_generic	dev/e1000/e1000_nvm.c	/^void e1000_release_nvm_generic(struct e1000_hw *hw)$/;"	f
e1000_release_nvm_i210	dev/e1000/e1000_i210.c	/^static void e1000_release_nvm_i210(struct e1000_hw *hw)$/;"	f	file:
e1000_release_nvm_ich8lan	dev/e1000/e1000_ich8lan.c	/^static void e1000_release_nvm_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_release_phy	dev/e1000/e1000_api.c	/^void e1000_release_phy(struct e1000_hw *hw)$/;"	f
e1000_release_phy_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static void e1000_release_phy_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_release_phy_82575	dev/e1000/e1000_82575.c	/^static void e1000_release_phy_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_release_swflag_ich8lan	dev/e1000/e1000_ich8lan.c	/^static void e1000_release_swflag_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_release_swfw_sync_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static void e1000_release_swfw_sync_80003es2lan(struct e1000_hw *hw, u16 mask)$/;"	f	file:
e1000_release_swfw_sync_82575	dev/e1000/e1000_82575.c	/^static void e1000_release_swfw_sync_82575(struct e1000_hw *hw, u16 mask)$/;"	f	file:
e1000_release_swfw_sync_i210	dev/e1000/e1000_i210.c	/^void e1000_release_swfw_sync_i210(struct e1000_hw *hw, u16 mask)$/;"	f
e1000_release_vf	dev/e1000/e1000_vf.c	/^static void e1000_release_vf(struct e1000_hw *hw)$/;"	f	file:
e1000_reload_nvm	dev/e1000/e1000_api.c	/^void e1000_reload_nvm(struct e1000_hw *hw)$/;"	f
e1000_reload_nvm_generic	dev/e1000/e1000_nvm.c	/^static void e1000_reload_nvm_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_adaptive	dev/e1000/e1000_api.c	/^void e1000_reset_adaptive(struct e1000_hw *hw)$/;"	f
e1000_reset_adaptive_generic	dev/e1000/e1000_mac.c	/^void e1000_reset_adaptive_generic(struct e1000_hw *hw)$/;"	f
e1000_reset_hw	dev/e1000/e1000_api.c	/^s32 e1000_reset_hw(struct e1000_hw *hw)$/;"	f
e1000_reset_hw_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_reset_hw_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_82540	dev/e1000/e1000_82540.c	/^static s32 e1000_reset_hw_82540(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_reset_hw_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_82542	dev/e1000/e1000_82542.c	/^static s32 e1000_reset_hw_82542(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_reset_hw_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_reset_hw_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_reset_hw_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_82580	dev/e1000/e1000_82575.c	/^static s32 e1000_reset_hw_82580(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_reset_hw_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_hw_vf	dev/e1000/e1000_vf.c	/^static s32 e1000_reset_hw_vf(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_init_script_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_reset_init_script_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_reset_mdicnfg_82580	dev/e1000/e1000_82575.c	/^static s32 e1000_reset_mdicnfg_82580(struct e1000_hw *hw)$/;"	f	file:
e1000_resume_workarounds_pchlan	dev/e1000/e1000_ich8lan.c	/^void e1000_resume_workarounds_pchlan(struct e1000_hw *hw)$/;"	f
e1000_retry_write_flash_byte_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_retry_write_flash_byte_ich8lan(struct e1000_hw *hw,$/;"	f	file:
e1000_rev_polarity	dev/e1000/e1000_hw.h	/^enum e1000_rev_polarity {$/;"	g
e1000_rev_polarity_normal	dev/e1000/e1000_hw.h	/^	e1000_rev_polarity_normal = 0,$/;"	e	enum:e1000_rev_polarity
e1000_rev_polarity_reversed	dev/e1000/e1000_hw.h	/^	e1000_rev_polarity_reversed,$/;"	e	enum:e1000_rev_polarity
e1000_rev_polarity_undefined	dev/e1000/e1000_hw.h	/^	e1000_rev_polarity_undefined = 0xFF$/;"	e	enum:e1000_rev_polarity
e1000_rlpml_set_vf	dev/e1000/e1000_vf.c	/^void e1000_rlpml_set_vf(struct e1000_hw *hw, u16 max_size)$/;"	f
e1000_rx_desc	dev/e1000/e1000_hw.h	/^struct e1000_rx_desc {$/;"	s
e1000_rx_desc_extended	dev/e1000/e1000_hw.h	/^union e1000_rx_desc_extended {$/;"	u
e1000_rx_desc_packet_split	dev/e1000/e1000_hw.h	/^union e1000_rx_desc_packet_split {$/;"	u
e1000_rx_fifo_flush_82575	dev/e1000/e1000_82575.c	/^void e1000_rx_fifo_flush_82575(struct e1000_hw *hw)$/;"	f
e1000_rx_unrefreshed	dev/e1000/if_em.h	/^e1000_rx_unrefreshed(struct rx_ring *rxr)$/;"	f
e1000_rxpbs_adjust_82580	dev/e1000/e1000_82575.c	/^u16 e1000_rxpbs_adjust_82580(u32 data)$/;"	f
e1000_serdes_link_autoneg_complete	dev/e1000/e1000_hw.h	/^	e1000_serdes_link_autoneg_complete,$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_autoneg_progress	dev/e1000/e1000_hw.h	/^	e1000_serdes_link_autoneg_progress,$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_down	dev/e1000/e1000_hw.h	/^	e1000_serdes_link_down = 0,$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_forced_up	dev/e1000/e1000_hw.h	/^	e1000_serdes_link_forced_up$/;"	e	enum:e1000_serdes_link_state
e1000_serdes_link_state	dev/e1000/e1000_hw.h	/^enum e1000_serdes_link_state {$/;"	g
e1000_set_d0_lplu_state	dev/e1000/e1000_api.c	/^s32 e1000_set_d0_lplu_state(struct e1000_hw *hw, bool active)$/;"	f
e1000_set_d0_lplu_state_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_set_d0_lplu_state_82571(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d0_lplu_state_82574	dev/e1000/e1000_82571.c	/^static s32 e1000_set_d0_lplu_state_82574(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d0_lplu_state_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_set_d0_lplu_state_82575(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d0_lplu_state_82580	dev/e1000/e1000_82575.c	/^static s32 e1000_set_d0_lplu_state_82580(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d0_lplu_state_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_set_d0_lplu_state_ich8lan(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d3_lplu_state	dev/e1000/e1000_api.c	/^s32 e1000_set_d3_lplu_state(struct e1000_hw *hw, bool active)$/;"	f
e1000_set_d3_lplu_state_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_set_d3_lplu_state_82541(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d3_lplu_state_82574	dev/e1000/e1000_82571.c	/^static s32 e1000_set_d3_lplu_state_82574(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_d3_lplu_state_82580	dev/e1000/e1000_82575.c	/^s32 e1000_set_d3_lplu_state_82580(struct e1000_hw *hw, bool active)$/;"	f
e1000_set_d3_lplu_state_generic	dev/e1000/e1000_phy.c	/^s32 e1000_set_d3_lplu_state_generic(struct e1000_hw *hw, bool active)$/;"	f
e1000_set_d3_lplu_state_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_set_d3_lplu_state_ich8lan(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_default_fc_generic	dev/e1000/e1000_mac.c	/^s32 e1000_set_default_fc_generic(struct e1000_hw *hw)$/;"	f
e1000_set_eee_i350	dev/e1000/e1000_82575.c	/^s32 e1000_set_eee_i350(struct e1000_hw *hw)$/;"	f
e1000_set_eee_pchlan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_set_eee_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_set_fc_watermarks_generic	dev/e1000/e1000_mac.c	/^s32 e1000_set_fc_watermarks_generic(struct e1000_hw *hw)$/;"	f
e1000_set_i2c_bb	dev/e1000/e1000_82575.c	/^s32 e1000_set_i2c_bb(struct e1000_hw *hw)$/;"	f
e1000_set_i2c_data	dev/e1000/e1000_82575.c	/^static s32 e1000_set_i2c_data(struct e1000_hw *hw, u32 *i2cctl, bool data)$/;"	f	file:
e1000_set_kmrn_lock_loss_workaround_ich8lan	dev/e1000/e1000_ich8lan.c	/^void e1000_set_kmrn_lock_loss_workaround_ich8lan(struct e1000_hw *hw,$/;"	f
e1000_set_laa_state_82571	dev/e1000/e1000_82571.c	/^void e1000_set_laa_state_82571(struct e1000_hw *hw, bool state)$/;"	f
e1000_set_lan_id_multi_port_pci	dev/e1000/e1000_mac.c	/^void e1000_set_lan_id_multi_port_pci(struct e1000_hw *hw)$/;"	f
e1000_set_lan_id_multi_port_pcie	dev/e1000/e1000_mac.c	/^static void e1000_set_lan_id_multi_port_pcie(struct e1000_hw *hw)$/;"	f	file:
e1000_set_lan_id_single_port	dev/e1000/e1000_mac.c	/^void e1000_set_lan_id_single_port(struct e1000_hw *hw)$/;"	f
e1000_set_lplu_state_pchlan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_set_lplu_state_pchlan(struct e1000_hw *hw, bool active)$/;"	f	file:
e1000_set_mac_type	dev/e1000/e1000_api.c	/^s32 e1000_set_mac_type(struct e1000_hw *hw)$/;"	f
e1000_set_master_slave_mode	dev/e1000/e1000_phy.c	/^static s32 e1000_set_master_slave_mode(struct e1000_hw *hw)$/;"	f	file:
e1000_set_mdio_slow_mode_hv	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_set_mdio_slow_mode_hv(struct e1000_hw *hw)$/;"	f	file:
e1000_set_obff_timer	dev/e1000/e1000_api.c	/^s32 e1000_set_obff_timer(struct e1000_hw *hw, u32 itr)$/;"	f
e1000_set_obff_timer_pch_lpt	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_set_obff_timer_pch_lpt(struct e1000_hw *hw, u32 itr)$/;"	f	file:
e1000_set_page_igp	dev/e1000/e1000_phy.c	/^s32 e1000_set_page_igp(struct e1000_hw *hw, u16 page)$/;"	f
e1000_set_pcie_completion_timeout	dev/e1000/e1000_82575.c	/^static s32 e1000_set_pcie_completion_timeout(struct e1000_hw *hw)$/;"	f	file:
e1000_set_pcie_no_snoop_generic	dev/e1000/e1000_mac.c	/^void e1000_set_pcie_no_snoop_generic(struct e1000_hw *hw, u32 no_snoop)$/;"	f
e1000_set_phy_mode_82540	dev/e1000/e1000_82540.c	/^static s32 e1000_set_phy_mode_82540(struct e1000_hw *hw)$/;"	f	file:
e1000_set_sfp_media_type_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_set_sfp_media_type_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_set_tbi_compatibility_82543	dev/e1000/e1000_82543.c	/^void e1000_set_tbi_compatibility_82543(struct e1000_hw *hw, bool state)$/;"	f
e1000_set_tbi_sbp_82543	dev/e1000/e1000_82543.c	/^static void e1000_set_tbi_sbp_82543(struct e1000_hw *hw, bool state)$/;"	f	file:
e1000_set_vco_speed_82540	dev/e1000/e1000_82540.c	/^static s32 e1000_set_vco_speed_82540(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_setup_copper_link_80003es2lan(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_82540	dev/e1000/e1000_82540.c	/^static s32 e1000_setup_copper_link_82540(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_setup_copper_link_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_setup_copper_link_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_setup_copper_link_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_setup_copper_link_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_generic	dev/e1000/e1000_phy.c	/^s32 e1000_setup_copper_link_generic(struct e1000_hw *hw)$/;"	f
e1000_setup_copper_link_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_setup_copper_link_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link_pch_lpt	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_setup_copper_link_pch_lpt(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_fiber_link_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_setup_fiber_link_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_fiber_serdes_link_82540	dev/e1000/e1000_82540.c	/^static s32 e1000_setup_fiber_serdes_link_82540(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_fiber_serdes_link_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_setup_fiber_serdes_link_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_fiber_serdes_link_generic	dev/e1000/e1000_mac.c	/^s32 e1000_setup_fiber_serdes_link_generic(struct e1000_hw *hw)$/;"	f
e1000_setup_init_funcs	dev/e1000/e1000_api.c	/^s32 e1000_setup_init_funcs(struct e1000_hw *hw, bool init_device)$/;"	f
e1000_setup_led	dev/e1000/e1000_api.c	/^s32 e1000_setup_led(struct e1000_hw *hw)$/;"	f
e1000_setup_led_82541	dev/e1000/e1000_82541.c	/^static s32 e1000_setup_led_82541(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_led_generic	dev/e1000/e1000_mac.c	/^s32 e1000_setup_led_generic(struct e1000_hw *hw)$/;"	f
e1000_setup_led_pchlan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_setup_led_pchlan(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_link	dev/e1000/e1000_api.c	/^s32 e1000_setup_link(struct e1000_hw *hw)$/;"	f
e1000_setup_link_82542	dev/e1000/e1000_82542.c	/^static s32 e1000_setup_link_82542(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_link_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_setup_link_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_link_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_setup_link_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_link_generic	dev/e1000/e1000_mac.c	/^s32 e1000_setup_link_generic(struct e1000_hw *hw)$/;"	f
e1000_setup_link_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_setup_link_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_link_vf	dev/e1000/e1000_vf.c	/^static s32 e1000_setup_link_vf(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_serdes_link_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_setup_serdes_link_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_sgmii_active_82575	dev/e1000/e1000_82575.c	/^static bool e1000_sgmii_active_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_sgmii_uses_mdio_82575	dev/e1000/e1000_82575.c	/^static bool e1000_sgmii_uses_mdio_82575(struct e1000_hw *hw)$/;"	f	file:
e1000_shadow_ram	dev/e1000/e1000_hw.h	/^struct e1000_shadow_ram {$/;"	s
e1000_shift_in_eec_bits	dev/e1000/e1000_nvm.c	/^static u16 e1000_shift_in_eec_bits(struct e1000_hw *hw, u16 count)$/;"	f	file:
e1000_shift_in_mdi_bits_82543	dev/e1000/e1000_82543.c	/^static u16 e1000_shift_in_mdi_bits_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_shift_out_eec_bits	dev/e1000/e1000_nvm.c	/^static void e1000_shift_out_eec_bits(struct e1000_hw *hw, u16 data, u16 count)$/;"	f	file:
e1000_shift_out_mdi_bits_82543	dev/e1000/e1000_82543.c	/^static void e1000_shift_out_mdi_bits_82543(struct e1000_hw *hw, u32 data,$/;"	f	file:
e1000_shutdown_fiber_serdes_link	dev/e1000/e1000_api.c	/^void e1000_shutdown_fiber_serdes_link(struct e1000_hw *hw)$/;"	f
e1000_shutdown_serdes_link_82575	dev/e1000/e1000_82575.c	/^void e1000_shutdown_serdes_link_82575(struct e1000_hw *hw)$/;"	f
e1000_smart_speed	dev/e1000/e1000_hw.h	/^enum e1000_smart_speed {$/;"	g
e1000_smart_speed_default	dev/e1000/e1000_hw.h	/^	e1000_smart_speed_default = 0,$/;"	e	enum:e1000_smart_speed
e1000_smart_speed_off	dev/e1000/e1000_hw.h	/^	e1000_smart_speed_off$/;"	e	enum:e1000_smart_speed
e1000_smart_speed_on	dev/e1000/e1000_hw.h	/^	e1000_smart_speed_on,$/;"	e	enum:e1000_smart_speed
e1000_standby_nvm	dev/e1000/e1000_nvm.c	/^static void e1000_standby_nvm(struct e1000_hw *hw)$/;"	f	file:
e1000_stop_nvm	dev/e1000/e1000_nvm.c	/^void e1000_stop_nvm(struct e1000_hw *hw)$/;"	f
e1000_suspend_workarounds_ich8lan	dev/e1000/e1000_ich8lan.c	/^void e1000_suspend_workarounds_ich8lan(struct e1000_hw *hw)$/;"	f
e1000_sw_lcd_config_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_sw_lcd_config_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_tbi_adjust_stats_82543	dev/e1000/e1000_82543.c	/^void e1000_tbi_adjust_stats_82543(struct e1000_hw *hw,$/;"	f
e1000_tbi_compatibility_enabled_82543	dev/e1000/e1000_82543.c	/^static bool e1000_tbi_compatibility_enabled_82543(struct e1000_hw *hw)$/;"	f	file:
e1000_tbi_sbp_enabled_82543	dev/e1000/e1000_82543.c	/^bool e1000_tbi_sbp_enabled_82543(struct e1000_hw *hw)$/;"	f
e1000_translate_register_82542	dev/e1000/e1000_82542.c	/^u32 e1000_translate_register_82542(u32 reg)$/;"	f
e1000_tx_desc	dev/e1000/e1000_hw.h	/^struct e1000_tx_desc {$/;"	s
e1000_undefined	dev/e1000/e1000_hw.h	/^	e1000_undefined = 0,$/;"	e	enum:e1000_mac_type
e1000_undefined	dev/e1000/e1000_vf.h	/^	e1000_undefined = 0,$/;"	e	enum:e1000_mac_type
e1000_update_adaptive	dev/e1000/e1000_api.c	/^void e1000_update_adaptive(struct e1000_hw *hw)$/;"	f
e1000_update_adaptive_generic	dev/e1000/e1000_mac.c	/^void e1000_update_adaptive_generic(struct e1000_hw *hw)$/;"	f
e1000_update_flash_i210	dev/e1000/e1000_i210.c	/^s32 e1000_update_flash_i210(struct e1000_hw *hw)$/;"	f
e1000_update_mc_addr_list	dev/e1000/e1000_api.c	/^void e1000_update_mc_addr_list(struct e1000_hw *hw, u8 *mc_addr_list,$/;"	f
e1000_update_mc_addr_list_generic	dev/e1000/e1000_mac.c	/^void e1000_update_mc_addr_list_generic(struct e1000_hw *hw,$/;"	f
e1000_update_mc_addr_list_pch2lan	dev/e1000/e1000_ich8lan.c	/^static void e1000_update_mc_addr_list_pch2lan(struct e1000_hw *hw,$/;"	f	file:
e1000_update_mc_addr_list_vf	dev/e1000/e1000_vf.c	/^void e1000_update_mc_addr_list_vf(struct e1000_hw *hw,$/;"	f
e1000_update_nvm_checksum	dev/e1000/e1000_api.c	/^s32 e1000_update_nvm_checksum(struct e1000_hw *hw)$/;"	f
e1000_update_nvm_checksum_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_update_nvm_checksum_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_update_nvm_checksum_82580	dev/e1000/e1000_82575.c	/^static s32 e1000_update_nvm_checksum_82580(struct e1000_hw *hw)$/;"	f	file:
e1000_update_nvm_checksum_generic	dev/e1000/e1000_nvm.c	/^s32 e1000_update_nvm_checksum_generic(struct e1000_hw *hw)$/;"	f
e1000_update_nvm_checksum_i210	dev/e1000/e1000_i210.c	/^s32 e1000_update_nvm_checksum_i210(struct e1000_hw *hw)$/;"	f
e1000_update_nvm_checksum_i350	dev/e1000/e1000_82575.c	/^static s32 e1000_update_nvm_checksum_i350(struct e1000_hw *hw)$/;"	f	file:
e1000_update_nvm_checksum_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_update_nvm_checksum_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_update_nvm_checksum_with_offset	dev/e1000/e1000_82575.c	/^s32 e1000_update_nvm_checksum_with_offset(struct e1000_hw *hw, u16 offset)$/;"	f
e1000_valid_led_default_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_valid_led_default_82571(struct e1000_hw *hw, u16 *data)$/;"	f	file:
e1000_valid_led_default_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_valid_led_default_82575(struct e1000_hw *hw, u16 *data)$/;"	f	file:
e1000_valid_led_default_generic	dev/e1000/e1000_mac.c	/^s32 e1000_valid_led_default_generic(struct e1000_hw *hw, u16 *data)$/;"	f
e1000_valid_led_default_i210	dev/e1000/e1000_i210.c	/^static s32 e1000_valid_led_default_i210(struct e1000_hw *hw, u16 *data)$/;"	f	file:
e1000_valid_led_default_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_valid_led_default_ich8lan(struct e1000_hw *hw, u16 *data)$/;"	f	file:
e1000_valid_nvm_bank_detect_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_valid_nvm_bank_detect_ich8lan(struct e1000_hw *hw, u32 *bank)$/;"	f	file:
e1000_validate_mdi_setting	dev/e1000/e1000_api.c	/^s32 e1000_validate_mdi_setting(struct e1000_hw *hw)$/;"	f
e1000_validate_mdi_setting_crossover_generic	dev/e1000/e1000_mac.c	/^s32 e1000_validate_mdi_setting_crossover_generic(struct e1000_hw *hw)$/;"	f
e1000_validate_mdi_setting_generic	dev/e1000/e1000_mac.c	/^static s32 e1000_validate_mdi_setting_generic(struct e1000_hw *hw)$/;"	f	file:
e1000_validate_nvm_checksum	dev/e1000/e1000_api.c	/^s32 e1000_validate_nvm_checksum(struct e1000_hw *hw)$/;"	f
e1000_validate_nvm_checksum_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_validate_nvm_checksum_82571(struct e1000_hw *hw)$/;"	f	file:
e1000_validate_nvm_checksum_82580	dev/e1000/e1000_82575.c	/^static s32 e1000_validate_nvm_checksum_82580(struct e1000_hw *hw)$/;"	f	file:
e1000_validate_nvm_checksum_generic	dev/e1000/e1000_nvm.c	/^s32 e1000_validate_nvm_checksum_generic(struct e1000_hw *hw)$/;"	f
e1000_validate_nvm_checksum_i210	dev/e1000/e1000_i210.c	/^s32 e1000_validate_nvm_checksum_i210(struct e1000_hw *hw)$/;"	f
e1000_validate_nvm_checksum_i350	dev/e1000/e1000_82575.c	/^static s32 e1000_validate_nvm_checksum_i350(struct e1000_hw *hw)$/;"	f	file:
e1000_validate_nvm_checksum_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_validate_nvm_checksum_ich8lan(struct e1000_hw *hw)$/;"	f	file:
e1000_validate_nvm_checksum_with_offset	dev/e1000/e1000_82575.c	/^s32 e1000_validate_nvm_checksum_with_offset(struct e1000_hw *hw, u16 offset)$/;"	f
e1000_vf_stats	dev/e1000/e1000_hw.h	/^struct e1000_vf_stats {$/;"	s
e1000_vf_stats	dev/e1000/e1000_vf.h	/^struct e1000_vf_stats {$/;"	s
e1000_vfadapt	dev/e1000/e1000_hw.h	/^	e1000_vfadapt,$/;"	e	enum:e1000_mac_type
e1000_vfadapt	dev/e1000/e1000_vf.h	/^	e1000_vfadapt,$/;"	e	enum:e1000_mac_type
e1000_vfadapt_i350	dev/e1000/e1000_hw.h	/^	e1000_vfadapt_i350,$/;"	e	enum:e1000_mac_type
e1000_vfadapt_i350	dev/e1000/e1000_vf.h	/^	e1000_vfadapt_i350,$/;"	e	enum:e1000_mac_type
e1000_vfta_set_vf	dev/e1000/e1000_vf.c	/^void e1000_vfta_set_vf(struct e1000_hw *hw, u16 vid, bool set)$/;"	f
e1000_vmdq_set_anti_spoofing_pf	dev/e1000/e1000_82575.c	/^void e1000_vmdq_set_anti_spoofing_pf(struct e1000_hw *hw, bool enable, int pf)$/;"	f
e1000_vmdq_set_loopback_pf	dev/e1000/e1000_82575.c	/^void e1000_vmdq_set_loopback_pf(struct e1000_hw *hw, bool enable)$/;"	f
e1000_vmdq_set_replication_pf	dev/e1000/e1000_82575.c	/^void e1000_vmdq_set_replication_pf(struct e1000_hw *hw, bool enable)$/;"	f
e1000_wait_autoneg	dev/e1000/e1000_phy.c	/^static s32 e1000_wait_autoneg(struct e1000_hw *hw)$/;"	f	file:
e1000_write_8bit_ctrl_reg	dev/e1000/e1000_api.c	/^s32 e1000_write_8bit_ctrl_reg(struct e1000_hw *hw, u32 reg, u32 offset,$/;"	f
e1000_write_8bit_ctrl_reg_generic	dev/e1000/e1000_mac.c	/^s32 e1000_write_8bit_ctrl_reg_generic(struct e1000_hw *hw, u32 reg,$/;"	f
e1000_write_emi_reg_locked	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_write_emi_reg_locked(struct e1000_hw *hw, u16 addr, u16 data)$/;"	f	file:
e1000_write_flash_byte_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_write_flash_byte_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_write_flash_data_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_write_flash_data_ich8lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_write_i2c_byte_generic	dev/e1000/e1000_82575.c	/^s32 e1000_write_i2c_byte_generic(struct e1000_hw *hw, u8 byte_offset,$/;"	f
e1000_write_i2c_byte_null	dev/e1000/e1000_phy.c	/^s32 e1000_write_i2c_byte_null(struct e1000_hw *hw,$/;"	f
e1000_write_kmrn_reg	dev/e1000/e1000_api.c	/^s32 e1000_write_kmrn_reg(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_kmrn_reg_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_write_kmrn_reg_80003es2lan(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_write_kmrn_reg_generic	dev/e1000/e1000_phy.c	/^s32 e1000_write_kmrn_reg_generic(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_kmrn_reg_locked	dev/e1000/e1000_phy.c	/^s32 e1000_write_kmrn_reg_locked(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_mbx	dev/e1000/e1000_mbx.c	/^s32 e1000_write_mbx(struct e1000_hw *hw, u32 *msg, u16 size, u16 mbx_id)$/;"	f
e1000_write_mbx_pf	dev/e1000/e1000_mbx.c	/^static s32 e1000_write_mbx_pf(struct e1000_hw *hw, u32 *msg, u16 size,$/;"	f	file:
e1000_write_mbx_vf	dev/e1000/e1000_mbx.c	/^static s32 e1000_write_mbx_vf(struct e1000_hw *hw, u32 *msg, u16 size,$/;"	f	file:
e1000_write_msg_read_ack	dev/e1000/e1000_vf.c	/^static void e1000_write_msg_read_ack(struct e1000_hw *hw,$/;"	f	file:
e1000_write_nvm	dev/e1000/e1000_api.c	/^s32 e1000_write_nvm(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000_write_nvm_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_write_nvm_80003es2lan(struct e1000_hw *hw, u16 offset,$/;"	f	file:
e1000_write_nvm_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_write_nvm_82571(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	file:
e1000_write_nvm_eewr_82571	dev/e1000/e1000_82571.c	/^static s32 e1000_write_nvm_eewr_82571(struct e1000_hw *hw, u16 offset,$/;"	f	file:
e1000_write_nvm_ich8lan	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_write_nvm_ich8lan(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	file:
e1000_write_nvm_microwire	dev/e1000/e1000_nvm.c	/^s32 e1000_write_nvm_microwire(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f
e1000_write_nvm_spi	dev/e1000/e1000_nvm.c	/^s32 e1000_write_nvm_spi(struct e1000_hw *hw, u16 offset, u16 words, u16 *data)$/;"	f
e1000_write_nvm_srwr	dev/e1000/e1000_i210.c	/^static s32 e1000_write_nvm_srwr(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f	file:
e1000_write_nvm_srwr_i210	dev/e1000/e1000_i210.c	/^s32 e1000_write_nvm_srwr_i210(struct e1000_hw *hw, u16 offset, u16 words,$/;"	f
e1000_write_pba_raw	dev/e1000/e1000_nvm.c	/^s32 e1000_write_pba_raw(struct e1000_hw *hw, u16 *eeprom_buf,$/;"	f
e1000_write_pci_cfg	dev/e1000/e1000_osdep.c	/^e1000_write_pci_cfg(struct e1000_hw *hw, u32 reg, u16 *value)$/;"	f
e1000_write_pcie_cap_reg	dev/e1000/e1000_osdep.c	/^e1000_write_pcie_cap_reg(struct e1000_hw *hw, u32 reg, u16 *value)$/;"	f
e1000_write_phy_reg	dev/e1000/e1000_api.c	/^s32 e1000_write_phy_reg(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_82543	dev/e1000/e1000_82543.c	/^static s32 e1000_write_phy_reg_82543(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f	file:
e1000_write_phy_reg_82580	dev/e1000/e1000_82575.c	/^static s32 e1000_write_phy_reg_82580(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f	file:
e1000_write_phy_reg_bm	dev/e1000/e1000_phy.c	/^s32 e1000_write_phy_reg_bm(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_bm2	dev/e1000/e1000_phy.c	/^s32 e1000_write_phy_reg_bm2(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_gg82563_80003es2lan	dev/e1000/e1000_80003es2lan.c	/^static s32 e1000_write_phy_reg_gg82563_80003es2lan(struct e1000_hw *hw,$/;"	f	file:
e1000_write_phy_reg_gs40g	dev/e1000/e1000_phy.c	/^s32 e1000_write_phy_reg_gs40g(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_hv	dev/e1000/e1000_phy.c	/^s32 e1000_write_phy_reg_hv(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_hv_locked	dev/e1000/e1000_phy.c	/^s32 e1000_write_phy_reg_hv_locked(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_i2c	dev/e1000/e1000_phy.c	/^s32 e1000_write_phy_reg_i2c(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_igp	dev/e1000/e1000_phy.c	/^s32 e1000_write_phy_reg_igp(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_igp_locked	dev/e1000/e1000_phy.c	/^s32 e1000_write_phy_reg_igp_locked(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_m88	dev/e1000/e1000_phy.c	/^s32 e1000_write_phy_reg_m88(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_mdic	dev/e1000/e1000_phy.c	/^s32 e1000_write_phy_reg_mdic(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_page_hv	dev/e1000/e1000_phy.c	/^s32 e1000_write_phy_reg_page_hv(struct e1000_hw *hw, u32 offset, u16 data)$/;"	f
e1000_write_phy_reg_sgmii_82575	dev/e1000/e1000_82575.c	/^static s32 e1000_write_phy_reg_sgmii_82575(struct e1000_hw *hw, u32 offset,$/;"	f	file:
e1000_write_posted_mbx	dev/e1000/e1000_mbx.c	/^s32 e1000_write_posted_mbx(struct e1000_hw *hw, u32 *msg, u16 size, u16 mbx_id)$/;"	f
e1000_write_sfp_data_byte	dev/e1000/e1000_phy.c	/^s32 e1000_write_sfp_data_byte(struct e1000_hw *hw, u16 offset, u8 data)$/;"	f
e1000_write_smbus_addr	dev/e1000/e1000_ich8lan.c	/^static s32 e1000_write_smbus_addr(struct e1000_hw *hw)$/;"	f	file:
e1000_write_vfta	dev/e1000/e1000_api.c	/^void e1000_write_vfta(struct e1000_hw *hw, u32 offset, u32 value)$/;"	f
e1000_write_vfta_82543	dev/e1000/e1000_82543.c	/^static void e1000_write_vfta_82543(struct e1000_hw *hw, u32 offset, u32 value)$/;"	f	file:
e1000_write_vfta_generic	dev/e1000/e1000_mac.c	/^void e1000_write_vfta_generic(struct e1000_hw *hw, u32 offset, u32 value)$/;"	f
e1000_write_vfta_i350	dev/e1000/e1000_82575.c	/^void e1000_write_vfta_i350(struct e1000_hw *hw, u32 offset, u32 value)$/;"	f
e100_base_fx	dev/e1000/e1000_phy.h	/^	u8 e100_base_fx:1;$/;"	m	struct:sfp_e1000_flags
e100_base_lx	dev/e1000/e1000_phy.h	/^	u8 e100_base_lx:1;$/;"	m	struct:sfp_e1000_flags
e10_base_bx10	dev/e1000/e1000_phy.h	/^	u8 e10_base_bx10:1;$/;"	m	struct:sfp_e1000_flags
e10_base_px	dev/e1000/e1000_phy.h	/^	u8 e10_base_px:1;$/;"	m	struct:sfp_e1000_flags
ecol	dev/e1000/e1000_hw.h	/^	u64 ecol;$/;"	m	struct:e1000_hw_stats
ecol	if_em_hw.h	/^    uint64_t ecol;$/;"	m	struct:em_hw_stats
eee_disable	dev/e1000/e1000_hw.h	/^	bool eee_disable;$/;"	m	struct:e1000_dev_spec_82575
eee_disable	dev/e1000/e1000_hw.h	/^	bool eee_disable;$/;"	m	struct:e1000_dev_spec_ich8lan
eee_lp_ability	dev/e1000/e1000_hw.h	/^	u16 eee_lp_ability;$/;"	m	struct:e1000_dev_spec_ich8lan
eee_setting	dev/e1000/if_em.c	/^static int eee_setting = 1;$/;"	v	file:
eeprom	if_em_hw.h	/^    struct em_eeprom_info eeprom;$/;"	m	struct:em_hw	typeref:struct:em_hw::em_eeprom_info
eims	dev/e1000/if_igb.h	/^	u32			eims;		\/* This queue's EIMS bit *\/$/;"	m	struct:igb_queue
eint_mask	dev/e1000/if_igb.h	/^	unsigned long	eint_mask;$/;"	m	struct:adapter
eitr_setting	dev/e1000/if_igb.h	/^	u32			eitr_setting;$/;"	m	struct:igb_queue
elements	dev/e1000/if_lem.h	/^	uint32_t   elements;$/;"	m	struct:_DESCRIPTOR_PAIR
elements	if_em.h	/^    u_int32_t   elements;$/;"	m	struct:_DESCRIPTOR_PAIR
em_1000t_rx_status	if_em_hw.h	/^} em_1000t_rx_status;$/;"	t	typeref:enum:__anon75
em_1000t_rx_status_not_ok	if_em_hw.h	/^    em_1000t_rx_status_not_ok = 0,$/;"	e	enum:__anon75
em_1000t_rx_status_ok	if_em_hw.h	/^    em_1000t_rx_status_ok,$/;"	e	enum:__anon75
em_1000t_rx_status_undefined	if_em_hw.h	/^    em_1000t_rx_status_undefined = 0xFF$/;"	e	enum:__anon75
em_100_full	if_em_hw.h	/^    em_100_full = 3$/;"	e	enum:__anon63
em_100_half	if_em_hw.h	/^    em_100_half = 2,$/;"	e	enum:__anon63
em_10_full	if_em_hw.h	/^    em_10_full = 1,$/;"	e	enum:__anon63
em_10_half	if_em_hw.h	/^    em_10_half = 0,$/;"	e	enum:__anon63
em_10bt_ext_dist_enable	if_em_hw.h	/^} em_10bt_ext_dist_enable;$/;"	t	typeref:enum:__anon70
em_10bt_ext_dist_enable_lower	if_em_hw.h	/^    em_10bt_ext_dist_enable_lower,$/;"	e	enum:__anon70
em_10bt_ext_dist_enable_normal	if_em_hw.h	/^    em_10bt_ext_dist_enable_normal = 0,$/;"	e	enum:__anon70
em_10bt_ext_dist_enable_undefined	if_em_hw.h	/^    em_10bt_ext_dist_enable_undefined = 0xFF$/;"	e	enum:__anon70
em_82540	if_em_hw.h	/^    em_82540,$/;"	e	enum:__anon60
em_82541	if_em_hw.h	/^    em_82541,$/;"	e	enum:__anon60
em_82541_rev_2	if_em_hw.h	/^    em_82541_rev_2,$/;"	e	enum:__anon60
em_82542_rev2_0	if_em_hw.h	/^    em_82542_rev2_0,$/;"	e	enum:__anon60
em_82542_rev2_1	if_em_hw.h	/^    em_82542_rev2_1,$/;"	e	enum:__anon60
em_82543	if_em_hw.h	/^    em_82543,$/;"	e	enum:__anon60
em_82544	if_em_hw.h	/^    em_82544,$/;"	e	enum:__anon60
em_82545	if_em_hw.h	/^    em_82545,$/;"	e	enum:__anon60
em_82545_rev_3	if_em_hw.h	/^    em_82545_rev_3,$/;"	e	enum:__anon60
em_82546	if_em_hw.h	/^    em_82546,$/;"	e	enum:__anon60
em_82546_rev_3	if_em_hw.h	/^    em_82546_rev_3,$/;"	e	enum:__anon60
em_82547	if_em_hw.h	/^    em_82547,$/;"	e	enum:__anon60
em_82547_fifo_workaround	if_em.c	/^em_82547_fifo_workaround(struct adapter *adapter, int len)$/;"	f	file:
em_82547_move_tail	if_em.c	/^em_82547_move_tail(void *arg)$/;"	f	file:
em_82547_rev_2	if_em_hw.h	/^    em_82547_rev_2,$/;"	e	enum:__anon60
em_82547_tx_fifo_reset	if_em.c	/^em_82547_tx_fifo_reset(struct adapter *adapter)$/;"	f	file:
em_82547_update_fifo_head	if_em.c	/^em_82547_update_fifo_head(struct adapter *adapter, int len)$/;"	f	file:
em_acquire_eeprom	if_em_hw.c	/^em_acquire_eeprom(struct em_hw *hw)$/;"	f	file:
em_add_hw_stats	dev/e1000/if_em.c	/^em_add_hw_stats(struct adapter *adapter)$/;"	f	file:
em_add_int_delay_sysctl	dev/e1000/if_em.c	/^em_add_int_delay_sysctl(struct adapter *adapter, const char *name,$/;"	f	file:
em_add_int_delay_sysctl	if_em.c	/^em_add_int_delay_sysctl(struct adapter *adapter, const char *name,$/;"	f	file:
em_adjust_serdes_amplitude	if_em_hw.c	/^em_adjust_serdes_amplitude(struct em_hw *hw)$/;"	f	file:
em_allocate_legacy	dev/e1000/if_em.c	/^em_allocate_legacy(struct adapter *adapter)$/;"	f
em_allocate_msix	dev/e1000/if_em.c	/^em_allocate_msix(struct adapter *adapter)$/;"	f
em_allocate_pci_resources	dev/e1000/if_em.c	/^em_allocate_pci_resources(struct adapter *adapter)$/;"	f	file:
em_allocate_pci_resources	if_em.c	/^em_allocate_pci_resources(struct adapter * adapter)$/;"	f	file:
em_allocate_queues	dev/e1000/if_em.c	/^em_allocate_queues(struct adapter *adapter)$/;"	f	file:
em_allocate_receive_buffers	dev/e1000/if_em.c	/^em_allocate_receive_buffers(struct rx_ring *rxr)$/;"	f	file:
em_allocate_receive_structures	if_em.c	/^em_allocate_receive_structures(struct adapter * adapter)$/;"	f	file:
em_allocate_transmit_buffers	dev/e1000/if_em.c	/^em_allocate_transmit_buffers(struct tx_ring *txr)$/;"	f	file:
em_allocate_transmit_structures	if_em.c	/^em_allocate_transmit_structures(struct adapter * adapter)$/;"	f	file:
em_attach	dev/e1000/if_em.c	/^em_attach(device_t dev)$/;"	f	file:
em_attach	if_em.c	/^em_attach(device_t dev)$/;"	f
em_auto_x_mode	if_em_hw.h	/^} em_auto_x_mode;$/;"	t	typeref:enum:__anon74
em_auto_x_mode_auto1	if_em_hw.h	/^    em_auto_x_mode_auto1,$/;"	e	enum:__anon74
em_auto_x_mode_auto2	if_em_hw.h	/^    em_auto_x_mode_auto2,$/;"	e	enum:__anon74
em_auto_x_mode_manual_mdi	if_em_hw.h	/^    em_auto_x_mode_manual_mdi = 0,$/;"	e	enum:__anon74
em_auto_x_mode_manual_mdix	if_em_hw.h	/^    em_auto_x_mode_manual_mdix,$/;"	e	enum:__anon74
em_auto_x_mode_undefined	if_em_hw.h	/^    em_auto_x_mode_undefined = 0xFF$/;"	e	enum:__anon74
em_buffer	dev/e1000/if_em.h	/^struct em_buffer {$/;"	s
em_buffer	dev/e1000/if_lem.h	/^struct em_buffer {$/;"	s
em_buffer	if_em.h	/^struct em_buffer {$/;"	s
em_bus_speed	if_em_hw.h	/^} em_bus_speed;$/;"	t	typeref:enum:__anon66
em_bus_speed_100	if_em_hw.h	/^    em_bus_speed_100,$/;"	e	enum:__anon66
em_bus_speed_120	if_em_hw.h	/^    em_bus_speed_120,$/;"	e	enum:__anon66
em_bus_speed_133	if_em_hw.h	/^    em_bus_speed_133,$/;"	e	enum:__anon66
em_bus_speed_33	if_em_hw.h	/^    em_bus_speed_33,$/;"	e	enum:__anon66
em_bus_speed_66	if_em_hw.h	/^    em_bus_speed_66,$/;"	e	enum:__anon66
em_bus_speed_reserved	if_em_hw.h	/^    em_bus_speed_reserved$/;"	e	enum:__anon66
em_bus_speed_unknown	if_em_hw.h	/^    em_bus_speed_unknown = 0,$/;"	e	enum:__anon66
em_bus_type	if_em_hw.h	/^} em_bus_type;$/;"	t	typeref:enum:__anon65
em_bus_type_pci	if_em_hw.h	/^    em_bus_type_pci,$/;"	e	enum:__anon65
em_bus_type_pcix	if_em_hw.h	/^    em_bus_type_pcix,$/;"	e	enum:__anon65
em_bus_type_reserved	if_em_hw.h	/^    em_bus_type_reserved$/;"	e	enum:__anon65
em_bus_type_unknown	if_em_hw.h	/^    em_bus_type_unknown = 0,$/;"	e	enum:__anon65
em_bus_width	if_em_hw.h	/^} em_bus_width;$/;"	t	typeref:enum:__anon67
em_bus_width_32	if_em_hw.h	/^    em_bus_width_32,$/;"	e	enum:__anon67
em_bus_width_64	if_em_hw.h	/^    em_bus_width_64,$/;"	e	enum:__anon67
em_bus_width_reserved	if_em_hw.h	/^    em_bus_width_reserved$/;"	e	enum:__anon67
em_bus_width_unknown	if_em_hw.h	/^    em_bus_width_unknown = 0,$/;"	e	enum:__anon67
em_cable_length	if_em_hw.h	/^} em_cable_length;$/;"	t	typeref:enum:__anon68
em_cable_length_110_140	if_em_hw.h	/^    em_cable_length_110_140,$/;"	e	enum:__anon68
em_cable_length_140	if_em_hw.h	/^    em_cable_length_140,$/;"	e	enum:__anon68
em_cable_length_50	if_em_hw.h	/^    em_cable_length_50 = 0,$/;"	e	enum:__anon68
em_cable_length_50_80	if_em_hw.h	/^    em_cable_length_50_80,$/;"	e	enum:__anon68
em_cable_length_80_110	if_em_hw.h	/^    em_cable_length_80_110,$/;"	e	enum:__anon68
em_cable_length_undefined	if_em_hw.h	/^    em_cable_length_undefined = 0xFF$/;"	e	enum:__anon68
em_check_downshift	if_em_hw.c	/^em_check_downshift(struct em_hw *hw)$/;"	f
em_check_for_link	if_em_hw.c	/^em_check_for_link(struct em_hw *hw)$/;"	f
em_check_polarity	if_em_hw.c	/^em_check_polarity(struct em_hw *hw,$/;"	f
em_clean_transmit_interrupts	if_em.c	/^em_clean_transmit_interrupts(struct adapter * adapter)$/;"	f	file:
em_cleanup_led	if_em_hw.c	/^em_cleanup_led(struct em_hw *hw)$/;"	f
em_clear_hw_cntrs	if_em_hw.c	/^em_clear_hw_cntrs(struct em_hw *hw)$/;"	f
em_clear_vfta	if_em_hw.c	/^em_clear_vfta(struct em_hw *hw)$/;"	f
em_config_collision_dist	if_em_hw.c	/^em_config_collision_dist(struct em_hw *hw)$/;"	f
em_config_dsp_after_link_change	if_em_hw.c	/^em_config_dsp_after_link_change(struct em_hw *hw,$/;"	f
em_config_fc_after_link_up	if_em_hw.c	/^em_config_fc_after_link_up(struct em_hw *hw)$/;"	f
em_config_mac_to_phy	if_em_hw.c	/^em_config_mac_to_phy(struct em_hw *hw)$/;"	f	file:
em_context_desc	if_em_hw.h	/^struct em_context_desc {$/;"	s
em_data_desc	if_em_hw.h	/^struct em_data_desc {$/;"	s
em_debug_sbp	dev/e1000/if_em.c	/^static int em_debug_sbp = FALSE;$/;"	v	file:
em_detach	dev/e1000/if_em.c	/^em_detach(device_t dev)$/;"	f	file:
em_detach	if_em.c	/^em_detach(device_t dev)$/;"	f
em_detect_gig_phy	if_em_hw.c	/^em_detect_gig_phy(struct em_hw *hw)$/;"	f
em_devclass	dev/e1000/if_em.c	/^devclass_t em_devclass;$/;"	v
em_disable_aspm	dev/e1000/if_em.c	/^em_disable_aspm(struct adapter *adapter)$/;"	f	file:
em_disable_intr	dev/e1000/if_em.c	/^em_disable_intr(struct adapter *adapter)$/;"	f	file:
em_disable_intr	if_em.c	/^em_disable_intr(struct adapter *adapter)$/;"	f	file:
em_disable_promisc	dev/e1000/if_em.c	/^em_disable_promisc(struct adapter *adapter)$/;"	f	file:
em_disable_promisc	if_em.c	/^em_disable_promisc(struct adapter * adapter)$/;"	f	file:
em_display_debug_stats	dev/e1000/if_em.c	/^int	em_display_debug_stats = 0;$/;"	v
em_dma_alloc	dev/e1000/if_em.h	/^struct em_dma_alloc {$/;"	s
em_dma_alloc	dev/e1000/if_lem.h	/^struct em_dma_alloc {$/;"	s
em_dma_free	dev/e1000/if_em.c	/^em_dma_free(struct adapter *adapter, struct em_dma_alloc *dma)$/;"	f	file:
em_dma_malloc	dev/e1000/if_em.c	/^em_dma_malloc(struct adapter *adapter, bus_size_t size,$/;"	f	file:
em_dmamap_cb	dev/e1000/if_em.c	/^em_dmamap_cb(void *arg, bus_dma_segment_t *segs, int nseg, int error)$/;"	f	file:
em_downshift	if_em_hw.h	/^} em_downshift;$/;"	t	typeref:enum:__anon72
em_downshift_activated	if_em_hw.h	/^    em_downshift_activated,$/;"	e	enum:__anon72
em_downshift_normal	if_em_hw.h	/^    em_downshift_normal = 0,$/;"	e	enum:__anon72
em_downshift_undefined	if_em_hw.h	/^    em_downshift_undefined = 0xFF$/;"	e	enum:__anon72
em_driver	dev/e1000/if_em.c	/^static driver_t em_driver = {$/;"	v	file:
em_driver_version	dev/e1000/if_em.c	/^char em_driver_version[] = "7.3.8";$/;"	v
em_dsp_config	if_em_hw.h	/^} em_dsp_config;$/;"	t	typeref:enum:__anon79
em_dsp_config_activated	if_em_hw.h	/^    em_dsp_config_activated,$/;"	e	enum:__anon79
em_dsp_config_disabled	if_em_hw.h	/^    em_dsp_config_disabled = 0,$/;"	e	enum:__anon79
em_dsp_config_enabled	if_em_hw.h	/^    em_dsp_config_enabled,$/;"	e	enum:__anon79
em_dsp_config_undefined	if_em_hw.h	/^    em_dsp_config_undefined = 0xFF$/;"	e	enum:__anon79
em_eeprom_info	if_em_hw.h	/^struct em_eeprom_info {$/;"	s
em_eeprom_microwire	if_em_hw.h	/^    em_eeprom_microwire,$/;"	e	enum:__anon61
em_eeprom_spi	if_em_hw.h	/^    em_eeprom_spi,$/;"	e	enum:__anon61
em_eeprom_type	if_em_hw.h	/^} em_eeprom_type;$/;"	t	typeref:enum:__anon61
em_eeprom_uninitialized	if_em_hw.h	/^    em_eeprom_uninitialized = 0,$/;"	e	enum:__anon61
em_enable_intr	dev/e1000/if_em.c	/^em_enable_intr(struct adapter *adapter)$/;"	f	file:
em_enable_intr	if_em.c	/^em_enable_intr(struct adapter * adapter)$/;"	f	file:
em_enable_msix	dev/e1000/if_em.c	/^static int em_enable_msix = TRUE;$/;"	v	file:
em_enable_phy_wakeup	dev/e1000/if_em.c	/^em_enable_phy_wakeup(struct adapter *adapter)$/;"	f	file:
em_enable_vlans	if_em.c	/^em_enable_vlans(struct adapter *adapter)$/;"	f	file:
em_enable_wakeup	dev/e1000/if_em.c	/^em_enable_wakeup(device_t dev)$/;"	f	file:
em_encap	if_em.c	/^em_encap(struct adapter *adapter, struct mbuf *m_head)$/;"	f	file:
em_fc_default	if_em_hw.h	/^    em_fc_default = 0xFF$/;"	e	enum:__anon64
em_fc_full	if_em_hw.h	/^    em_fc_full = 3,$/;"	e	enum:__anon64
em_fc_none	if_em_hw.h	/^    em_fc_none = 0,$/;"	e	enum:__anon64
em_fc_rx_pause	if_em_hw.h	/^    em_fc_rx_pause = 1,$/;"	e	enum:__anon64
em_fc_tx_pause	if_em_hw.h	/^    em_fc_tx_pause = 2,$/;"	e	enum:__anon64
em_fc_type	if_em_hw.h	/^} em_fc_type;$/;"	t	typeref:enum:__anon64
em_ffe_config	if_em_hw.h	/^} em_ffe_config;$/;"	t	typeref:enum:__anon78
em_ffe_config_active	if_em_hw.h	/^    em_ffe_config_active,$/;"	e	enum:__anon78
em_ffe_config_blocked	if_em_hw.h	/^    em_ffe_config_blocked$/;"	e	enum:__anon78
em_ffe_config_enabled	if_em_hw.h	/^    em_ffe_config_enabled = 0,$/;"	e	enum:__anon78
em_fflt_entry	if_em_hw.h	/^struct em_fflt_entry {$/;"	s
em_ffmt_entry	if_em_hw.h	/^struct em_ffmt_entry {$/;"	s
em_ffvt_entry	if_em_hw.h	/^struct em_ffvt_entry {$/;"	s
em_fill_descriptors	if_em.c	/^em_fill_descriptors (u_int64_t address, $/;"	f	file:
em_fixup_rx	dev/e1000/if_em.c	/^em_fixup_rx(struct rx_ring *rxr)$/;"	f	file:
em_force_mac_fc	if_em_hw.c	/^em_force_mac_fc(struct em_hw *hw)$/;"	f
em_free_pci_resources	dev/e1000/if_em.c	/^em_free_pci_resources(struct adapter *adapter)$/;"	f	file:
em_free_pci_resources	if_em.c	/^em_free_pci_resources(struct adapter * adapter)$/;"	f	file:
em_free_receive_buffers	dev/e1000/if_em.c	/^em_free_receive_buffers(struct rx_ring *rxr)$/;"	f	file:
em_free_receive_structures	dev/e1000/if_em.c	/^em_free_receive_structures(struct adapter *adapter)$/;"	f	file:
em_free_receive_structures	if_em.c	/^em_free_receive_structures(struct adapter *adapter)$/;"	f	file:
em_free_transmit_buffers	dev/e1000/if_em.c	/^em_free_transmit_buffers(struct tx_ring *txr)$/;"	f	file:
em_free_transmit_structures	dev/e1000/if_em.c	/^em_free_transmit_structures(struct adapter *adapter)$/;"	f	file:
em_free_transmit_structures	if_em.c	/^em_free_transmit_structures(struct adapter * adapter)$/;"	f	file:
em_get_buf	if_em.c	/^em_get_buf(int i, struct adapter *adapter,$/;"	f	file:
em_get_bus_info	if_em_hw.c	/^em_get_bus_info(struct em_hw *hw)$/;"	f
em_get_cable_length	if_em_hw.c	/^em_get_cable_length(struct em_hw *hw,$/;"	f
em_get_hw_control	dev/e1000/if_em.c	/^em_get_hw_control(struct adapter *adapter)$/;"	f	file:
em_get_speed_and_duplex	if_em_hw.c	/^em_get_speed_and_duplex(struct em_hw *hw,$/;"	f
em_get_wakeup	dev/e1000/if_em.c	/^em_get_wakeup(device_t dev)$/;"	f	file:
em_handle_link	dev/e1000/if_em.c	/^em_handle_link(void *context, int pending)$/;"	f	file:
em_handle_que	dev/e1000/if_em.c	/^em_handle_que(void *context, int pending)$/;"	f	file:
em_handle_rx	dev/e1000/if_em.c	/^em_handle_rx(void *context, int pending)$/;"	f	file:
em_handle_tx	dev/e1000/if_em.c	/^em_handle_tx(void *context, int pending)$/;"	f	file:
em_hardware_init	if_em.c	/^em_hardware_init(struct adapter * adapter)$/;"	f	file:
em_hash_mc_addr	if_em_hw.c	/^em_hash_mc_addr(struct em_hw *hw,$/;"	f
em_hw	if_em_hw.h	/^struct em_hw {$/;"	s
em_hw_stats	if_em_hw.h	/^struct em_hw_stats {$/;"	s
em_id_led_init	if_em_hw.c	/^em_id_led_init(struct em_hw * hw)$/;"	f	file:
em_identify_hardware	dev/e1000/if_em.c	/^em_identify_hardware(struct adapter *adapter)$/;"	f	file:
em_identify_hardware	if_em.c	/^em_identify_hardware(struct adapter * adapter)$/;"	f	file:
em_igp_cable_length	if_em_hw.h	/^} em_igp_cable_length;$/;"	t	typeref:enum:__anon69
em_igp_cable_length_10	if_em_hw.h	/^    em_igp_cable_length_10  = 10,$/;"	e	enum:__anon69
em_igp_cable_length_100	if_em_hw.h	/^    em_igp_cable_length_100 = 100,$/;"	e	enum:__anon69
em_igp_cable_length_110	if_em_hw.h	/^    em_igp_cable_length_110 = 110,$/;"	e	enum:__anon69
em_igp_cable_length_120	if_em_hw.h	/^    em_igp_cable_length_120 = 120,$/;"	e	enum:__anon69
em_igp_cable_length_130	if_em_hw.h	/^    em_igp_cable_length_130 = 130,$/;"	e	enum:__anon69
em_igp_cable_length_140	if_em_hw.h	/^    em_igp_cable_length_140 = 140,$/;"	e	enum:__anon69
em_igp_cable_length_150	if_em_hw.h	/^    em_igp_cable_length_150 = 150,$/;"	e	enum:__anon69
em_igp_cable_length_160	if_em_hw.h	/^    em_igp_cable_length_160 = 160,$/;"	e	enum:__anon69
em_igp_cable_length_170	if_em_hw.h	/^    em_igp_cable_length_170 = 170,$/;"	e	enum:__anon69
em_igp_cable_length_180	if_em_hw.h	/^    em_igp_cable_length_180 = 180$/;"	e	enum:__anon69
em_igp_cable_length_20	if_em_hw.h	/^    em_igp_cable_length_20  = 20,$/;"	e	enum:__anon69
em_igp_cable_length_30	if_em_hw.h	/^    em_igp_cable_length_30  = 30,$/;"	e	enum:__anon69
em_igp_cable_length_40	if_em_hw.h	/^    em_igp_cable_length_40  = 40,$/;"	e	enum:__anon69
em_igp_cable_length_50	if_em_hw.h	/^    em_igp_cable_length_50  = 50,$/;"	e	enum:__anon69
em_igp_cable_length_60	if_em_hw.h	/^    em_igp_cable_length_60  = 60,$/;"	e	enum:__anon69
em_igp_cable_length_70	if_em_hw.h	/^    em_igp_cable_length_70  = 70,$/;"	e	enum:__anon69
em_igp_cable_length_80	if_em_hw.h	/^    em_igp_cable_length_80  = 80,$/;"	e	enum:__anon69
em_igp_cable_length_90	if_em_hw.h	/^    em_igp_cable_length_90  = 90,$/;"	e	enum:__anon69
em_igp_cable_length_table	if_em_hw.c	/^uint16_t em_igp_cable_length_table[IGP01E1000_AGC_LENGTH_TABLE_SIZE] =$/;"	v	file:
em_init	dev/e1000/if_em.c	/^em_init(void *arg)$/;"	f	file:
em_init	if_em.c	/^em_init(void *arg)$/;"	f	file:
em_init_eeprom_params	if_em_hw.c	/^em_init_eeprom_params(struct em_hw *hw)$/;"	f
em_init_hw	if_em_hw.c	/^em_init_hw(struct em_hw *hw)$/;"	f
em_init_locked	dev/e1000/if_em.c	/^em_init_locked(struct adapter *adapter)$/;"	f	file:
em_init_manageability	dev/e1000/if_em.c	/^em_init_manageability(struct adapter *adapter)$/;"	f	file:
em_init_rx_addrs	if_em_hw.c	/^em_init_rx_addrs(struct em_hw *hw)$/;"	f
em_initialize_receive_unit	dev/e1000/if_em.c	/^em_initialize_receive_unit(struct adapter *adapter)$/;"	f	file:
em_initialize_receive_unit	if_em.c	/^em_initialize_receive_unit(struct adapter * adapter)$/;"	f	file:
em_initialize_transmit_unit	dev/e1000/if_em.c	/^em_initialize_transmit_unit(struct adapter *adapter)$/;"	f	file:
em_initialize_transmit_unit	if_em.c	/^em_initialize_transmit_unit(struct adapter * adapter)$/;"	f	file:
em_insert_vlan_header	dev/e1000/if_em.h	/^	int		em_insert_vlan_header;$/;"	m	struct:adapter
em_insert_vlan_header	dev/e1000/if_lem.h	/^	int		em_insert_vlan_header;$/;"	m	struct:adapter
em_int_delay_info	dev/e1000/if_em.h	/^struct em_int_delay_info {$/;"	s
em_int_delay_info	dev/e1000/if_lem.h	/^struct em_int_delay_info {$/;"	s
em_int_delay_info	if_em.h	/^struct em_int_delay_info {$/;"	s
em_intr	if_em.c	/^em_intr(void *arg)$/;"	f	file:
em_io_read	if_em.c	/^em_io_read(struct em_hw *hw, unsigned long port)$/;"	f
em_io_write	if_em.c	/^em_io_write(struct em_hw *hw, unsigned long port, uint32_t value)$/;"	f
em_ioctl	dev/e1000/if_em.c	/^em_ioctl(struct ifnet *ifp, u_long command, caddr_t data)$/;"	f	file:
em_ioctl	if_em.c	/^em_ioctl(struct ifnet *ifp, u_long command, caddr_t data)$/;"	f	file:
em_ipv4_at_entry	if_em_hw.h	/^struct em_ipv4_at_entry {$/;"	s
em_ipv6_at_entry	if_em_hw.h	/^struct em_ipv6_at_entry {$/;"	s
em_irq_fast	dev/e1000/if_em.c	/^em_irq_fast(void *arg)$/;"	f	file:
em_is_valid_ether_addr	dev/e1000/if_em.c	/^em_is_valid_ether_addr(u8 *addr)$/;"	f	file:
em_is_valid_ether_addr	if_em.c	/^em_is_valid_ether_addr(u_int8_t *addr)$/;"	f	file:
em_led_func	dev/e1000/if_em.c	/^em_led_func(void *arg, int onoff)$/;"	f	file:
em_led_off	if_em_hw.c	/^em_led_off(struct em_hw *hw)$/;"	f
em_led_on	if_em_hw.c	/^em_led_on(struct em_hw *hw)$/;"	f
em_local_timer	dev/e1000/if_em.c	/^em_local_timer(void *arg)$/;"	f	file:
em_local_timer	if_em.c	/^em_local_timer(void *arg)$/;"	f	file:
em_lower_ee_clk	if_em_hw.c	/^em_lower_ee_clk(struct em_hw *hw,$/;"	f	file:
em_lower_mdi_clk	if_em_hw.c	/^em_lower_mdi_clk(struct em_hw *hw,$/;"	f	file:
em_mac_type	if_em_hw.h	/^} em_mac_type;$/;"	t	typeref:enum:__anon60
em_mc_addr_list_update	if_em_hw.c	/^em_mc_addr_list_update(struct em_hw *hw,$/;"	f
em_media_change	dev/e1000/if_em.c	/^em_media_change(struct ifnet *ifp)$/;"	f	file:
em_media_status	dev/e1000/if_em.c	/^em_media_status(struct ifnet *ifp, struct ifmediareq *ifmr)$/;"	f	file:
em_media_status	if_em.c	/^em_media_status(struct ifnet *ifp, struct ifmediareq *ifmr)$/;"	f
em_media_type	if_em_hw.h	/^} em_media_type;$/;"	t	typeref:enum:__anon62
em_media_type_copper	if_em_hw.h	/^    em_media_type_copper = 0,$/;"	e	enum:__anon62
em_media_type_fiber	if_em_hw.h	/^    em_media_type_fiber = 1,$/;"	e	enum:__anon62
em_media_type_internal_serdes	if_em_hw.h	/^    em_media_type_internal_serdes = 2,$/;"	e	enum:__anon62
em_methods	dev/e1000/if_em.c	/^static device_method_t em_methods[] = {$/;"	v	file:
em_mq_start	dev/e1000/if_em.c	/^em_mq_start(struct ifnet *ifp, struct mbuf *m)$/;"	f	file:
em_mq_start_locked	dev/e1000/if_em.c	/^em_mq_start_locked(struct ifnet *ifp, struct tx_ring *txr, struct mbuf *m)$/;"	f	file:
em_ms_auto	if_em_hw.h	/^    em_ms_auto$/;"	e	enum:__anon77
em_ms_force_master	if_em_hw.h	/^    em_ms_force_master,$/;"	e	enum:__anon77
em_ms_force_slave	if_em_hw.h	/^    em_ms_force_slave,$/;"	e	enum:__anon77
em_ms_hw_default	if_em_hw.h	/^    em_ms_hw_default = 0,$/;"	e	enum:__anon77
em_ms_type	if_em_hw.h	/^} em_ms_type;$/;"	t	typeref:enum:__anon77
em_msix_link	dev/e1000/if_em.c	/^em_msix_link(void *arg)$/;"	f	file:
em_msix_rx	dev/e1000/if_em.c	/^em_msix_rx(void *arg)$/;"	f	file:
em_msix_tx	dev/e1000/if_em.c	/^em_msix_tx(void *arg)$/;"	f	file:
em_mta_set	if_em_hw.c	/^em_mta_set(struct em_hw *hw,$/;"	f
em_num_eeprom_types	if_em_hw.h	/^    em_num_eeprom_types$/;"	e	enum:__anon61
em_num_macs	if_em_hw.h	/^    em_num_macs$/;"	e	enum:__anon60
em_num_media_types	if_em_hw.h	/^    em_num_media_types$/;"	e	enum:__anon62
em_osdep	if_em_osdep.h	/^struct em_osdep$/;"	s
em_pci_clear_mwi	if_em.c	/^em_pci_clear_mwi(struct em_hw *hw)$/;"	f
em_pci_set_mwi	if_em.c	/^em_pci_set_mwi(struct em_hw *hw)$/;"	f
em_phy_force_speed_duplex	if_em_hw.c	/^em_phy_force_speed_duplex(struct em_hw *hw)$/;"	f	file:
em_phy_get_info	if_em_hw.c	/^em_phy_get_info(struct em_hw *hw,$/;"	f
em_phy_hw_reset	if_em_hw.c	/^em_phy_hw_reset(struct em_hw *hw)$/;"	f
em_phy_igp	if_em_hw.h	/^    em_phy_igp,$/;"	e	enum:__anon76
em_phy_igp_get_info	if_em_hw.c	/^em_phy_igp_get_info(struct em_hw *hw,$/;"	f
em_phy_info	if_em_hw.h	/^struct em_phy_info {$/;"	s
em_phy_init_script	if_em_hw.c	/^em_phy_init_script(struct em_hw *hw)$/;"	f	file:
em_phy_m88	if_em_hw.h	/^    em_phy_m88 = 0,$/;"	e	enum:__anon76
em_phy_m88_get_info	if_em_hw.c	/^em_phy_m88_get_info(struct em_hw *hw,$/;"	f
em_phy_reset	if_em_hw.c	/^em_phy_reset(struct em_hw *hw)$/;"	f
em_phy_reset_dsp	if_em_hw.c	/^em_phy_reset_dsp(struct em_hw *hw)$/;"	f	file:
em_phy_setup_autoneg	if_em_hw.c	/^em_phy_setup_autoneg(struct em_hw *hw)$/;"	f
em_phy_stats	if_em_hw.h	/^struct em_phy_stats {$/;"	s
em_phy_type	if_em_hw.h	/^} em_phy_type;$/;"	t	typeref:enum:__anon76
em_phy_undefined	if_em_hw.h	/^    em_phy_undefined = 0xFF$/;"	e	enum:__anon76
em_polarity_reversal	if_em_hw.h	/^} em_polarity_reversal;$/;"	t	typeref:enum:__anon73
em_polarity_reversal_disabled	if_em_hw.h	/^    em_polarity_reversal_disabled,$/;"	e	enum:__anon73
em_polarity_reversal_enabled	if_em_hw.h	/^    em_polarity_reversal_enabled = 0,$/;"	e	enum:__anon73
em_polarity_reversal_undefined	if_em_hw.h	/^    em_polarity_reversal_undefined = 0xFF$/;"	e	enum:__anon73
em_poll	dev/e1000/if_em.c	/^em_poll(struct ifnet *ifp, enum poll_cmd cmd, int count)$/;"	f	file:
em_poll	dev/e1000/if_em.c	/^static poll_handler_t em_poll;$/;"	v	file:
em_print_debug_info	dev/e1000/if_em.c	/^em_print_debug_info(struct adapter *adapter)$/;"	f	file:
em_print_debug_info	if_em.c	/^em_print_debug_info(struct adapter *adapter)$/;"	f	file:
em_print_hw_stats	if_em.c	/^em_print_hw_stats(struct adapter *adapter)$/;"	f	file:
em_print_link_status	if_em.c	/^em_print_link_status(struct adapter * adapter)$/;"	f	file:
em_print_nvm_info	dev/e1000/if_em.c	/^em_print_nvm_info(struct adapter *adapter)$/;"	f	file:
em_probe	dev/e1000/if_em.c	/^em_probe(device_t dev)$/;"	f	file:
em_process_receive_interrupts	if_em.c	/^em_process_receive_interrupts(struct adapter * adapter, int count)$/;"	f	file:
em_qflush	dev/e1000/if_em.c	/^em_qflush(struct ifnet *ifp)$/;"	f	file:
em_raise_ee_clk	if_em_hw.c	/^em_raise_ee_clk(struct em_hw *hw,$/;"	f	file:
em_raise_mdi_clk	if_em_hw.c	/^em_raise_mdi_clk(struct em_hw *hw,$/;"	f	file:
em_rar	if_em_hw.h	/^struct em_rar {$/;"	s
em_rar_set	if_em_hw.c	/^em_rar_set(struct em_hw *hw,$/;"	f
em_read_eeprom	if_em_hw.c	/^em_read_eeprom(struct em_hw *hw,$/;"	f
em_read_mac_addr	if_em_hw.c	/^em_read_mac_addr(struct em_hw * hw)$/;"	f
em_read_part_num	if_em_hw.c	/^em_read_part_num(struct em_hw *hw,$/;"	f
em_read_pci_cfg	if_em.c	/^em_read_pci_cfg(struct em_hw *hw, uint32_t reg,$/;"	f
em_read_phy_reg	if_em_hw.c	/^em_read_phy_reg(struct em_hw *hw,$/;"	f
em_read_phy_reg_ex	if_em_hw.c	/^em_read_phy_reg_ex(struct em_hw *hw,$/;"	f
em_read_reg_io	if_em_hw.c	/^em_read_reg_io(struct em_hw *hw,$/;"	f
em_receive_checksum	dev/e1000/if_em.c	/^em_receive_checksum(struct e1000_rx_desc *rx_desc, struct mbuf *mp)$/;"	f	file:
em_receive_checksum	if_em.c	/^em_receive_checksum(struct adapter *adapter,$/;"	f	file:
em_refresh_mbufs	dev/e1000/if_em.c	/^em_refresh_mbufs(struct rx_ring *rxr, int limit)$/;"	f	file:
em_register_vlan	dev/e1000/if_em.c	/^em_register_vlan(void *arg, struct ifnet *ifp, u16 vtag)$/;"	f	file:
em_release_eeprom	if_em_hw.c	/^em_release_eeprom(struct em_hw *hw)$/;"	f	file:
em_release_hw_control	dev/e1000/if_em.c	/^em_release_hw_control(struct adapter *adapter)$/;"	f	file:
em_release_manageability	dev/e1000/if_em.c	/^em_release_manageability(struct adapter *adapter)$/;"	f	file:
em_reset	dev/e1000/if_em.c	/^em_reset(struct adapter *adapter)$/;"	f	file:
em_reset_adaptive	if_em_hw.c	/^em_reset_adaptive(struct em_hw *hw)$/;"	f
em_reset_hw	if_em_hw.c	/^em_reset_hw(struct em_hw *hw)$/;"	f
em_resume	dev/e1000/if_em.c	/^em_resume(device_t dev)$/;"	f	file:
em_rev_polarity	if_em_hw.h	/^} em_rev_polarity;$/;"	t	typeref:enum:__anon71
em_rev_polarity_normal	if_em_hw.h	/^    em_rev_polarity_normal = 0,$/;"	e	enum:__anon71
em_rev_polarity_reversed	if_em_hw.h	/^    em_rev_polarity_reversed,$/;"	e	enum:__anon71
em_rev_polarity_undefined	if_em_hw.h	/^    em_rev_polarity_undefined = 0xFF$/;"	e	enum:__anon71
em_rx_abs_int_delay_dflt	dev/e1000/if_em.c	/^static int em_rx_abs_int_delay_dflt = EM_TICKS_TO_USECS(EM_RADV);$/;"	v	file:
em_rx_abs_int_delay_dflt	if_em.c	/^static int em_rx_abs_int_delay_dflt = E1000_TICKS_TO_USECS(EM_RADV);$/;"	v	file:
em_rx_desc	if_em_hw.h	/^struct em_rx_desc {$/;"	s
em_rx_discard	dev/e1000/if_em.c	/^em_rx_discard(struct rx_ring *rxr, int i)$/;"	f	file:
em_rx_int_delay_dflt	dev/e1000/if_em.c	/^static int em_rx_int_delay_dflt = EM_TICKS_TO_USECS(EM_RDTR);$/;"	v	file:
em_rx_int_delay_dflt	if_em.c	/^static int em_rx_int_delay_dflt = E1000_TICKS_TO_USECS(EM_RDTR);$/;"	v	file:
em_rx_process_limit	dev/e1000/if_em.c	/^static int em_rx_process_limit = 100;$/;"	v	file:
em_rxd	dev/e1000/if_em.c	/^static int em_rxd = EM_DEFAULT_RXD;$/;"	v	file:
em_rxeof	dev/e1000/if_em.c	/^em_rxeof(struct rx_ring *rxr, int count, int *done)$/;"	f	file:
em_set_d3_lplu_state	if_em_hw.c	/^em_set_d3_lplu_state(struct em_hw *hw,$/;"	f
em_set_flowcntl	dev/e1000/if_em.c	/^em_set_flowcntl(SYSCTL_HANDLER_ARGS)$/;"	f	file:
em_set_mac_type	if_em_hw.c	/^em_set_mac_type(struct em_hw *hw)$/;"	f
em_set_media_type	if_em_hw.c	/^em_set_media_type(struct em_hw *hw)$/;"	f
em_set_multi	dev/e1000/if_em.c	/^em_set_multi(struct adapter *adapter)$/;"	f	file:
em_set_multi	if_em.c	/^em_set_multi(struct adapter * adapter)$/;"	f	file:
em_set_phy_type	if_em_hw.c	/^em_set_phy_type(struct em_hw *hw)$/;"	f
em_set_promisc	dev/e1000/if_em.c	/^em_set_promisc(struct adapter *adapter)$/;"	f	file:
em_set_promisc	if_em.c	/^em_set_promisc(struct adapter * adapter)$/;"	f	file:
em_set_sysctl_value	dev/e1000/if_em.c	/^em_set_sysctl_value(struct adapter *adapter, const char *name,$/;"	f	file:
em_set_vco_speed	if_em_hw.c	/^em_set_vco_speed(struct em_hw *hw)$/;"	f	file:
em_setup_copper_link	if_em_hw.c	/^em_setup_copper_link(struct em_hw *hw)$/;"	f	file:
em_setup_fiber_serdes_link	if_em_hw.c	/^em_setup_fiber_serdes_link(struct em_hw *hw)$/;"	f	file:
em_setup_interface	dev/e1000/if_em.c	/^em_setup_interface(device_t dev, struct adapter *adapter)$/;"	f	file:
em_setup_interface	if_em.c	/^em_setup_interface(device_t dev, struct adapter * adapter)$/;"	f	file:
em_setup_led	if_em_hw.c	/^em_setup_led(struct em_hw *hw)$/;"	f
em_setup_link	if_em_hw.c	/^em_setup_link(struct em_hw *hw)$/;"	f
em_setup_msix	dev/e1000/if_em.c	/^em_setup_msix(struct adapter *adapter)$/;"	f	file:
em_setup_receive_ring	dev/e1000/if_em.c	/^em_setup_receive_ring(struct rx_ring *rxr)$/;"	f	file:
em_setup_receive_structures	dev/e1000/if_em.c	/^em_setup_receive_structures(struct adapter *adapter)$/;"	f	file:
em_setup_receive_structures	if_em.c	/^em_setup_receive_structures(struct adapter * adapter)$/;"	f	file:
em_setup_transmit_ring	dev/e1000/if_em.c	/^em_setup_transmit_ring(struct tx_ring *txr)$/;"	f	file:
em_setup_transmit_structures	dev/e1000/if_em.c	/^em_setup_transmit_structures(struct adapter *adapter)$/;"	f	file:
em_setup_transmit_structures	if_em.c	/^em_setup_transmit_structures(struct adapter * adapter)$/;"	f	file:
em_setup_vlan_hw_support	dev/e1000/if_em.c	/^em_setup_vlan_hw_support(struct adapter *adapter)$/;"	f	file:
em_shift_in_ee_bits	if_em_hw.c	/^em_shift_in_ee_bits(struct em_hw *hw,$/;"	f	file:
em_shift_in_mdi_bits	if_em_hw.c	/^em_shift_in_mdi_bits(struct em_hw *hw)$/;"	f	file:
em_shift_out_ee_bits	if_em_hw.c	/^em_shift_out_ee_bits(struct em_hw *hw,$/;"	f	file:
em_shift_out_mdi_bits	if_em_hw.c	/^em_shift_out_mdi_bits(struct em_hw *hw,$/;"	f	file:
em_shutdown	dev/e1000/if_em.c	/^em_shutdown(device_t dev)$/;"	f	file:
em_smart_pwr_down	dev/e1000/if_em.c	/^static int em_smart_pwr_down = FALSE;$/;"	v	file:
em_smartspeed	if_em.c	/^em_smartspeed(struct adapter *adapter)$/;"	f	file:
em_speed_duplex_type	if_em_hw.h	/^} em_speed_duplex_type;$/;"	t	typeref:enum:__anon63
em_spi_eeprom_ready	if_em_hw.c	/^em_spi_eeprom_ready(struct em_hw *hw)$/;"	f
em_standby_eeprom	if_em_hw.c	/^em_standby_eeprom(struct em_hw *hw)$/;"	f	file:
em_start	dev/e1000/if_em.c	/^em_start(struct ifnet *ifp)$/;"	f	file:
em_start	if_em.c	/^em_start(struct ifnet *ifp)$/;"	f	file:
em_start_locked	dev/e1000/if_em.c	/^em_start_locked(struct ifnet *ifp, struct tx_ring *txr)$/;"	f	file:
em_stop	dev/e1000/if_em.c	/^em_stop(void *arg)$/;"	f	file:
em_stop	if_em.c	/^em_stop(void *arg)$/;"	f	file:
em_strings	dev/e1000/if_em.c	/^static char *em_strings[] = {$/;"	v	file:
em_suspend	dev/e1000/if_em.c	/^em_suspend(device_t dev)$/;"	f	file:
em_sysctl_debug_info	dev/e1000/if_em.c	/^em_sysctl_debug_info(SYSCTL_HANDLER_ARGS)$/;"	f	file:
em_sysctl_eee	dev/e1000/if_em.c	/^em_sysctl_eee(SYSCTL_HANDLER_ARGS)$/;"	f	file:
em_sysctl_int_delay	dev/e1000/if_em.c	/^em_sysctl_int_delay(SYSCTL_HANDLER_ARGS)$/;"	f	file:
em_sysctl_nvm_info	dev/e1000/if_em.c	/^em_sysctl_nvm_info(SYSCTL_HANDLER_ARGS)$/;"	f	file:
em_sysctl_reg_handler	dev/e1000/if_em.c	/^em_sysctl_reg_handler(SYSCTL_HANDLER_ARGS)$/;"	f	file:
em_tbi_adjust_stats	if_em_hw.c	/^em_tbi_adjust_stats(struct em_hw *hw,$/;"	f
em_transmit_checksum_setup	dev/e1000/if_em.c	/^em_transmit_checksum_setup(struct tx_ring *txr, struct mbuf *mp, int ip_off,$/;"	f	file:
em_transmit_checksum_setup	if_em.c	/^em_transmit_checksum_setup(struct adapter * adapter,$/;"	f	file:
em_tso_setup	dev/e1000/if_em.c	/^em_tso_setup(struct tx_ring *txr, struct mbuf *mp, int ip_off,$/;"	f	file:
em_tx_abs_int_delay_dflt	dev/e1000/if_em.c	/^static int em_tx_abs_int_delay_dflt = EM_TICKS_TO_USECS(EM_TADV);$/;"	v	file:
em_tx_abs_int_delay_dflt	if_em.c	/^static int em_tx_abs_int_delay_dflt = E1000_TICKS_TO_USECS(EM_TADV);$/;"	v	file:
em_tx_desc	if_em_hw.h	/^struct em_tx_desc {$/;"	s
em_tx_int_delay_dflt	dev/e1000/if_em.c	/^static int em_tx_int_delay_dflt = EM_TICKS_TO_USECS(EM_TIDV);$/;"	v	file:
em_tx_int_delay_dflt	if_em.c	/^static int em_tx_int_delay_dflt = E1000_TICKS_TO_USECS(EM_TIDV);$/;"	v	file:
em_txd	dev/e1000/if_em.c	/^static int em_txd = EM_DEFAULT_TXD;$/;"	v	file:
em_txeof	dev/e1000/if_em.c	/^em_txeof(struct tx_ring *txr)$/;"	f	file:
em_undefined	if_em_hw.h	/^    em_undefined = 0,$/;"	e	enum:__anon60
em_unregister_vlan	dev/e1000/if_em.c	/^em_unregister_vlan(void *arg, struct ifnet *ifp, u16 vtag)$/;"	f	file:
em_update_adaptive	if_em_hw.c	/^em_update_adaptive(struct em_hw *hw)$/;"	f
em_update_eeprom_checksum	if_em_hw.c	/^em_update_eeprom_checksum(struct em_hw *hw)$/;"	f
em_update_link_status	dev/e1000/if_em.c	/^em_update_link_status(struct adapter *adapter)$/;"	f	file:
em_update_stats_counters	dev/e1000/if_em.c	/^em_update_stats_counters(struct adapter *adapter)$/;"	f	file:
em_update_stats_counters	if_em.c	/^em_update_stats_counters(struct adapter *adapter)$/;"	f	file:
em_validate_eeprom_checksum	if_em_hw.c	/^em_validate_eeprom_checksum(struct em_hw *hw)$/;"	f
em_validate_mdi_setting	if_em_hw.c	/^em_validate_mdi_setting(struct em_hw *hw)$/;"	f
em_vendor_info_array	dev/e1000/if_em.c	/^static em_vendor_info_t em_vendor_info_array[] =$/;"	v	file:
em_vendor_info_t	dev/e1000/if_em.h	/^} em_vendor_info_t;$/;"	t	typeref:struct:_em_vendor_info_t
em_vendor_info_t	dev/e1000/if_lem.h	/^} em_vendor_info_t;$/;"	t	typeref:struct:_em_vendor_info_t
em_wait_autoneg	if_em_hw.c	/^em_wait_autoneg(struct em_hw *hw)$/;"	f
em_watchdog	if_em.c	/^em_watchdog(struct ifnet *ifp)$/;"	f	file:
em_write_eeprom	if_em_hw.c	/^em_write_eeprom(struct em_hw *hw,$/;"	f
em_write_eeprom_microwire	if_em_hw.c	/^em_write_eeprom_microwire(struct em_hw *hw,$/;"	f
em_write_eeprom_spi	if_em_hw.c	/^em_write_eeprom_spi(struct em_hw *hw,$/;"	f
em_write_pci_cfg	if_em.c	/^em_write_pci_cfg(struct em_hw *hw,$/;"	f
em_write_phy_reg	if_em_hw.c	/^em_write_phy_reg(struct em_hw *hw,$/;"	f
em_write_phy_reg_ex	if_em_hw.c	/^em_write_phy_reg_ex(struct em_hw *hw,$/;"	f
em_write_reg_io	if_em_hw.c	/^em_write_reg_io(struct em_hw *hw,$/;"	f
em_write_vfta	if_em_hw.c	/^em_write_vfta(struct em_hw *hw,$/;"	f
em_xmit	dev/e1000/if_em.c	/^em_xmit(struct tx_ring *txr, struct mbuf **m_headp)$/;"	f	file:
enable_aim	dev/e1000/if_igb.h	/^	int		enable_aim;$/;"	m	struct:adapter
errors	dev/e1000/e1000_hw.h	/^	u8  errors;  \/* Descriptor Errors *\/$/;"	m	struct:e1000_rx_desc
errors	if_em_hw.h	/^    uint8_t errors;      \/* Descriptor Errors *\/$/;"	m	struct:em_rx_desc
eth_flags	dev/e1000/e1000_hw.h	/^	struct sfp_e1000_flags eth_flags;$/;"	m	struct:e1000_dev_spec_82575	typeref:struct:e1000_dev_spec_82575::sfp_e1000_flags
ether_add_multi	if_compat.c	/^ether_add_multi(struct ifnet *ifp, const struct sockaddr *address)$/;"	f
ether_delete_multi	if_compat.c	/^ether_delete_multi(struct ifnet *ifp, struct ifmultiaddr *ifma)$/;"	f	file:
ether_find_multi	if_compat.c	/^ether_find_multi(struct ifnet *ifp, const struct sockaddr *_address)$/;"	f	file:
ether_ifattach	if_compat.c	/^ether_ifattach(struct ifnet *ifp, const uint8 *etheraddr)$/;"	f
ether_ifdetach	if_compat.c	/^ether_ifdetach(struct ifnet *ifp)$/;"	f
ether_input	if_compat.c	/^ether_input(struct ifnet *ifp, struct mbuf *m)$/;"	f	file:
ether_ioctl	if_compat.h	301;"	d
ether_output	if_compat.h	267;"	d
ether_rem_multi	if_compat.c	/^ether_rem_multi(struct ifnet *ifp, const struct sockaddr *address)$/;"	f
ether_vlan_header	if_compat.h	/^struct ether_vlan_header$/;"	s
event_flags	if_em.h	/^	volatile int32	event_flags;$/;"	m	struct:adapter
event_handler	if_em.c	/^event_handler(void *cookie)$/;"	f	file:
event_sem	if_em.h	/^	sem_id			event_sem;$/;"	m	struct:adapter
event_thread	if_em.h	/^	thread_id		event_thread;$/;"	m	struct:adapter
evl_dhost	if_compat.h	/^	uint8  evl_dhost[ETHER_ADDR_LEN];$/;"	m	struct:ether_vlan_header
evl_encap_proto	if_compat.h	/^	uint16 evl_encap_proto;$/;"	m	struct:ether_vlan_header
evl_proto	if_compat.h	/^	uint16 evl_proto;$/;"	m	struct:ether_vlan_header
evl_shost	if_compat.h	/^	uint8  evl_shost[ETHER_ADDR_LEN];$/;"	m	struct:ether_vlan_header
evl_tag	if_compat.h	/^	uint16 evl_tag;$/;"	m	struct:ether_vlan_header
ext_buf	if_compat.h	/^	void *ext_buf;$/;"	m	struct:m_ext
extended_10bt_distance	if_em_hw.h	/^    em_10bt_ext_dist_enable extended_10bt_distance;$/;"	m	struct:em_phy_info
false	dev/e1000/e1000_osdep.h	79;"	d
fc	dev/e1000/e1000_hw.h	/^	struct e1000_fc_info   fc;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_fc_info
fc	dev/e1000/if_em.h	/^	u16		fc;$/;"	m	struct:adapter
fc	dev/e1000/if_igb.h	/^	u16		fc;$/;"	m	struct:adapter
fc	if_em_hw.h	/^    em_fc_type fc;$/;"	m	struct:em_hw
fc_high_water	if_em_hw.h	/^    uint16_t fc_high_water;$/;"	m	struct:em_hw
fc_low_water	if_em_hw.h	/^    uint16_t fc_low_water;$/;"	m	struct:em_hw
fc_pause_time	if_em_hw.h	/^    uint16_t fc_pause_time;$/;"	m	struct:em_hw
fc_send_xon	if_em_hw.h	/^    boolean_t fc_send_xon;$/;"	m	struct:em_hw
fc_setting	dev/e1000/if_lem.h	/^	uint32_t	fc_setting;$/;"	m	struct:adapter
fc_strict_ieee	if_em_hw.h	/^    boolean_t fc_strict_ieee;$/;"	m	struct:em_hw
fcruc	dev/e1000/e1000_hw.h	/^	u64 fcruc;$/;"	m	struct:e1000_hw_stats
fcruc	if_em_hw.h	/^    uint64_t fcruc;$/;"	m	struct:em_hw_stats
ffe_config	dev/e1000/e1000_hw.h	/^	enum e1000_ffe_config ffe_config;$/;"	m	struct:e1000_dev_spec_82541	typeref:enum:e1000_dev_spec_82541::e1000_ffe_config
ffe_config_state	if_em_hw.h	/^    em_ffe_config ffe_config_state;$/;"	m	struct:em_hw
fields	dev/e1000/e1000_82575.h	/^		} fields;$/;"	m	union:e1000_adv_context_desc::__anon33	typeref:struct:e1000_adv_context_desc::__anon33::__anon34
fields	dev/e1000/e1000_82575.h	/^		} fields;$/;"	m	union:e1000_adv_context_desc::__anon35	typeref:struct:e1000_adv_context_desc::__anon35::__anon36
fields	dev/e1000/e1000_hw.h	/^		} fields;$/;"	m	union:e1000_context_desc::__anon22	typeref:struct:e1000_context_desc::__anon22::__anon23
fields	dev/e1000/e1000_hw.h	/^		} fields;$/;"	m	union:e1000_data_desc::__anon26	typeref:struct:e1000_data_desc::__anon26::__anon27
fields	dev/e1000/e1000_hw.h	/^		} fields;$/;"	m	union:e1000_tx_desc::__anon16	typeref:struct:e1000_tx_desc::__anon16::__anon17
fields	if_em_hw.h	/^        } fields;$/;"	m	union:em_context_desc::__anon88	typeref:struct:em_context_desc::__anon88::__anon89
fields	if_em_hw.h	/^        } fields;$/;"	m	union:em_data_desc::__anon92	typeref:struct:em_data_desc::__anon92::__anon93
fields	if_em_hw.h	/^        } fields;$/;"	m	union:em_tx_desc::__anon82	typeref:struct:em_tx_desc::__anon82::__anon83
find_device	driver.c	/^find_device(const char* name)$/;"	f
flags	dev/e1000/e1000_hw.h	/^		} flags;$/;"	m	union:e1000_data_desc::__anon24	typeref:struct:e1000_data_desc::__anon24::__anon25
flags	dev/e1000/e1000_hw.h	/^		} flags;$/;"	m	union:e1000_tx_desc::__anon14	typeref:struct:e1000_tx_desc::__anon14::__anon15
flags	if_em_hw.h	/^        } flags;$/;"	m	union:em_data_desc::__anon90	typeref:struct:em_data_desc::__anon90::__anon91
flags	if_em_hw.h	/^        } flags;$/;"	m	union:em_tx_desc::__anon80	typeref:struct:em_tx_desc::__anon80::__anon81
flash	dev/e1000/if_em.h	/^	struct resource *flash;$/;"	m	struct:adapter	typeref:struct:adapter::resource
flash	dev/e1000/if_lem.h	/^	struct resource *flash;$/;"	m	struct:adapter	typeref:struct:adapter::resource
flash_address	dev/e1000/e1000_hw.h	/^	u8 *flash_address;$/;"	m	struct:e1000_hw
flash_address	dev/e1000/e1000_vf.h	/^	u8 *flash_address;$/;"	m	struct:e1000_hw
flash_bank_size	dev/e1000/e1000_hw.h	/^	u32 flash_bank_size;$/;"	m	struct:e1000_nvm_info
flash_base_addr	dev/e1000/e1000_hw.h	/^	u32 flash_base_addr;$/;"	m	struct:e1000_nvm_info
flash_bus_space_handle	dev/e1000/e1000_osdep.h	/^	bus_space_handle_t flash_bus_space_handle;$/;"	m	struct:e1000_osdep
flash_bus_space_tag	dev/e1000/e1000_osdep.h	/^	bus_space_tag_t    flash_bus_space_tag;$/;"	m	struct:e1000_osdep
flcdone	dev/e1000/e1000_ich8lan.c	/^		u16 flcdone:1; \/* bit 0 Flash Cycle Done *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flcerr	dev/e1000/e1000_ich8lan.c	/^		u16 flcerr:1; \/* bit 1 Flash Cycle Error *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flcgo	dev/e1000/e1000_ich8lan.c	/^		u16 flcgo:1;   \/* 0 Flash Cycle Go *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
flcinprog	dev/e1000/e1000_ich8lan.c	/^		u16 flcinprog:1; \/* bit 5 flash cycle in Progress *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flcycle	dev/e1000/e1000_ich8lan.c	/^		u16 flcycle:2;   \/* 2:1 Flash Cycle *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
fldbcount	dev/e1000/e1000_ich8lan.c	/^		u16 fldbcount:2;   \/* 9:8 Flash Data Byte Count *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
fldesvalid	dev/e1000/e1000_ich8lan.c	/^		u16 fldesvalid:1; \/* bit 14 Flash Descriptor Valid *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flockdn	dev/e1000/e1000_ich8lan.c	/^		u16 flockdn:1; \/* bit 15 Flash Config Lock-Down *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
flockdn	dev/e1000/e1000_ich8lan.c	/^		u16 flockdn:6;   \/* 15:10 Reserved *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
fmp	dev/e1000/if_em.h	/^	struct mbuf		*fmp;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::mbuf
fmp	dev/e1000/if_igb.h	/^	struct mbuf	       *fmp;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::mbuf
fmp	dev/e1000/if_lem.h	/^	struct mbuf	       *fmp;$/;"	m	struct:adapter	typeref:struct:adapter::mbuf
fmp	if_em.h	/^	struct mbuf        *fmp;$/;"	m	struct:adapter	typeref:struct:adapter::mbuf
force_speed_duplex	dev/e1000/e1000_hw.h	/^	s32  (*force_speed_duplex)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
forced_speed_duplex	dev/e1000/e1000_hw.h	/^	u8  forced_speed_duplex;$/;"	m	struct:e1000_mac_info
forced_speed_duplex	if_em_hw.h	/^    uint8_t forced_speed_duplex;$/;"	m	struct:em_hw
free	device.c	40;"	d	file:
free	if_compat.c	26;"	d	file:
free	if_em_osdep.c	24;"	d	file:
free	if_em_osdep.h	167;"	d
free	if_em_osdep.h	168;"	d
func	dev/e1000/e1000_hw.h	/^	u16 func;$/;"	m	struct:e1000_bus_info
func	timer.c	/^	timer_function	func;$/;"	m	struct:timer_info	file:
gDevList	driver.c	/^pci_info *gDevList[MAX_CARDS];$/;"	v
gDevNameList	driver.c	/^char* gDevNameList[MAX_CARDS + 1];$/;"	v
gDeviceHooks	driver.c	/^gDeviceHooks = {$/;"	v
gOpenMask	device.c	/^static int32 gOpenMask = 0;$/;"	v	file:
gPci	driver.c	/^pci_module_info *gPci;$/;"	v
get_bus_info	dev/e1000/e1000_hw.h	/^	s32  (*get_bus_info)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
get_bus_info	dev/e1000/e1000_vf.h	/^	s32  (*get_bus_info)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
get_cable_length	dev/e1000/e1000_hw.h	/^	s32  (*get_cable_length)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
get_cfg_done	dev/e1000/e1000_hw.h	/^	s32  (*get_cfg_done)(struct e1000_hw *hw);$/;"	m	struct:e1000_phy_operations
get_info	dev/e1000/e1000_hw.h	/^	s32  (*get_info)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
get_link_status	dev/e1000/e1000_hw.h	/^	bool get_link_status;$/;"	m	struct:e1000_mac_info
get_link_status	dev/e1000/e1000_vf.h	/^	bool get_link_status;$/;"	m	struct:e1000_mac_info
get_link_status	if_em_hw.h	/^    boolean_t get_link_status;$/;"	m	struct:em_hw
get_link_up_info	dev/e1000/e1000_hw.h	/^	s32  (*get_link_up_info)(struct e1000_hw *, u16 *, u16 *);$/;"	m	struct:e1000_mac_operations
get_link_up_info	dev/e1000/e1000_vf.h	/^	s32  (*get_link_up_info)(struct e1000_hw *, u16 *, u16 *);$/;"	m	struct:e1000_mac_operations
global_device_reset	dev/e1000/e1000_hw.h	/^	bool global_device_reset;$/;"	m	struct:e1000_dev_spec_82575
global_quad_port_a	dev/e1000/if_em.c	/^static int global_quad_port_a = 0;$/;"	v	file:
global_quad_port_a	dev/e1000/if_lem.c	/^static int global_quad_port_a = 0;$/;"	v	file:
gmrag	dev/e1000/e1000_ich8lan.c	/^		u32 gmrag:8; \/* 23:16 GbE Master Read Access Grant *\/$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc	file:
gmwag	dev/e1000/e1000_ich8lan.c	/^		u32 gmwag:8; \/* 31:24 GbE Master Write Access Grant *\/$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc	file:
gorc	dev/e1000/e1000_hw.h	/^	u64 gorc;$/;"	m	struct:e1000_hw_stats
gorc	dev/e1000/e1000_hw.h	/^	u64 gorc;$/;"	m	struct:e1000_vf_stats
gorc	dev/e1000/e1000_vf.h	/^	u64 gorc;$/;"	m	struct:e1000_vf_stats
gorch	if_em_hw.h	/^    uint64_t gorch;$/;"	m	struct:em_hw_stats
gorcl	if_em_hw.h	/^    uint64_t gorcl;$/;"	m	struct:em_hw_stats
gorlbc	dev/e1000/e1000_hw.h	/^	u64 gorlbc;$/;"	m	struct:e1000_vf_stats
gorlbc	dev/e1000/e1000_vf.h	/^	u64 gorlbc;$/;"	m	struct:e1000_vf_stats
gotc	dev/e1000/e1000_hw.h	/^	u64 gotc;$/;"	m	struct:e1000_hw_stats
gotc	dev/e1000/e1000_hw.h	/^	u64 gotc;$/;"	m	struct:e1000_vf_stats
gotc	dev/e1000/e1000_vf.h	/^	u64 gotc;$/;"	m	struct:e1000_vf_stats
gotch	if_em_hw.h	/^    uint64_t gotch;$/;"	m	struct:em_hw_stats
gotcl	if_em_hw.h	/^    uint64_t gotcl;$/;"	m	struct:em_hw_stats
gotlbc	dev/e1000/e1000_hw.h	/^	u64 gotlbc;$/;"	m	struct:e1000_vf_stats
gotlbc	dev/e1000/e1000_vf.h	/^	u64 gotlbc;$/;"	m	struct:e1000_vf_stats
gprc	dev/e1000/e1000_hw.h	/^	u64 gprc;$/;"	m	struct:e1000_hw_stats
gprc	dev/e1000/e1000_hw.h	/^	u64 gprc;$/;"	m	struct:e1000_vf_stats
gprc	dev/e1000/e1000_vf.h	/^	u64 gprc;$/;"	m	struct:e1000_vf_stats
gprc	if_em_hw.h	/^    uint64_t gprc;$/;"	m	struct:em_hw_stats
gprlbc	dev/e1000/e1000_hw.h	/^	u64 gprlbc;$/;"	m	struct:e1000_vf_stats
gprlbc	dev/e1000/e1000_vf.h	/^	u64 gprlbc;$/;"	m	struct:e1000_vf_stats
gptc	dev/e1000/e1000_hw.h	/^	u64 gptc;$/;"	m	struct:e1000_hw_stats
gptc	dev/e1000/e1000_hw.h	/^	u64 gptc;$/;"	m	struct:e1000_vf_stats
gptc	dev/e1000/e1000_vf.h	/^	u64 gptc;$/;"	m	struct:e1000_vf_stats
gptc	if_em_hw.h	/^    uint64_t gptc;$/;"	m	struct:em_hw_stats
gptlbc	dev/e1000/e1000_hw.h	/^	u64 gptlbc;$/;"	m	struct:e1000_vf_stats
gptlbc	dev/e1000/e1000_vf.h	/^	u64 gptlbc;$/;"	m	struct:e1000_vf_stats
grra	dev/e1000/e1000_ich8lan.c	/^		u32 grra:8; \/* 0:7 GbE region Read Access *\/$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc	file:
grwa	dev/e1000/e1000_ich8lan.c	/^		u32 grwa:8; \/* 8:15 GbE region Write Access *\/$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc	file:
has_amt	dev/e1000/if_em.h	/^	bool		has_amt;$/;"	m	struct:adapter
has_amt	dev/e1000/if_lem.h	/^	bool		has_amt;$/;"	m	struct:adapter
has_fwsm	dev/e1000/e1000_hw.h	/^	bool has_fwsm;$/;"	m	struct:e1000_mac_info
has_manage	dev/e1000/if_em.h	/^	bool		has_manage;$/;"	m	struct:adapter
has_manage	dev/e1000/if_igb.h	/^	int		has_manage;$/;"	m	struct:adapter
has_manage	dev/e1000/if_lem.h	/^	bool		has_manage;$/;"	m	struct:adapter
hdr_addr	dev/e1000/e1000_82575.h	/^		__le64 hdr_addr; \/* Header buffer address *\/$/;"	m	struct:e1000_adv_rx_desc::__anon37
hdr_addr	dev/e1000/e1000_vf.h	/^		u64 hdr_addr;             \/* Header buffer address *\/$/;"	m	struct:e1000_adv_rx_desc::__anon47
hdr_info	dev/e1000/e1000_82575.h	/^					__le16 hdr_info;$/;"	m	struct:e1000_adv_rx_desc::__anon38::__anon39::__anon40::__anon41
hdr_info	dev/e1000/e1000_vf.h	/^					u16 hdr_info;$/;"	m	struct:e1000_adv_rx_desc::__anon48::__anon49::__anon50::__anon51
hdr_len	dev/e1000/e1000_hw.h	/^			u8 hdr_len;  \/* Header length *\/$/;"	m	struct:e1000_context_desc::__anon22::__anon23
hdr_len	if_em_hw.h	/^            uint8_t hdr_len;    \/* Header length *\/$/;"	m	struct:em_context_desc::__anon88::__anon89
hdr_split	dev/e1000/if_igb.h	/^	bool			hdr_split;$/;"	m	struct:rx_ring
header_status	dev/e1000/e1000_hw.h	/^			__le16 header_status;$/;"	m	struct:e1000_rx_desc_packet_split::__anon8::__anon13
hgorc	dev/e1000/e1000_hw.h	/^	u64 hgorc;$/;"	m	struct:e1000_hw_stats
hgotc	dev/e1000/e1000_hw.h	/^	u64 hgotc;$/;"	m	struct:e1000_hw_stats
hgptc	dev/e1000/e1000_hw.h	/^	u64 hgptc;$/;"	m	struct:e1000_hw_stats
hi_dword	dev/e1000/e1000_82575.h	/^			} hi_dword;$/;"	m	struct:e1000_adv_rx_desc::__anon38::__anon39	typeref:union:e1000_adv_rx_desc::__anon38::__anon39::__anon42
hi_dword	dev/e1000/e1000_hw.h	/^			} hi_dword;$/;"	m	struct:e1000_rx_desc_extended::__anon2::__anon3	typeref:union:e1000_rx_desc_extended::__anon2::__anon3::__anon4
hi_dword	dev/e1000/e1000_hw.h	/^			} hi_dword;$/;"	m	struct:e1000_rx_desc_packet_split::__anon8::__anon9	typeref:union:e1000_rx_desc_packet_split::__anon8::__anon9::__anon10
hi_dword	dev/e1000/e1000_vf.h	/^			} hi_dword;$/;"	m	struct:e1000_adv_rx_desc::__anon48::__anon49	typeref:union:e1000_adv_rx_desc::__anon48::__anon49::__anon52
high	if_em_hw.h	/^    volatile uint32_t high;     \/* receive address high *\/$/;"	m	struct:em_rar
high_water	dev/e1000/e1000_hw.h	/^	u32 high_water;  \/* Flow control high-water mark *\/$/;"	m	struct:e1000_fc_info
hmap	dev/e1000/if_igb.h	/^	bus_dmamap_t	hmap;	\/* bus_dma map for header *\/$/;"	m	struct:igb_rx_buf
hrmpc	dev/e1000/e1000_hw.h	/^	u64 hrmpc;$/;"	m	struct:e1000_hw_stats
hs_rss	dev/e1000/e1000_82575.h	/^				} hs_rss;$/;"	m	union:e1000_adv_rx_desc::__anon38::__anon39::__anon40	typeref:struct:e1000_adv_rx_desc::__anon38::__anon39::__anon40::__anon41
hs_rss	dev/e1000/e1000_vf.h	/^				} hs_rss;$/;"	m	union:e1000_adv_rx_desc::__anon48::__anon49::__anon50	typeref:struct:e1000_adv_rx_desc::__anon48::__anon49::__anon50::__anon51
hsf_ctrl	dev/e1000/e1000_ich8lan.c	/^	} hsf_ctrl;$/;"	m	union:ich8_hws_flash_ctrl	typeref:struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
hsf_flregacc	dev/e1000/e1000_ich8lan.c	/^	} hsf_flregacc;$/;"	m	union:ich8_hws_flash_regacc	typeref:struct:ich8_hws_flash_regacc::ich8_flracc	file:
hsf_status	dev/e1000/e1000_ich8lan.c	/^	} hsf_status;$/;"	m	union:ich8_hws_flash_status	typeref:struct:ich8_hws_flash_status::ich8_hsfsts	file:
htag	dev/e1000/if_igb.h	/^	bus_dma_tag_t		htag;		\/* dma tag for rx head *\/$/;"	m	struct:rx_ring
htcbdpc	dev/e1000/e1000_hw.h	/^	u64 htcbdpc;$/;"	m	struct:e1000_hw_stats
htdpmc	dev/e1000/e1000_hw.h	/^	u64 htdpmc;$/;"	m	struct:e1000_hw_stats
hw	dev/e1000/if_em.h	/^	struct e1000_hw	hw;$/;"	m	struct:adapter	typeref:struct:adapter::e1000_hw
hw	dev/e1000/if_igb.h	/^	struct e1000_hw	hw;$/;"	m	struct:adapter	typeref:struct:adapter::e1000_hw
hw	dev/e1000/if_lem.h	/^	struct e1000_hw	hw;$/;"	m	struct:adapter	typeref:struct:adapter::e1000_hw
hw	if_em.h	/^	struct em_hw    hw;$/;"	m	struct:adapter	typeref:struct:adapter::em_hw
hw_addr	dev/e1000/e1000_hw.h	/^	u8 *hw_addr;$/;"	m	struct:e1000_hw
hw_addr	dev/e1000/e1000_vf.h	/^	u8 *hw_addr;$/;"	m	struct:e1000_hw
hw_addr	if_em_hw.h	/^    uint8_t *hw_addr;$/;"	m	struct:em_hw
hwtstamp	dev/e1000/if_igb.h	/^	struct hwtstamp_ctrl    hwtstamp;$/;"	m	struct:adapter	typeref:struct:adapter::hwtstamp_ctrl
hz	if_em_osdep.h	73;"	d
iac	dev/e1000/e1000_hw.h	/^	u64 iac;$/;"	m	struct:e1000_hw_stats
ich8_flracc	dev/e1000/e1000_ich8lan.c	/^	struct ich8_flracc {$/;"	s	union:ich8_hws_flash_regacc	file:
ich8_hsflctl	dev/e1000/e1000_ich8lan.c	/^	struct ich8_hsflctl {$/;"	s	union:ich8_hws_flash_ctrl	file:
ich8_hsfsts	dev/e1000/e1000_ich8lan.c	/^	struct ich8_hsfsts {$/;"	s	union:ich8_hws_flash_status	file:
ich8_hws_flash_ctrl	dev/e1000/e1000_ich8lan.c	/^union ich8_hws_flash_ctrl {$/;"	u	file:
ich8_hws_flash_regacc	dev/e1000/e1000_ich8lan.c	/^union ich8_hws_flash_regacc {$/;"	u	file:
ich8_hws_flash_status	dev/e1000/e1000_ich8lan.c	/^union ich8_hws_flash_status {$/;"	u	file:
ich8lan	dev/e1000/e1000_hw.h	/^		struct e1000_dev_spec_ich8lan ich8lan;$/;"	m	union:e1000_hw::__anon28	typeref:struct:e1000_hw::__anon28::e1000_dev_spec_ich8lan
icrxatc	dev/e1000/e1000_hw.h	/^	u64 icrxatc;$/;"	m	struct:e1000_hw_stats
icrxdmtc	dev/e1000/e1000_hw.h	/^	u64 icrxdmtc;$/;"	m	struct:e1000_hw_stats
icrxoc	dev/e1000/e1000_hw.h	/^	u64 icrxoc;$/;"	m	struct:e1000_hw_stats
icrxptc	dev/e1000/e1000_hw.h	/^	u64 icrxptc;$/;"	m	struct:e1000_hw_stats
ictxatc	dev/e1000/e1000_hw.h	/^	u64 ictxatc;$/;"	m	struct:e1000_hw_stats
ictxptc	dev/e1000/e1000_hw.h	/^	u64 ictxptc;$/;"	m	struct:e1000_hw_stats
ictxqec	dev/e1000/e1000_hw.h	/^	u64 ictxqec;$/;"	m	struct:e1000_hw_stats
ictxqmtc	dev/e1000/e1000_hw.h	/^	u64 ictxqmtc;$/;"	m	struct:e1000_hw_stats
id	dev/e1000/e1000_hw.h	/^	u32 id;$/;"	m	struct:e1000_phy_info
id	timer.c	/^	timer_id 		id;$/;"	m	struct:timer_info	file:
id_led_init	dev/e1000/e1000_hw.h	/^	s32  (*id_led_init)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
identify_device	driver.c	/^identify_device(const pci_info *info)$/;"	f	file:
idle_errors	dev/e1000/e1000_hw.h	/^	u32 idle_errors;$/;"	m	struct:e1000_phy_stats
idle_errors	if_em_hw.h	/^    uint32_t idle_errors;$/;"	m	struct:em_phy_stats
idx	dev/e1000/e1000_82575.h	/^			u32 idx:4;$/;"	m	struct:e1000_adv_context_desc::__anon35::__anon36
idx	dev/e1000/e1000_82575.h	/^			u32 idx:4;$/;"	m	struct:e1000_adv_data_desc::__anon31::__anon32
if_append	if_compat.c	/^if_append(struct if_queue *queue, struct mbuf *mb)$/;"	f
if_baudrate	if_compat.h	/^	uint64	if_baudrate;$/;"	m	struct:ifnet
if_capabilities	if_compat.h	/^	uint32	if_capabilities;$/;"	m	struct:ifnet
if_capenable	if_compat.h	/^	uint32	if_capenable;$/;"	m	struct:ifnet
if_collisions	if_compat.h	/^	uint64	if_collisions;$/;"	m	struct:ifnet
if_data	if_compat.h	/^	struct if_data if_data;$/;"	m	struct:ifnet	typeref:struct:ifnet::if_data
if_data	if_compat.h	/^struct if_data$/;"	s
if_dequeue	if_compat.c	/^if_dequeue(struct if_queue *queue)$/;"	f
if_flags	dev/e1000/if_em.h	/^	int		if_flags;$/;"	m	struct:adapter
if_flags	dev/e1000/if_igb.h	/^	int		if_flags;$/;"	m	struct:adapter
if_flags	dev/e1000/if_lem.h	/^	int		if_flags;$/;"	m	struct:adapter
if_flags	if_compat.h	/^	volatile uint32	if_flags;$/;"	m	struct:ifnet
if_hwassist	if_compat.h	/^	uint32	if_hwassist;$/;"	m	struct:ifnet
if_ibytes	if_compat.h	/^	uint64	if_ibytes;$/;"	m	struct:ifnet
if_ierrors	if_compat.h	/^	uint64	if_ierrors;$/;"	m	struct:ifnet
if_imcasts	if_compat.h	/^	uint64	if_imcasts;$/;"	m	struct:ifnet
if_init	if_compat.h	/^	if_init		if_init;$/;"	m	struct:ifnet
if_init	if_compat.h	/^typedef void	(*if_init)(void *);$/;"	t
if_input	if_compat.h	/^	if_input	if_input;$/;"	m	struct:ifnet
if_input	if_compat.h	/^typedef void	(*if_input)(struct ifnet *, struct mbuf *);$/;"	t
if_ioctl	if_compat.h	/^	if_ioctl	if_ioctl;$/;"	m	struct:ifnet
if_ioctl	if_compat.h	/^typedef int		(*if_ioctl)(struct ifnet *, u_long, caddr_t);$/;"	t
if_ipackets	if_compat.h	/^	uint64	if_ipackets;$/;"	m	struct:ifnet
if_mtu	if_compat.h	/^	int		if_mtu;$/;"	m	struct:ifnet
if_multiaddrs	if_compat.h	/^	struct ifmultihead if_multiaddrs;$/;"	m	struct:ifnet	typeref:struct:ifnet::ifmultihead
if_name	if_compat.h	/^	const char *if_name;$/;"	m	struct:ifnet
if_obytes	if_compat.h	/^	uint64	if_obytes;$/;"	m	struct:ifnet
if_oerrors	if_compat.h	/^	uint64	if_oerrors;$/;"	m	struct:ifnet
if_opackets	if_compat.h	/^	uint64	if_opackets;$/;"	m	struct:ifnet
if_output	if_compat.h	/^	void *if_output; \/\/ unused$/;"	m	struct:ifnet
if_prepend	if_compat.c	/^if_prepend(struct if_queue *queue, struct mbuf *mb)$/;"	f
if_queue	if_compat.h	/^struct if_queue$/;"	s
if_rcv	if_compat.h	/^	struct if_queue if_rcv; \/\/ recveive queue$/;"	m	struct:ifnet	typeref:struct:ifnet::if_queue
if_rcv_sem	if_compat.h	/^	sem_id if_rcv_sem;$/;"	m	struct:ifnet
if_snd	if_compat.h	/^	struct if_queue if_snd; \/\/ send queue$/;"	m	struct:ifnet	typeref:struct:ifnet::if_queue
if_softc	if_compat.h	/^	struct adapter *if_softc;$/;"	m	struct:ifnet	typeref:struct:ifnet::adapter
if_start	if_compat.h	/^	if_start	if_start;$/;"	m	struct:ifnet
if_start	if_compat.h	/^typedef void	(*if_start)(struct ifnet *);$/;"	t
if_timer	if_compat.h	/^	int64	if_timer;$/;"	m	struct:ifnet
if_unit	if_compat.h	/^	int		if_unit;$/;"	m	struct:ifnet
if_watchdog	if_compat.h	/^	if_watchdog	if_watchdog;$/;"	m	struct:ifnet
if_watchdog	if_compat.h	/^typedef void	(*if_watchdog)(struct ifnet *);$/;"	t
ifi_hdrlen	if_compat.h	/^	int ifi_hdrlen;$/;"	m	struct:if_data
ifm_media	if_compat.h	/^	uint32 	ifm_media;$/;"	m	struct:ifmedia
ifma_addr	if_compat.h	/^	struct sockaddr *ifma_addr;$/;"	m	struct:ifmultiaddr	typeref:struct:ifmultiaddr::sockaddr
ifma_addr_storage	if_compat.h	/^	struct sockaddr_dl ifma_addr_storage;$/;"	m	struct:ifmultiaddr	typeref:struct:ifmultiaddr::sockaddr_dl
ifma_link	if_compat.h	/^	TAILQ_ENTRY(ifmultiaddr) ifma_link;$/;"	m	struct:ifmultiaddr
ifma_refcount	if_compat.h	/^	int ifma_refcount;$/;"	m	struct:ifmultiaddr
ifmedia	if_compat.h	/^struct ifmedia$/;"	s
ifmedia_add	if_compat.h	296;"	d
ifmedia_init	if_compat.h	295;"	d
ifmedia_ioctl	if_compat.h	298;"	d
ifmedia_set	if_compat.h	297;"	d
ifmultiaddr	if_compat.h	/^struct ifmultiaddr$/;"	s
ifnet	if_compat.h	/^struct ifnet $/;"	s
ifp	dev/e1000/if_em.h	/^	struct ifnet	*ifp;$/;"	m	struct:adapter	typeref:struct:adapter::ifnet
ifp	dev/e1000/if_igb.h	/^	struct ifnet	*ifp;$/;"	m	struct:adapter	typeref:struct:adapter::ifnet
ifp	dev/e1000/if_lem.h	/^	struct ifnet	*ifp;$/;"	m	struct:adapter	typeref:struct:adapter::ifnet
ifq_head	if_compat.h	/^	volatile struct mbuf *	ifq_head;$/;"	m	struct:if_queue	typeref:struct:if_queue::mbuf
ifq_maxlen	if_compat.h	/^	int						ifq_maxlen; \/\/ ignored$/;"	m	struct:if_queue
ifq_tail	if_compat.h	/^	volatile struct mbuf *	ifq_tail;$/;"	m	struct:if_queue	typeref:struct:if_queue::mbuf
ifs_max_val	dev/e1000/e1000_hw.h	/^	u16 ifs_max_val;$/;"	m	struct:e1000_mac_info
ifs_max_val	if_em_hw.h	/^    uint16_t ifs_max_val;$/;"	m	struct:em_hw
ifs_min_val	dev/e1000/e1000_hw.h	/^	u16 ifs_min_val;$/;"	m	struct:e1000_mac_info
ifs_min_val	if_em_hw.h	/^    uint16_t ifs_min_val;$/;"	m	struct:em_hw
ifs_params_forced	if_em_hw.h	/^    boolean_t ifs_params_forced;$/;"	m	struct:em_hw
ifs_ratio	dev/e1000/e1000_hw.h	/^	u16 ifs_ratio;$/;"	m	struct:e1000_mac_info
ifs_ratio	if_em_hw.h	/^    uint16_t ifs_ratio;$/;"	m	struct:em_hw
ifs_step_size	dev/e1000/e1000_hw.h	/^	u16 ifs_step_size;$/;"	m	struct:e1000_mac_info
ifs_step_size	if_em_hw.h	/^    uint16_t ifs_step_size;$/;"	m	struct:em_hw
igb_add_hw_stats	dev/e1000/if_igb.c	/^igb_add_hw_stats(struct adapter *adapter)$/;"	f	file:
igb_allocate_legacy	dev/e1000/if_igb.c	/^igb_allocate_legacy(struct adapter *adapter)$/;"	f	file:
igb_allocate_msix	dev/e1000/if_igb.c	/^igb_allocate_msix(struct adapter *adapter)$/;"	f	file:
igb_allocate_pci_resources	dev/e1000/if_igb.c	/^igb_allocate_pci_resources(struct adapter *adapter)$/;"	f	file:
igb_allocate_queues	dev/e1000/if_igb.c	/^igb_allocate_queues(struct adapter *adapter)$/;"	f	file:
igb_allocate_receive_buffers	dev/e1000/if_igb.c	/^igb_allocate_receive_buffers(struct rx_ring *rxr)$/;"	f	file:
igb_allocate_transmit_buffers	dev/e1000/if_igb.c	/^igb_allocate_transmit_buffers(struct tx_ring *txr)$/;"	f	file:
igb_attach	dev/e1000/if_igb.c	/^igb_attach(device_t dev)$/;"	f	file:
igb_buf_ring_size	dev/e1000/if_igb.c	/^static int igb_buf_ring_size = IGB_BR_SIZE;$/;"	v	file:
igb_configure_queues	dev/e1000/if_igb.c	/^igb_configure_queues(struct adapter *adapter)$/;"	f	file:
igb_deferred_mq_start	dev/e1000/if_igb.c	/^igb_deferred_mq_start(void *arg, int pending)$/;"	f	file:
igb_detach	dev/e1000/if_igb.c	/^igb_detach(device_t dev)$/;"	f	file:
igb_devclass	dev/e1000/if_igb.c	/^static devclass_t igb_devclass;$/;"	v	file:
igb_disable_intr	dev/e1000/if_igb.c	/^igb_disable_intr(struct adapter *adapter)$/;"	f	file:
igb_disable_promisc	dev/e1000/if_igb.c	/^igb_disable_promisc(struct adapter *adapter)$/;"	f	file:
igb_display_debug_stats	dev/e1000/if_igb.c	/^int	igb_display_debug_stats = 0;$/;"	v
igb_dma_alloc	dev/e1000/if_igb.h	/^struct igb_dma_alloc {$/;"	s
igb_dma_free	dev/e1000/if_igb.c	/^igb_dma_free(struct adapter *adapter, struct igb_dma_alloc *dma)$/;"	f	file:
igb_dma_malloc	dev/e1000/if_igb.c	/^igb_dma_malloc(struct adapter *adapter, bus_size_t size,$/;"	f	file:
igb_dmamap_cb	dev/e1000/if_igb.c	/^igb_dmamap_cb(void *arg, bus_dma_segment_t *segs, int nseg, int error)$/;"	f	file:
igb_driver	dev/e1000/if_igb.c	/^static driver_t igb_driver = {$/;"	v	file:
igb_driver_version	dev/e1000/if_igb.c	/^char igb_driver_version[] = "version - 2.3.10";$/;"	v
igb_enable_aim	dev/e1000/if_igb.c	/^static int igb_enable_aim = TRUE;$/;"	v	file:
igb_enable_intr	dev/e1000/if_igb.c	/^igb_enable_intr(struct adapter *adapter)$/;"	f	file:
igb_enable_msix	dev/e1000/if_igb.c	/^static int igb_enable_msix = 1;$/;"	v	file:
igb_enable_wakeup	dev/e1000/if_igb.c	/^igb_enable_wakeup(device_t dev)$/;"	f	file:
igb_free_pci_resources	dev/e1000/if_igb.c	/^igb_free_pci_resources(struct adapter *adapter)$/;"	f	file:
igb_free_receive_buffers	dev/e1000/if_igb.c	/^igb_free_receive_buffers(struct rx_ring *rxr)$/;"	f	file:
igb_free_receive_ring	dev/e1000/if_igb.c	/^igb_free_receive_ring(struct rx_ring *rxr)$/;"	f	file:
igb_free_receive_structures	dev/e1000/if_igb.c	/^igb_free_receive_structures(struct adapter *adapter)$/;"	f	file:
igb_free_transmit_buffers	dev/e1000/if_igb.c	/^igb_free_transmit_buffers(struct tx_ring *txr)$/;"	f	file:
igb_free_transmit_structures	dev/e1000/if_igb.c	/^igb_free_transmit_structures(struct adapter *adapter)$/;"	f	file:
igb_get_hw_control	dev/e1000/if_igb.c	/^igb_get_hw_control(struct adapter *adapter)$/;"	f	file:
igb_handle_link	dev/e1000/if_igb.c	/^igb_handle_link(void *context, int pending)$/;"	f	file:
igb_handle_link_locked	dev/e1000/if_igb.c	/^igb_handle_link_locked(struct adapter *adapter)$/;"	f	file:
igb_handle_que	dev/e1000/if_igb.c	/^igb_handle_que(void *context, int pending)$/;"	f	file:
igb_header_split	dev/e1000/if_igb.c	/^static int igb_header_split = FALSE;$/;"	v	file:
igb_identify_hardware	dev/e1000/if_igb.c	/^igb_identify_hardware(struct adapter *adapter)$/;"	f	file:
igb_init	dev/e1000/if_igb.c	/^igb_init(void *arg)$/;"	f	file:
igb_init_locked	dev/e1000/if_igb.c	/^igb_init_locked(struct adapter *adapter)$/;"	f	file:
igb_init_manageability	dev/e1000/if_igb.c	/^igb_init_manageability(struct adapter *adapter)$/;"	f	file:
igb_initialize_receive_units	dev/e1000/if_igb.c	/^igb_initialize_receive_units(struct adapter *adapter)$/;"	f	file:
igb_initialize_transmit_units	dev/e1000/if_igb.c	/^igb_initialize_transmit_units(struct adapter *adapter)$/;"	f	file:
igb_insert_vlan_header	dev/e1000/if_igb.h	/^	int		igb_insert_vlan_header;$/;"	m	struct:adapter
igb_ioctl	dev/e1000/if_igb.c	/^igb_ioctl(struct ifnet *ifp, u_long command, caddr_t data)$/;"	f	file:
igb_irq_fast	dev/e1000/if_igb.c	/^igb_irq_fast(void *arg)$/;"	f	file:
igb_is_valid_ether_addr	dev/e1000/if_igb.c	/^igb_is_valid_ether_addr(uint8_t *addr)$/;"	f	file:
igb_last_bind_cpu	dev/e1000/if_igb.c	/^static int igb_last_bind_cpu = -1;$/;"	v	file:
igb_led_func	dev/e1000/if_igb.c	/^igb_led_func(void *arg, int onoff)$/;"	f	file:
igb_local_timer	dev/e1000/if_igb.c	/^igb_local_timer(void *arg)$/;"	f	file:
igb_max_interrupt_rate	dev/e1000/if_igb.c	/^static int igb_max_interrupt_rate = 8000;$/;"	v	file:
igb_media_change	dev/e1000/if_igb.c	/^igb_media_change(struct ifnet *ifp)$/;"	f	file:
igb_media_status	dev/e1000/if_igb.c	/^igb_media_status(struct ifnet *ifp, struct ifmediareq *ifmr)$/;"	f	file:
igb_methods	dev/e1000/if_igb.c	/^static device_method_t igb_methods[] = {$/;"	v	file:
igb_mq_start	dev/e1000/if_igb.c	/^igb_mq_start(struct ifnet *ifp, struct mbuf *m)$/;"	f	file:
igb_mq_start_locked	dev/e1000/if_igb.c	/^igb_mq_start_locked(struct ifnet *ifp, struct tx_ring *txr)$/;"	f	file:
igb_msix_link	dev/e1000/if_igb.c	/^igb_msix_link(void *arg)$/;"	f	file:
igb_msix_que	dev/e1000/if_igb.c	/^igb_msix_que(void *arg)$/;"	f	file:
igb_num_queues	dev/e1000/if_igb.c	/^static int igb_num_queues = 0;$/;"	v	file:
igb_poll	dev/e1000/if_igb.c	/^igb_poll(struct ifnet *ifp, enum poll_cmd cmd, int count)$/;"	f	file:
igb_poll	dev/e1000/if_igb.c	/^static poll_handler_t igb_poll;$/;"	v	file:
igb_print_nvm_info	dev/e1000/if_igb.c	/^igb_print_nvm_info(struct adapter *adapter)$/;"	f	file:
igb_probe	dev/e1000/if_igb.c	/^igb_probe(device_t dev)$/;"	f	file:
igb_qflush	dev/e1000/if_igb.c	/^igb_qflush(struct ifnet *ifp)$/;"	f	file:
igb_queue	dev/e1000/if_igb.h	/^struct igb_queue {$/;"	s
igb_refresh_mbufs	dev/e1000/if_igb.c	/^igb_refresh_mbufs(struct rx_ring *rxr, int limit)$/;"	f	file:
igb_register_vlan	dev/e1000/if_igb.c	/^igb_register_vlan(void *arg, struct ifnet *ifp, u16 vtag)$/;"	f	file:
igb_release_hw_control	dev/e1000/if_igb.c	/^igb_release_hw_control(struct adapter *adapter)$/;"	f	file:
igb_release_manageability	dev/e1000/if_igb.c	/^igb_release_manageability(struct adapter *adapter)$/;"	f	file:
igb_reset	dev/e1000/if_igb.c	/^igb_reset(struct adapter *adapter)$/;"	f	file:
igb_resume	dev/e1000/if_igb.c	/^igb_resume(device_t dev)$/;"	f	file:
igb_rx_buf	dev/e1000/if_igb.h	/^struct igb_rx_buf {$/;"	s
igb_rx_checksum	dev/e1000/if_igb.c	/^igb_rx_checksum(u32 staterr, struct mbuf *mp, u32 ptype)$/;"	f	file:
igb_rx_discard	dev/e1000/if_igb.c	/^igb_rx_discard(struct rx_ring *rxr, int i)$/;"	f	file:
igb_rx_input	dev/e1000/if_igb.c	/^igb_rx_input(struct rx_ring *rxr, struct ifnet *ifp, struct mbuf *m, u32 ptype)$/;"	f	file:
igb_rx_process_limit	dev/e1000/if_igb.c	/^static int igb_rx_process_limit = 100;$/;"	v	file:
igb_rx_unrefreshed	dev/e1000/if_igb.h	/^igb_rx_unrefreshed(struct rx_ring *rxr)$/;"	f
igb_rxd	dev/e1000/if_igb.c	/^static int igb_rxd = IGB_DEFAULT_RXD;$/;"	v	file:
igb_rxeof	dev/e1000/if_igb.c	/^igb_rxeof(struct igb_queue *que, int count, int *done)$/;"	f	file:
igb_set_flowcntl	dev/e1000/if_igb.c	/^igb_set_flowcntl(SYSCTL_HANDLER_ARGS)$/;"	f	file:
igb_set_multi	dev/e1000/if_igb.c	/^igb_set_multi(struct adapter *adapter)$/;"	f	file:
igb_set_promisc	dev/e1000/if_igb.c	/^igb_set_promisc(struct adapter *adapter)$/;"	f	file:
igb_set_sysctl_value	dev/e1000/if_igb.c	/^igb_set_sysctl_value(struct adapter *adapter, const char *name,$/;"	f	file:
igb_setup_interface	dev/e1000/if_igb.c	/^igb_setup_interface(device_t dev, struct adapter *adapter)$/;"	f	file:
igb_setup_msix	dev/e1000/if_igb.c	/^igb_setup_msix(struct adapter *adapter)$/;"	f	file:
igb_setup_receive_ring	dev/e1000/if_igb.c	/^igb_setup_receive_ring(struct rx_ring *rxr)$/;"	f	file:
igb_setup_receive_structures	dev/e1000/if_igb.c	/^igb_setup_receive_structures(struct adapter *adapter)$/;"	f	file:
igb_setup_transmit_ring	dev/e1000/if_igb.c	/^igb_setup_transmit_ring(struct tx_ring *txr)$/;"	f	file:
igb_setup_transmit_structures	dev/e1000/if_igb.c	/^igb_setup_transmit_structures(struct adapter *adapter)$/;"	f	file:
igb_setup_vlan_hw_support	dev/e1000/if_igb.c	/^igb_setup_vlan_hw_support(struct adapter *adapter)$/;"	f	file:
igb_shutdown	dev/e1000/if_igb.c	/^igb_shutdown(device_t dev)$/;"	f	file:
igb_start	dev/e1000/if_igb.c	/^igb_start(struct ifnet *ifp)$/;"	f	file:
igb_start_locked	dev/e1000/if_igb.c	/^igb_start_locked(struct tx_ring *txr, struct ifnet *ifp)$/;"	f	file:
igb_stop	dev/e1000/if_igb.c	/^igb_stop(void *arg)$/;"	f	file:
igb_strings	dev/e1000/if_igb.c	/^static char *igb_strings[] = {$/;"	v	file:
igb_suspend	dev/e1000/if_igb.c	/^igb_suspend(device_t dev)$/;"	f	file:
igb_sysctl_dmac	dev/e1000/if_igb.c	/^igb_sysctl_dmac(SYSCTL_HANDLER_ARGS)$/;"	f	file:
igb_sysctl_eee	dev/e1000/if_igb.c	/^igb_sysctl_eee(SYSCTL_HANDLER_ARGS)$/;"	f	file:
igb_sysctl_interrupt_rate_handler	dev/e1000/if_igb.c	/^igb_sysctl_interrupt_rate_handler(SYSCTL_HANDLER_ARGS)$/;"	f	file:
igb_sysctl_nvm_info	dev/e1000/if_igb.c	/^igb_sysctl_nvm_info(SYSCTL_HANDLER_ARGS)$/;"	f	file:
igb_sysctl_reg_handler	dev/e1000/if_igb.c	/^igb_sysctl_reg_handler(SYSCTL_HANDLER_ARGS)$/;"	f	file:
igb_tso_setup	dev/e1000/if_igb.c	/^igb_tso_setup(struct tx_ring *txr, struct mbuf *mp, int ehdrlen,$/;"	f	file:
igb_tx_buffer	dev/e1000/if_igb.h	/^struct igb_tx_buffer {$/;"	s
igb_tx_ctx_setup	dev/e1000/if_igb.c	/^igb_tx_ctx_setup(struct tx_ring *txr, struct mbuf *mp)$/;"	f	file:
igb_txd	dev/e1000/if_igb.c	/^static int igb_txd = IGB_DEFAULT_TXD;$/;"	v	file:
igb_txeof	dev/e1000/if_igb.c	/^igb_txeof(struct tx_ring *txr)$/;"	f	file:
igb_unregister_vlan	dev/e1000/if_igb.c	/^igb_unregister_vlan(void *arg, struct ifnet *ifp, u16 vtag)$/;"	f	file:
igb_update_link_status	dev/e1000/if_igb.c	/^igb_update_link_status(struct adapter *adapter)$/;"	f	file:
igb_update_stats_counters	dev/e1000/if_igb.c	/^igb_update_stats_counters(struct adapter *adapter)$/;"	f	file:
igb_update_vf_stats_counters	dev/e1000/if_igb.c	/^igb_update_vf_stats_counters(struct adapter *adapter)$/;"	f	file:
igb_vendor_info_array	dev/e1000/if_igb.c	/^static igb_vendor_info_t igb_vendor_info_array[] =$/;"	v	file:
igb_vendor_info_t	dev/e1000/if_igb.h	/^} igb_vendor_info_t;$/;"	t	typeref:struct:_igb_vendor_info_t
igb_vf_init_stats	dev/e1000/if_igb.c	/^igb_vf_init_stats(struct adapter *adapter)$/;"	f	file:
igb_xmit	dev/e1000/if_igb.c	/^igb_xmit(struct tx_ring *txr, struct mbuf **m_headp)$/;"	f	file:
ims	dev/e1000/if_em.h	/^	u32			ims;$/;"	m	struct:rx_ring
ims	dev/e1000/if_em.h	/^	u32			ims;$/;"	m	struct:tx_ring
ims	dev/e1000/if_em.h	/^	u32		ims;$/;"	m	struct:adapter
in_detach	dev/e1000/if_em.h	/^	bool		in_detach;$/;"	m	struct:adapter
in_detach	dev/e1000/if_igb.h	/^	boolean_t       in_detach;$/;"	m	struct:adapter
in_detach	dev/e1000/if_lem.h	/^	boolean_t       in_detach;$/;"	m	struct:adapter
in_detach	if_em.h	/^	boolean_t in_detach;$/;"	m	struct:adapter
in_ifs_mode	dev/e1000/e1000_hw.h	/^	bool in_ifs_mode;$/;"	m	struct:e1000_mac_info
in_ifs_mode	if_em_hw.h	/^    boolean_t in_ifs_mode;$/;"	m	struct:em_hw
index	dev/e1000/if_em.h	/^	unsigned int index;$/;"	m	struct:_em_vendor_info_t
index	dev/e1000/if_igb.h	/^	unsigned int index;$/;"	m	struct:_igb_vendor_info_t
index	dev/e1000/if_lem.h	/^	unsigned int index;$/;"	m	struct:_em_vendor_info_t
init_driver	driver.c	/^init_driver(void)$/;"	f
init_hardware	driver.c	/^init_hardware(void)$/;"	f
init_hw	dev/e1000/e1000_hw.h	/^	s32  (*init_hw)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
init_hw	dev/e1000/e1000_vf.h	/^	s32  (*init_hw)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
init_params	dev/e1000/e1000_hw.h	/^	s32  (*init_params)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
init_params	dev/e1000/e1000_hw.h	/^	s32  (*init_params)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
init_params	dev/e1000/e1000_hw.h	/^	s32  (*init_params)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
init_params	dev/e1000/e1000_hw.h	/^	s32 (*init_params)(struct e1000_hw *hw);$/;"	m	struct:e1000_mbx_operations
init_params	dev/e1000/e1000_vf.h	/^	s32  (*init_params)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
init_params	dev/e1000/e1000_vf.h	/^	s32 (*init_params)(struct e1000_hw *hw);$/;"	m	struct:e1000_mbx_operations
init_phy_disabled	dev/e1000/e1000_hw.h	/^	bool init_phy_disabled;$/;"	m	struct:e1000_dev_spec_82543
initialize_timer	timer.c	/^initialize_timer(void)$/;"	f
inl	if_em_osdep.h	107;"	d
int_func	if_em_osdep.c	/^	interrupt_handler int_func;$/;"	m	struct:int_tag	file:
int_handler_tag	if_em.h	/^	void            *int_handler_tag;$/;"	m	struct:adapter
int_mask	dev/e1000/if_igb.h	/^	unsigned long	int_mask;$/;"	m	struct:adapter
int_tag	if_em_osdep.c	/^struct int_tag {$/;"	s	file:
interface_data	if_em.h	/^	struct arpcom   interface_data;$/;"	m	struct:adapter	typeref:struct:adapter::arpcom
interval	timer.c	/^	bigtime_t		interval;$/;"	m	struct:timer_info	file:
io_base	dev/e1000/e1000_hw.h	/^	unsigned long io_base;$/;"	m	struct:e1000_hw
io_base	dev/e1000/e1000_vf.h	/^	unsigned long io_base;$/;"	m	struct:e1000_hw
io_base	if_em_hw.h	/^    unsigned long io_base;$/;"	m	struct:em_hw
io_bus_space_handle	dev/e1000/e1000_osdep.h	/^	bus_space_handle_t io_bus_space_handle;$/;"	m	struct:e1000_osdep
io_bus_space_tag	dev/e1000/e1000_osdep.h	/^	bus_space_tag_t    io_bus_space_tag;$/;"	m	struct:e1000_osdep
io_rid	dev/e1000/if_lem.h	/^	int		io_rid;$/;"	m	struct:adapter
io_rid	if_em.h	/^	int             io_rid;$/;"	m	struct:adapter
ioport	dev/e1000/if_lem.h	/^	struct resource	*ioport;$/;"	m	struct:adapter	typeref:struct:adapter::resource
ip_config	dev/e1000/e1000_82575.h	/^		u32 ip_config;$/;"	m	union:e1000_adv_context_desc::__anon33
ip_config	dev/e1000/e1000_hw.h	/^		__le32 ip_config;$/;"	m	union:e1000_context_desc::__anon18
ip_config	if_em_hw.h	/^        uint32_t ip_config;$/;"	m	union:em_context_desc::__anon84
ip_fields	dev/e1000/e1000_hw.h	/^		} ip_fields;$/;"	m	union:e1000_context_desc::__anon18	typeref:struct:e1000_context_desc::__anon18::__anon19
ip_fields	if_em_hw.h	/^        } ip_fields;$/;"	m	union:em_context_desc::__anon84	typeref:struct:em_context_desc::__anon84::__anon85
ip_id	dev/e1000/e1000_82575.h	/^					__le16 ip_id; \/* IP id *\/$/;"	m	struct:e1000_adv_rx_desc::__anon38::__anon39::__anon42::__anon43
ip_id	dev/e1000/e1000_hw.h	/^					__le16 ip_id;    \/* IP id *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon8::__anon9::__anon10::__anon11
ip_id	dev/e1000/e1000_hw.h	/^					__le16 ip_id;  \/* IP id *\/$/;"	m	struct:e1000_rx_desc_extended::__anon2::__anon3::__anon4::__anon5
ip_id	dev/e1000/e1000_vf.h	/^					u16 ip_id;    \/* IP id *\/$/;"	m	struct:e1000_adv_rx_desc::__anon48::__anon49::__anon52::__anon53
ip_setup	dev/e1000/e1000_82575.h	/^	} ip_setup;$/;"	m	struct:e1000_adv_context_desc	typeref:union:e1000_adv_context_desc::__anon33
ipcse	dev/e1000/e1000_hw.h	/^			__le16 ipcse;  \/* IP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon18::__anon19
ipcse	if_em_hw.h	/^            uint16_t ipcse;     \/* IP checksum end *\/$/;"	m	struct:em_context_desc::__anon84::__anon85
ipcso	dev/e1000/e1000_hw.h	/^			u8 ipcso;  \/* IP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon18::__anon19
ipcso	if_em_hw.h	/^            uint8_t ipcso;      \/* IP checksum offset *\/$/;"	m	struct:em_context_desc::__anon84::__anon85
ipcss	dev/e1000/e1000_hw.h	/^			u8 ipcss;  \/* IP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon18::__anon19
ipcss	if_em_hw.h	/^            uint8_t ipcss;      \/* IP checksum start *\/$/;"	m	struct:em_context_desc::__anon84::__anon85
iplen	dev/e1000/e1000_82575.h	/^			u32 iplen:9;$/;"	m	struct:e1000_adv_context_desc::__anon33::__anon34
ipro1000	dev/e1000/glue.c	/^HAIKU_FBSD_DRIVERS_GLUE(ipro1000);$/;"	v
ipro1000_close	device.c	/^ipro1000_close(void* cookie)$/;"	f
ipro1000_control	device.c	/^ipro1000_control(void *cookie, uint32 op, void *arg, size_t len)$/;"	f
ipro1000_device	device.h	/^} ipro1000_device;$/;"	t	typeref:struct:device
ipro1000_free	device.c	/^ipro1000_free(void* cookie)$/;"	f
ipro1000_open	device.c	/^ipro1000_open(const char *name, uint32 flags, void** cookie)$/;"	f
ipro1000_read	device.c	/^ipro1000_read(void* cookie, off_t position, void *buf, size_t* num_bytes)$/;"	f
ipro1000_read_settings	device.c	/^ipro1000_read_settings(ipro1000_device *device)$/;"	f	file:
ipro1000_write	device.c	/^ipro1000_write(void* cookie, off_t position, const void* buffer, size_t* num_bytes)$/;"	f
ipv4_addr	if_em_hw.h	/^    volatile uint32_t ipv4_addr;        \/* IP Address (RW) *\/$/;"	m	struct:em_ipv4_at_entry
ipv6_addr	if_em_hw.h	/^    volatile uint8_t ipv6_addr[16];$/;"	m	struct:em_ipv6_at_entry
irq	if_em_osdep.c	/^	int irq;$/;"	m	struct:int_tag	file:
irqs	dev/e1000/if_igb.h	/^	u64			irqs;$/;"	m	struct:igb_queue
is_mdix	dev/e1000/e1000_hw.h	/^	bool is_mdix;$/;"	m	struct:e1000_phy_info
ivars	dev/e1000/if_em.h	/^	u32		ivars;$/;"	m	struct:adapter
kmrn_lock_loss_workaround_enabled	dev/e1000/e1000_hw.h	/^	bool kmrn_lock_loss_workaround_enabled;$/;"	m	struct:e1000_dev_spec_ich8lan
l4_config	dev/e1000/e1000_82575.h	/^		u64 l4_config;$/;"	m	union:e1000_adv_context_desc::__anon35
l4_setup	dev/e1000/e1000_82575.h	/^	} l4_setup;$/;"	m	struct:e1000_adv_context_desc	typeref:union:e1000_adv_context_desc::__anon35
l4len	dev/e1000/e1000_82575.h	/^			u32 l4len:8;$/;"	m	struct:e1000_adv_context_desc::__anon35::__anon36
laa_is_present	dev/e1000/e1000_hw.h	/^	bool laa_is_present;$/;"	m	struct:e1000_dev_spec_82571
last_gorc	dev/e1000/e1000_hw.h	/^	u32 last_gorc;$/;"	m	struct:e1000_vf_stats
last_gorc	dev/e1000/e1000_vf.h	/^	u32 last_gorc;$/;"	m	struct:e1000_vf_stats
last_gorlbc	dev/e1000/e1000_hw.h	/^	u32 last_gorlbc;$/;"	m	struct:e1000_vf_stats
last_gorlbc	dev/e1000/e1000_vf.h	/^	u32 last_gorlbc;$/;"	m	struct:e1000_vf_stats
last_gotc	dev/e1000/e1000_hw.h	/^	u32 last_gotc;$/;"	m	struct:e1000_vf_stats
last_gotc	dev/e1000/e1000_vf.h	/^	u32 last_gotc;$/;"	m	struct:e1000_vf_stats
last_gotlbc	dev/e1000/e1000_hw.h	/^	u32 last_gotlbc;$/;"	m	struct:e1000_vf_stats
last_gotlbc	dev/e1000/e1000_vf.h	/^	u32 last_gotlbc;$/;"	m	struct:e1000_vf_stats
last_gprc	dev/e1000/e1000_hw.h	/^	u32 last_gprc;$/;"	m	struct:e1000_vf_stats
last_gprc	dev/e1000/e1000_vf.h	/^	u32 last_gprc;$/;"	m	struct:e1000_vf_stats
last_gprlbc	dev/e1000/e1000_hw.h	/^	u32 last_gprlbc;$/;"	m	struct:e1000_vf_stats
last_gprlbc	dev/e1000/e1000_vf.h	/^	u32 last_gprlbc;$/;"	m	struct:e1000_vf_stats
last_gptc	dev/e1000/e1000_hw.h	/^	u32 last_gptc;$/;"	m	struct:e1000_vf_stats
last_gptc	dev/e1000/e1000_vf.h	/^	u32 last_gptc;$/;"	m	struct:e1000_vf_stats
last_gptlbc	dev/e1000/e1000_hw.h	/^	u32 last_gptlbc;$/;"	m	struct:e1000_vf_stats
last_gptlbc	dev/e1000/e1000_vf.h	/^	u32 last_gptlbc;$/;"	m	struct:e1000_vf_stats
last_hw_ipcso	dev/e1000/if_em.h	/^	u8			last_hw_ipcso;$/;"	m	struct:tx_ring
last_hw_ipcss	dev/e1000/if_em.h	/^	u8			last_hw_ipcss;$/;"	m	struct:tx_ring
last_hw_offload	dev/e1000/if_em.h	/^        u16			last_hw_offload;$/;"	m	struct:tx_ring
last_hw_offload	dev/e1000/if_lem.h	/^        uint16_t		last_hw_offload;$/;"	m	struct:adapter
last_hw_tucso	dev/e1000/if_em.h	/^	u8			last_hw_tucso;$/;"	m	struct:tx_ring
last_hw_tucss	dev/e1000/if_em.h	/^	u8			last_hw_tucss;$/;"	m	struct:tx_ring
last_mprc	dev/e1000/e1000_hw.h	/^	u32 last_mprc;$/;"	m	struct:e1000_vf_stats
last_mprc	dev/e1000/e1000_vf.h	/^	u32 last_mprc;$/;"	m	struct:e1000_vf_stats
latecol	dev/e1000/e1000_hw.h	/^	u64 latecol;$/;"	m	struct:e1000_hw_stats
latecol	if_em_hw.h	/^    uint64_t latecol;$/;"	m	struct:em_hw_stats
led_dev	dev/e1000/if_em.h	/^	struct cdev	*led_dev;$/;"	m	struct:adapter	typeref:struct:adapter::cdev
led_dev	dev/e1000/if_igb.h	/^	struct cdev	*led_dev;$/;"	m	struct:adapter	typeref:struct:adapter::cdev
led_dev	dev/e1000/if_lem.h	/^	struct cdev	*led_dev;$/;"	m	struct:adapter	typeref:struct:adapter::cdev
led_off	dev/e1000/e1000_hw.h	/^	s32  (*led_off)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
led_on	dev/e1000/e1000_hw.h	/^	s32  (*led_on)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
ledctl_default	dev/e1000/e1000_hw.h	/^	u32 ledctl_default;$/;"	m	struct:e1000_mac_info
ledctl_default	if_em_hw.h	/^    uint32_t ledctl_default;$/;"	m	struct:em_hw
ledctl_mode1	dev/e1000/e1000_hw.h	/^	u32 ledctl_mode1;$/;"	m	struct:e1000_mac_info
ledctl_mode1	if_em_hw.h	/^    uint32_t ledctl_mode1;$/;"	m	struct:em_hw
ledctl_mode2	dev/e1000/e1000_hw.h	/^	u32 ledctl_mode2;$/;"	m	struct:e1000_mac_info
ledctl_mode2	if_em_hw.h	/^    uint32_t ledctl_mode2;$/;"	m	struct:em_hw
lem_82547_fifo_workaround	dev/e1000/if_lem.c	/^lem_82547_fifo_workaround(struct adapter *adapter, int len)$/;"	f	file:
lem_82547_move_tail	dev/e1000/if_lem.c	/^lem_82547_move_tail(void *arg)$/;"	f	file:
lem_82547_tx_fifo_reset	dev/e1000/if_lem.c	/^lem_82547_tx_fifo_reset(struct adapter *adapter)$/;"	f	file:
lem_82547_update_fifo_head	dev/e1000/if_lem.c	/^lem_82547_update_fifo_head(struct adapter *adapter, int len)$/;"	f	file:
lem_add_hw_stats	dev/e1000/if_lem.c	/^lem_add_hw_stats(struct adapter *adapter)$/;"	f	file:
lem_add_int_delay_sysctl	dev/e1000/if_lem.c	/^lem_add_int_delay_sysctl(struct adapter *adapter, const char *name,$/;"	f	file:
lem_add_rx_process_limit	dev/e1000/if_lem.c	/^lem_add_rx_process_limit(struct adapter *adapter, const char *name,$/;"	f	file:
lem_allocate_irq	dev/e1000/if_lem.c	/^lem_allocate_irq(struct adapter *adapter)$/;"	f
lem_allocate_pci_resources	dev/e1000/if_lem.c	/^lem_allocate_pci_resources(struct adapter *adapter)$/;"	f	file:
lem_allocate_receive_structures	dev/e1000/if_lem.c	/^lem_allocate_receive_structures(struct adapter *adapter)$/;"	f	file:
lem_allocate_transmit_structures	dev/e1000/if_lem.c	/^lem_allocate_transmit_structures(struct adapter *adapter)$/;"	f	file:
lem_attach	dev/e1000/if_lem.c	/^lem_attach(device_t dev)$/;"	f	file:
lem_debug_sbp	dev/e1000/if_lem.c	/^static int lem_debug_sbp = FALSE;$/;"	v	file:
lem_detach	dev/e1000/if_lem.c	/^lem_detach(device_t dev)$/;"	f	file:
lem_devclass	dev/e1000/if_lem.c	/^devclass_t lem_devclass;$/;"	v
lem_disable_intr	dev/e1000/if_lem.c	/^lem_disable_intr(struct adapter *adapter)$/;"	f	file:
lem_disable_promisc	dev/e1000/if_lem.c	/^lem_disable_promisc(struct adapter *adapter)$/;"	f	file:
lem_dma_free	dev/e1000/if_lem.c	/^lem_dma_free(struct adapter *adapter, struct em_dma_alloc *dma)$/;"	f	file:
lem_dma_malloc	dev/e1000/if_lem.c	/^lem_dma_malloc(struct adapter *adapter, bus_size_t size,$/;"	f	file:
lem_dmamap_cb	dev/e1000/if_lem.c	/^lem_dmamap_cb(void *arg, bus_dma_segment_t *segs, int nseg, int error)$/;"	f	file:
lem_driver	dev/e1000/if_lem.c	/^static driver_t lem_driver = {$/;"	v	file:
lem_driver_version	dev/e1000/if_lem.c	/^char lem_driver_version[] = "1.0.6";$/;"	v
lem_enable_intr	dev/e1000/if_lem.c	/^lem_enable_intr(struct adapter *adapter)$/;"	f	file:
lem_enable_phy_wakeup	dev/e1000/if_lem.c	/^lem_enable_phy_wakeup(struct adapter *adapter)$/;"	f	file:
lem_enable_wakeup	dev/e1000/if_lem.c	/^lem_enable_wakeup(device_t dev)$/;"	f	file:
lem_fc_setting	dev/e1000/if_lem.c	/^static int lem_fc_setting = e1000_fc_full;$/;"	v	file:
lem_fill_descriptors	dev/e1000/if_lem.c	/^lem_fill_descriptors (bus_addr_t address, u32 length,$/;"	f	file:
lem_fixup_rx	dev/e1000/if_lem.c	/^lem_fixup_rx(struct adapter *adapter)$/;"	f	file:
lem_free_pci_resources	dev/e1000/if_lem.c	/^lem_free_pci_resources(struct adapter *adapter)$/;"	f	file:
lem_free_receive_structures	dev/e1000/if_lem.c	/^lem_free_receive_structures(struct adapter *adapter)$/;"	f	file:
lem_free_transmit_structures	dev/e1000/if_lem.c	/^lem_free_transmit_structures(struct adapter *adapter)$/;"	f	file:
lem_get_buf	dev/e1000/if_lem.c	/^lem_get_buf(struct adapter *adapter, int i)$/;"	f	file:
lem_get_hw_control	dev/e1000/if_lem.c	/^lem_get_hw_control(struct adapter *adapter)$/;"	f	file:
lem_get_wakeup	dev/e1000/if_lem.c	/^lem_get_wakeup(device_t dev)$/;"	f	file:
lem_handle_link	dev/e1000/if_lem.c	/^lem_handle_link(void *context, int pending)$/;"	f	file:
lem_handle_rxtx	dev/e1000/if_lem.c	/^lem_handle_rxtx(void *context, int pending)$/;"	f	file:
lem_hardware_init	dev/e1000/if_lem.c	/^lem_hardware_init(struct adapter *adapter)$/;"	f	file:
lem_identify_hardware	dev/e1000/if_lem.c	/^lem_identify_hardware(struct adapter *adapter)$/;"	f	file:
lem_init	dev/e1000/if_lem.c	/^lem_init(void *arg)$/;"	f	file:
lem_init_locked	dev/e1000/if_lem.c	/^lem_init_locked(struct adapter *adapter)$/;"	f	file:
lem_init_manageability	dev/e1000/if_lem.c	/^lem_init_manageability(struct adapter *adapter)$/;"	f	file:
lem_initialize_receive_unit	dev/e1000/if_lem.c	/^lem_initialize_receive_unit(struct adapter *adapter)$/;"	f	file:
lem_initialize_transmit_unit	dev/e1000/if_lem.c	/^lem_initialize_transmit_unit(struct adapter *adapter)$/;"	f	file:
lem_intr	dev/e1000/if_lem.c	/^lem_intr(void *arg)$/;"	f	file:
lem_ioctl	dev/e1000/if_lem.c	/^lem_ioctl(struct ifnet *ifp, u_long command, caddr_t data)$/;"	f	file:
lem_irq_fast	dev/e1000/if_lem.c	/^lem_irq_fast(void *arg)$/;"	f	file:
lem_is_valid_ether_addr	dev/e1000/if_lem.c	/^lem_is_valid_ether_addr(u8 *addr)$/;"	f	file:
lem_led_func	dev/e1000/if_lem.c	/^lem_led_func(void *arg, int onoff)$/;"	f	file:
lem_local_timer	dev/e1000/if_lem.c	/^lem_local_timer(void *arg)$/;"	f	file:
lem_media_change	dev/e1000/if_lem.c	/^lem_media_change(struct ifnet *ifp)$/;"	f	file:
lem_media_status	dev/e1000/if_lem.c	/^lem_media_status(struct ifnet *ifp, struct ifmediareq *ifmr)$/;"	f	file:
lem_methods	dev/e1000/if_lem.c	/^static device_method_t lem_methods[] = {$/;"	v	file:
lem_poll	dev/e1000/if_lem.c	/^lem_poll(struct ifnet *ifp, enum poll_cmd cmd, int count)$/;"	f	file:
lem_poll	dev/e1000/if_lem.c	/^static poll_handler_t lem_poll;$/;"	v	file:
lem_print_nvm_info	dev/e1000/if_lem.c	/^lem_print_nvm_info(struct adapter *adapter)$/;"	f	file:
lem_probe	dev/e1000/if_lem.c	/^lem_probe(device_t dev)$/;"	f	file:
lem_receive_checksum	dev/e1000/if_lem.c	/^lem_receive_checksum(struct adapter *adapter,$/;"	f	file:
lem_register_vlan	dev/e1000/if_lem.c	/^lem_register_vlan(void *arg, struct ifnet *ifp, u16 vtag)$/;"	f	file:
lem_release_hw_control	dev/e1000/if_lem.c	/^lem_release_hw_control(struct adapter *adapter)$/;"	f	file:
lem_release_manageability	dev/e1000/if_lem.c	/^lem_release_manageability(struct adapter *adapter)$/;"	f	file:
lem_resume	dev/e1000/if_lem.c	/^lem_resume(device_t dev)$/;"	f	file:
lem_rx_abs_int_delay_dflt	dev/e1000/if_lem.c	/^static int lem_rx_abs_int_delay_dflt = EM_TICKS_TO_USECS(EM_RADV);$/;"	v	file:
lem_rx_int_delay_dflt	dev/e1000/if_lem.c	/^static int lem_rx_int_delay_dflt = EM_TICKS_TO_USECS(EM_RDTR);$/;"	v	file:
lem_rx_process_limit	dev/e1000/if_lem.c	/^static int lem_rx_process_limit = 100;$/;"	v	file:
lem_rxd	dev/e1000/if_lem.c	/^static int lem_rxd = EM_DEFAULT_RXD;$/;"	v	file:
lem_rxeof	dev/e1000/if_lem.c	/^lem_rxeof(struct adapter *adapter, int count, int *done)$/;"	f	file:
lem_set_flow_cntrl	dev/e1000/if_lem.c	/^lem_set_flow_cntrl(struct adapter *adapter, const char *name,$/;"	f	file:
lem_set_multi	dev/e1000/if_lem.c	/^lem_set_multi(struct adapter *adapter)$/;"	f	file:
lem_set_promisc	dev/e1000/if_lem.c	/^lem_set_promisc(struct adapter *adapter)$/;"	f	file:
lem_setup_interface	dev/e1000/if_lem.c	/^lem_setup_interface(device_t dev, struct adapter *adapter)$/;"	f	file:
lem_setup_receive_structures	dev/e1000/if_lem.c	/^lem_setup_receive_structures(struct adapter *adapter)$/;"	f	file:
lem_setup_transmit_structures	dev/e1000/if_lem.c	/^lem_setup_transmit_structures(struct adapter *adapter)$/;"	f	file:
lem_setup_vlan_hw_support	dev/e1000/if_lem.c	/^lem_setup_vlan_hw_support(struct adapter *adapter)$/;"	f	file:
lem_shutdown	dev/e1000/if_lem.c	/^lem_shutdown(device_t dev)$/;"	f	file:
lem_smart_pwr_down	dev/e1000/if_lem.c	/^static int lem_smart_pwr_down = FALSE;$/;"	v	file:
lem_smartspeed	dev/e1000/if_lem.c	/^lem_smartspeed(struct adapter *adapter)$/;"	f	file:
lem_start	dev/e1000/if_lem.c	/^lem_start(struct ifnet *ifp)$/;"	f	file:
lem_start_locked	dev/e1000/if_lem.c	/^lem_start_locked(struct ifnet *ifp)$/;"	f	file:
lem_stop	dev/e1000/if_lem.c	/^lem_stop(void *arg)$/;"	f	file:
lem_strings	dev/e1000/if_lem.c	/^static char *lem_strings[] = {$/;"	v	file:
lem_suspend	dev/e1000/if_lem.c	/^lem_suspend(device_t dev)$/;"	f	file:
lem_sysctl_int_delay	dev/e1000/if_lem.c	/^lem_sysctl_int_delay(SYSCTL_HANDLER_ARGS)$/;"	f	file:
lem_sysctl_nvm_info	dev/e1000/if_lem.c	/^lem_sysctl_nvm_info(SYSCTL_HANDLER_ARGS)$/;"	f	file:
lem_sysctl_reg_handler	dev/e1000/if_lem.c	/^lem_sysctl_reg_handler(SYSCTL_HANDLER_ARGS)$/;"	f	file:
lem_transmit_checksum_setup	dev/e1000/if_lem.c	/^lem_transmit_checksum_setup(struct adapter *adapter, struct mbuf *mp,$/;"	f	file:
lem_tx_abs_int_delay_dflt	dev/e1000/if_lem.c	/^static int lem_tx_abs_int_delay_dflt = EM_TICKS_TO_USECS(EM_TADV);$/;"	v	file:
lem_tx_int_delay_dflt	dev/e1000/if_lem.c	/^static int lem_tx_int_delay_dflt = EM_TICKS_TO_USECS(EM_TIDV);$/;"	v	file:
lem_tx_purge	dev/e1000/if_lem.c	/^lem_tx_purge(struct adapter *adapter)$/;"	f	file:
lem_txd	dev/e1000/if_lem.c	/^static int lem_txd = EM_DEFAULT_TXD;$/;"	v	file:
lem_txeof	dev/e1000/if_lem.c	/^lem_txeof(struct adapter *adapter)$/;"	f	file:
lem_unregister_vlan	dev/e1000/if_lem.c	/^lem_unregister_vlan(void *arg, struct ifnet *ifp, u16 vtag)$/;"	f	file:
lem_update_link_status	dev/e1000/if_lem.c	/^lem_update_link_status(struct adapter *adapter)$/;"	f	file:
lem_update_stats_counters	dev/e1000/if_lem.c	/^lem_update_stats_counters(struct adapter *adapter)$/;"	f	file:
lem_use_legacy_irq	dev/e1000/if_lem.c	/^static int lem_use_legacy_irq = 0;$/;"	v	file:
lem_vendor_info_array	dev/e1000/if_lem.c	/^static em_vendor_info_t lem_vendor_info_array[] =$/;"	v	file:
lem_xmit	dev/e1000/if_lem.c	/^lem_xmit(struct adapter *adapter, struct mbuf **m_headp)$/;"	f	file:
len	if_compat.h	/^	int 			len;$/;"	m	struct:m_pkthdr
lenerrs	dev/e1000/e1000_hw.h	/^	u64 lenerrs;$/;"	m	struct:e1000_hw_stats
length	dev/e1000/e1000_82575.h	/^			__le16 length; \/* Packet length *\/$/;"	m	struct:e1000_adv_rx_desc::__anon38::__anon44
length	dev/e1000/e1000_hw.h	/^			__le16 length;  \/* Data buffer length *\/$/;"	m	struct:e1000_data_desc::__anon24::__anon25
length	dev/e1000/e1000_hw.h	/^			__le16 length;  \/* Data buffer length *\/$/;"	m	struct:e1000_tx_desc::__anon14::__anon15
length	dev/e1000/e1000_hw.h	/^			__le16 length;$/;"	m	struct:e1000_rx_desc_extended::__anon2::__anon6
length	dev/e1000/e1000_hw.h	/^			__le16 length[3];     \/* length of buffers 1-3 *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon8::__anon13
length	dev/e1000/e1000_hw.h	/^	__le16 length;      \/* Length of data DMAed into data buffer *\/$/;"	m	struct:e1000_rx_desc
length	dev/e1000/e1000_vf.h	/^			u16 length;           \/* Packet length *\/$/;"	m	struct:e1000_adv_rx_desc::__anon48::__anon54
length	dev/e1000/if_lem.h	/^	uint32_t   length;$/;"	m	struct:_ADDRESS_LENGTH_PAIR
length	if_em.h	/^    u_int32_t   length;$/;"	m	struct:_ADDRESS_LENGTH_PAIR
length	if_em_hw.h	/^            uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:em_data_desc::__anon90::__anon91
length	if_em_hw.h	/^            uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:em_tx_desc::__anon80::__anon81
length	if_em_hw.h	/^    uint16_t length;     \/* Length of data DMAed into data buffer *\/$/;"	m	struct:em_rx_desc
length	if_em_hw.h	/^    volatile uint32_t length;   \/* Flexible Filter Length (RW) *\/$/;"	m	struct:em_fflt_entry
length0	dev/e1000/e1000_hw.h	/^			__le16 length0;  \/* length of buffer 0 *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon8::__anon12
linkChangeSem	device.h	/^	sem_id				linkChangeSem;$/;"	m	struct:device
link_active	dev/e1000/if_em.h	/^	u16		link_active;$/;"	m	struct:adapter
link_active	dev/e1000/if_igb.h	/^	u16		link_active;$/;"	m	struct:adapter
link_active	dev/e1000/if_lem.h	/^	uint8_t		link_active;$/;"	m	struct:adapter
link_active	if_em.h	/^	u_int8_t        link_active;$/;"	m	struct:adapter
link_duplex	dev/e1000/if_em.h	/^	u16		link_duplex;$/;"	m	struct:adapter
link_duplex	dev/e1000/if_igb.h	/^	u16		link_duplex;$/;"	m	struct:adapter
link_duplex	dev/e1000/if_lem.h	/^	uint16_t	link_duplex;$/;"	m	struct:adapter
link_duplex	if_em.h	/^	u_int16_t       link_duplex;$/;"	m	struct:adapter
link_irq	dev/e1000/if_em.h	/^	unsigned long	link_irq;$/;"	m	struct:adapter
link_irq	dev/e1000/if_igb.h	/^	int		link_irq;$/;"	m	struct:adapter
link_irq	dev/e1000/if_lem.h	/^	unsigned long	link_irq;$/;"	m	struct:adapter
link_mask	dev/e1000/if_igb.h	/^	int		link_mask;$/;"	m	struct:adapter
link_speed	dev/e1000/if_em.h	/^	u16		link_speed;$/;"	m	struct:adapter
link_speed	dev/e1000/if_igb.h	/^	u16		link_speed;$/;"	m	struct:adapter
link_speed	dev/e1000/if_lem.h	/^	uint16_t	link_speed;$/;"	m	struct:adapter
link_speed	if_em.h	/^	u_int16_t       link_speed;$/;"	m	struct:adapter
link_task	dev/e1000/if_em.h	/^	struct task     link_task;$/;"	m	struct:adapter	typeref:struct:adapter::task
link_task	dev/e1000/if_igb.h	/^	struct task	link_task;$/;"	m	struct:adapter	typeref:struct:adapter::task
link_task	dev/e1000/if_lem.h	/^	struct task     link_task;$/;"	m	struct:adapter	typeref:struct:adapter::task
linkvec	dev/e1000/if_em.h	/^	u32		linkvec;$/;"	m	struct:adapter
linkvec	dev/e1000/if_igb.h	/^	int		linkvec;$/;"	m	struct:adapter
lmp	dev/e1000/if_em.h	/^	struct mbuf		*lmp;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::mbuf
lmp	dev/e1000/if_igb.h	/^	struct mbuf	       *lmp;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::mbuf
lmp	dev/e1000/if_lem.h	/^	struct mbuf	       *lmp;$/;"	m	struct:adapter	typeref:struct:adapter::mbuf
lmp	if_em.h	/^	struct mbuf        *lmp;$/;"	m	struct:adapter	typeref:struct:adapter::mbuf
lo_dword	dev/e1000/e1000_82575.h	/^			} lo_dword;$/;"	m	struct:e1000_adv_rx_desc::__anon38::__anon39	typeref:union:e1000_adv_rx_desc::__anon38::__anon39::__anon40
lo_dword	dev/e1000/e1000_vf.h	/^			} lo_dword;$/;"	m	struct:e1000_adv_rx_desc::__anon48::__anon49	typeref:union:e1000_adv_rx_desc::__anon48::__anon49::__anon50
local_rx	dev/e1000/e1000_hw.h	/^	enum e1000_1000t_rx_status local_rx;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_1000t_rx_status
local_rx	if_em_hw.h	/^    em_1000t_rx_status local_rx;$/;"	m	struct:em_phy_info
low	if_em_hw.h	/^    volatile uint32_t low;      \/* receive address low *\/$/;"	m	struct:em_rar
low_water	dev/e1000/e1000_hw.h	/^	u32 low_water;  \/* Flow control low-water mark *\/$/;"	m	struct:e1000_fc_info
lower	dev/e1000/e1000_82575.h	/^		} lower;$/;"	m	struct:e1000_adv_rx_desc::__anon38	typeref:struct:e1000_adv_rx_desc::__anon38::__anon39
lower	dev/e1000/e1000_82575.h	/^	} lower;$/;"	m	struct:e1000_adv_data_desc	typeref:union:e1000_adv_data_desc::__anon29
lower	dev/e1000/e1000_hw.h	/^		} lower;$/;"	m	struct:e1000_rx_desc_extended::__anon2	typeref:struct:e1000_rx_desc_extended::__anon2::__anon3
lower	dev/e1000/e1000_hw.h	/^		} lower;$/;"	m	struct:e1000_rx_desc_packet_split::__anon8	typeref:struct:e1000_rx_desc_packet_split::__anon8::__anon9
lower	dev/e1000/e1000_hw.h	/^	} lower;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon24
lower	dev/e1000/e1000_hw.h	/^	} lower;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon14
lower	dev/e1000/e1000_vf.h	/^		} lower;$/;"	m	struct:e1000_adv_rx_desc::__anon48	typeref:struct:e1000_adv_rx_desc::__anon48::__anon49
lower	if_em_hw.h	/^    } lower;$/;"	m	struct:em_data_desc	typeref:union:em_data_desc::__anon90
lower	if_em_hw.h	/^    } lower;$/;"	m	struct:em_tx_desc	typeref:union:em_tx_desc::__anon80
lower_setup	dev/e1000/e1000_hw.h	/^	} lower_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon18
lower_setup	if_em_hw.h	/^    } lower_setup;$/;"	m	struct:em_context_desc	typeref:union:em_context_desc::__anon84
lro	dev/e1000/if_igb.h	/^	struct lro_ctrl		lro;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::lro_ctrl
lro_enabled	dev/e1000/if_igb.h	/^	bool			lro_enabled;$/;"	m	struct:rx_ring
m_adj	if_compat.c	/^m_adj(struct mbuf *mp, int bytes)$/;"	f
m_clget	if_compat.c	/^m_clget(struct mbuf * m, int how)$/;"	f
m_data	if_compat.h	/^	void *			m_data;$/;"	m	struct:mbuf
m_ext	if_compat.h	/^	struct m_ext 	m_ext;$/;"	m	struct:mbuf	typeref:struct:mbuf::m_ext
m_ext	if_compat.h	/^struct m_ext$/;"	s
m_flags	if_compat.h	/^	int 			m_flags;$/;"	m	struct:mbuf
m_freem	if_compat.c	/^m_freem(struct mbuf *mp)$/;"	f
m_gethdr	if_compat.c	/^m_gethdr(int how, int type)$/;"	f
m_head	dev/e1000/if_em.h	/^        struct mbuf    *m_head;$/;"	m	struct:em_buffer	typeref:struct:em_buffer::mbuf
m_head	dev/e1000/if_igb.h	/^        struct mbuf    *m_head;$/;"	m	struct:igb_rx_buf	typeref:struct:igb_rx_buf::mbuf
m_head	dev/e1000/if_igb.h	/^        struct mbuf    *m_head;$/;"	m	struct:igb_tx_buffer	typeref:struct:igb_tx_buffer::mbuf
m_head	dev/e1000/if_lem.h	/^        struct mbuf    *m_head;$/;"	m	struct:em_buffer	typeref:struct:em_buffer::mbuf
m_head	if_em.h	/^	struct mbuf    *m_head;$/;"	m	struct:em_buffer	typeref:struct:em_buffer::mbuf
m_len	if_compat.h	/^	int				m_len;$/;"	m	struct:mbuf
m_next	if_compat.h	/^	struct mbuf *	m_next;		\/\/ next buffer in chain (e.g. for jumboframes)$/;"	m	struct:mbuf	typeref:struct:mbuf::mbuf
m_nextq	if_compat.h	/^	struct mbuf *	m_nextq;	\/\/ next buffer in queue$/;"	m	struct:mbuf	typeref:struct:mbuf::mbuf
m_pack	dev/e1000/if_igb.h	/^        struct mbuf    *m_pack;$/;"	m	struct:igb_rx_buf	typeref:struct:igb_rx_buf::mbuf
m_pkthdr	if_compat.h	/^	struct m_pkthdr	m_pkthdr;$/;"	m	struct:mbuf	typeref:struct:mbuf::m_pkthdr
m_pkthdr	if_compat.h	/^struct m_pkthdr$/;"	s
mac	dev/e1000/e1000_hw.h	/^	struct e1000_mac_info  mac;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_mac_info
mac	dev/e1000/e1000_vf.h	/^	struct e1000_mac_info  mac;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_mac_info
mac_addr	if_em_hw.h	/^    uint8_t mac_addr[NODE_ADDRESS_SIZE];$/;"	m	struct:em_hw
mac_type	if_em_hw.h	/^    em_mac_type mac_type;$/;"	m	struct:em_hw
macaddr	device.h	/^	uint8				macaddr[6];$/;"	m	struct:device
maclen	dev/e1000/e1000_82575.h	/^			u32 maclen:7;$/;"	m	struct:e1000_adv_context_desc::__anon33::__anon34
malloc	device.c	39;"	d	file:
malloc	if_compat.c	25;"	d	file:
malloc	if_em_osdep.c	23;"	d	file:
malloc	if_em_osdep.h	165;"	d
malloc	if_em_osdep.h	166;"	d
map	dev/e1000/if_em.h	/^        bus_dmamap_t    map;         \/* bus_dma map for packet *\/$/;"	m	struct:em_buffer
map	dev/e1000/if_igb.h	/^        bus_dmamap_t    map;         \/* bus_dma map for packet *\/$/;"	m	struct:igb_tx_buffer
map	dev/e1000/if_lem.h	/^        bus_dmamap_t    map;         \/* bus_dma map for packet *\/$/;"	m	struct:em_buffer
map_mem	util.c	/^map_mem(void **virt, void *phy, size_t size, uint32 protection, const char *name)$/;"	f
mask	if_em_hw.h	/^    volatile uint32_t mask;     \/* Flexible Filter Mask (RW) *\/$/;"	m	struct:em_ffmt_entry
master_slave	if_em_hw.h	/^    em_ms_type master_slave;$/;"	m	struct:em_hw
max_cable_length	dev/e1000/e1000_hw.h	/^	u16 max_cable_length;$/;"	m	struct:e1000_phy_info
max_frame_size	dev/e1000/e1000_hw.h	/^	u32 max_frame_size;$/;"	m	struct:e1000_mac_info
max_frame_size	dev/e1000/if_em.h	/^	int		max_frame_size;$/;"	m	struct:adapter
max_frame_size	dev/e1000/if_igb.h	/^	int		max_frame_size;$/;"	m	struct:adapter
max_frame_size	dev/e1000/if_lem.h	/^	int		max_frame_size;$/;"	m	struct:adapter
max_frame_size	if_em_hw.h	/^    uint32_t max_frame_size;$/;"	m	struct:em_hw
maxframesize	device.h	/^	uint32				maxframesize;	\/\/ 14 bytes header + MTU$/;"	m	struct:device
mb	dev/e1000/e1000_osdep.h	113;"	d
mb	dev/e1000/e1000_osdep.h	117;"	d
mbuf	if_compat.h	/^struct mbuf$/;"	s
mbuf_alloc_failed	dev/e1000/if_em.h	/^	unsigned long	mbuf_alloc_failed;$/;"	m	struct:adapter
mbuf_alloc_failed	dev/e1000/if_lem.h	/^	unsigned long	mbuf_alloc_failed;$/;"	m	struct:adapter
mbuf_alloc_failed	if_em.h	/^	unsigned long   mbuf_alloc_failed;$/;"	m	struct:adapter
mbuf_cluster_failed	dev/e1000/if_em.h	/^	unsigned long	mbuf_cluster_failed;$/;"	m	struct:adapter
mbuf_cluster_failed	dev/e1000/if_lem.h	/^	unsigned long	mbuf_cluster_failed;$/;"	m	struct:adapter
mbuf_cluster_failed	if_em.h	/^	unsigned long   mbuf_cluster_failed;$/;"	m	struct:adapter
mbuf_defrag_failed	dev/e1000/if_igb.h	/^	unsigned long	mbuf_defrag_failed;$/;"	m	struct:adapter
mbuf_head	mempool.c	/^void *mbuf_head = 0;$/;"	v
mbuf_header_failed	dev/e1000/if_igb.h	/^	unsigned long	mbuf_header_failed;$/;"	m	struct:adapter
mbuf_lock	if_compat.c	/^spinlock	mbuf_lock = 0;$/;"	v
mbuf_packet_failed	dev/e1000/if_igb.h	/^	unsigned long	mbuf_packet_failed;$/;"	m	struct:adapter
mbuf_pool	mempool.c	/^void *mbuf_pool = 0;$/;"	v
mbuf_pool_get	mempool.c	/^mbuf_pool_get(void)$/;"	f
mbuf_pool_lock	mempool.c	/^spinlock mbuf_pool_lock = 0;$/;"	v
mbuf_pool_put	mempool.c	/^mbuf_pool_put(void *p)$/;"	f
mbx	dev/e1000/e1000_hw.h	/^	struct e1000_mbx_info mbx;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_mbx_info
mbx	dev/e1000/e1000_vf.h	/^	struct e1000_mbx_info mbx;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_mbx_info
mc_filter_type	dev/e1000/e1000_hw.h	/^	u32 mc_filter_type;$/;"	m	struct:e1000_mac_info
mc_filter_type	if_em_hw.h	/^    uint32_t mc_filter_type;$/;"	m	struct:em_hw
mcc	dev/e1000/e1000_hw.h	/^	u64 mcc;$/;"	m	struct:e1000_hw_stats
mcc	if_em_hw.h	/^    uint64_t mcc;$/;"	m	struct:em_hw_stats
mdic_wa_enable	dev/e1000/e1000_hw.h	/^	bool  mdic_wa_enable;$/;"	m	struct:e1000_dev_spec_80003es2lan
mdix	dev/e1000/e1000_hw.h	/^	u8 mdix;$/;"	m	struct:e1000_phy_info
mdix	if_em_hw.h	/^    uint8_t mdix;$/;"	m	struct:em_hw
mdix_mode	if_em_hw.h	/^    em_auto_x_mode mdix_mode;$/;"	m	struct:em_phy_info
me	dev/e1000/if_em.h	/^        u32                     me;$/;"	m	struct:rx_ring
me	dev/e1000/if_em.h	/^        u32                     me;$/;"	m	struct:tx_ring
me	dev/e1000/if_igb.h	/^	u32			me;$/;"	m	struct:rx_ring
me	dev/e1000/if_igb.h	/^	u32			me;$/;"	m	struct:tx_ring
media	dev/e1000/if_em.h	/^	struct ifmedia	media;$/;"	m	struct:adapter	typeref:struct:adapter::ifmedia
media	dev/e1000/if_igb.h	/^	struct ifmedia	media;$/;"	m	struct:adapter	typeref:struct:adapter::ifmedia
media	dev/e1000/if_lem.h	/^	struct ifmedia	media;$/;"	m	struct:adapter	typeref:struct:adapter::ifmedia
media	if_em.h	/^	struct ifmedia  media;$/;"	m	struct:adapter	typeref:struct:adapter::ifmedia
media_type	dev/e1000/e1000_hw.h	/^	enum e1000_media_type media_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_media_type
media_type	if_em_hw.h	/^    em_media_type media_type;$/;"	m	struct:em_hw
mem_bus_space_handle	dev/e1000/e1000_osdep.h	/^	bus_space_handle_t mem_bus_space_handle;$/;"	m	struct:e1000_osdep
mem_bus_space_tag	dev/e1000/e1000_osdep.h	/^	bus_space_tag_t    mem_bus_space_tag;$/;"	m	struct:e1000_osdep
memory	dev/e1000/if_em.h	/^	struct resource *memory;$/;"	m	struct:adapter	typeref:struct:adapter::resource
memory	dev/e1000/if_lem.h	/^	struct resource *memory;$/;"	m	struct:adapter	typeref:struct:adapter::resource
mempool_exit	mempool.c	/^mempool_exit(void)$/;"	f
mempool_init	mempool.c	/^mempool_init(int count)$/;"	f
mgpdc	dev/e1000/e1000_hw.h	/^	u64 mgpdc;$/;"	m	struct:e1000_hw_stats
mgpdc	if_em_hw.h	/^    uint64_t mgpdc;$/;"	m	struct:em_hw_stats
mgprc	dev/e1000/e1000_hw.h	/^	u64 mgprc;$/;"	m	struct:e1000_hw_stats
mgprc	if_em_hw.h	/^    uint64_t mgprc;$/;"	m	struct:em_hw_stats
mgptc	dev/e1000/e1000_hw.h	/^	u64 mgptc;$/;"	m	struct:e1000_hw_stats
mgptc	if_em_hw.h	/^    uint64_t mgptc;$/;"	m	struct:em_hw_stats
middle	dev/e1000/e1000_hw.h	/^		} middle;$/;"	m	struct:e1000_rx_desc_packet_split::__anon8	typeref:struct:e1000_rx_desc_packet_split::__anon8::__anon12
min_cable_length	dev/e1000/e1000_hw.h	/^	u16 min_cable_length;$/;"	m	struct:e1000_phy_info
min_frame_size	dev/e1000/if_em.h	/^	int		min_frame_size;$/;"	m	struct:adapter
min_frame_size	dev/e1000/if_igb.h	/^	int		min_frame_size;$/;"	m	struct:adapter
min_frame_size	dev/e1000/if_lem.h	/^	int		min_frame_size;$/;"	m	struct:adapter
min_frame_size	if_em_hw.h	/^    uint32_t min_frame_size;$/;"	m	struct:em_hw
mkrloc	dev/e1000/e1000_82575.h	/^			u32 mkrloc:9;$/;"	m	struct:e1000_adv_context_desc::__anon35::__anon36
mng_cookie	dev/e1000/e1000_hw.h	/^	struct e1000_host_mng_dhcp_cookie mng_cookie;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_host_mng_dhcp_cookie
modified	dev/e1000/e1000_hw.h	/^	bool modified;$/;"	m	struct:e1000_shadow_ram
module_plugged	dev/e1000/e1000_hw.h	/^	bool module_plugged;$/;"	m	struct:e1000_dev_spec_82575
mpc	dev/e1000/e1000_hw.h	/^	u64 mpc;$/;"	m	struct:e1000_hw_stats
mpc	if_em_hw.h	/^    uint64_t mpc;$/;"	m	struct:em_hw_stats
mprc	dev/e1000/e1000_hw.h	/^	u64 mprc;$/;"	m	struct:e1000_hw_stats
mprc	dev/e1000/e1000_hw.h	/^	u64 mprc;$/;"	m	struct:e1000_vf_stats
mprc	dev/e1000/e1000_vf.h	/^	u64 mprc;$/;"	m	struct:e1000_vf_stats
mprc	if_em_hw.h	/^    uint64_t mprc;$/;"	m	struct:em_hw_stats
mptc	dev/e1000/e1000_hw.h	/^	u64 mptc;$/;"	m	struct:e1000_hw_stats
mptc	if_em_hw.h	/^    uint64_t mptc;$/;"	m	struct:em_hw_stats
mrq	dev/e1000/e1000_hw.h	/^			__le32 mrq;  \/* Multiple Rx Queues *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon8::__anon9
mrq	dev/e1000/e1000_hw.h	/^			__le32 mrq; \/* Multiple Rx Queues *\/$/;"	m	struct:e1000_rx_desc_extended::__anon2::__anon3
ms_type	dev/e1000/e1000_hw.h	/^	enum e1000_ms_type ms_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_ms_type
msec_delay	dev/e1000/e1000_osdep.h	63;"	d
msec_delay	if_em_osdep.h	52;"	d
msec_delay_irq	dev/e1000/e1000_osdep.h	64;"	d
msgs_rx	dev/e1000/e1000_hw.h	/^	u32 msgs_rx;$/;"	m	struct:e1000_mbx_stats
msgs_rx	dev/e1000/e1000_vf.h	/^	u32 msgs_rx;$/;"	m	struct:e1000_mbx_stats
msgs_tx	dev/e1000/e1000_hw.h	/^	u32 msgs_tx;$/;"	m	struct:e1000_mbx_stats
msgs_tx	dev/e1000/e1000_vf.h	/^	u32 msgs_tx;$/;"	m	struct:e1000_mbx_stats
msi	dev/e1000/if_lem.h	/^	int		msi;$/;"	m	struct:adapter
msix	dev/e1000/if_em.h	/^	int		msix;$/;"	m	struct:adapter
msix	dev/e1000/if_em.h	/^        u32                     msix;$/;"	m	struct:rx_ring
msix	dev/e1000/if_em.h	/^        u32                     msix;$/;"	m	struct:tx_ring
msix	dev/e1000/if_igb.h	/^	int		msix;	\/* total vectors allocated *\/$/;"	m	struct:adapter
msix	dev/e1000/if_igb.h	/^	u32			msix;		\/* This queue's MSIX vector *\/$/;"	m	struct:igb_queue
msix	dev/e1000/if_lem.h	/^	struct resource *msix;$/;"	m	struct:adapter	typeref:struct:adapter::resource
msix_mem	dev/e1000/if_em.h	/^	struct resource *msix_mem;$/;"	m	struct:adapter	typeref:struct:adapter::resource
msix_mem	dev/e1000/if_igb.h	/^	struct resource *msix_mem;$/;"	m	struct:adapter	typeref:struct:adapter::resource
mss	dev/e1000/e1000_82575.h	/^			u32 mss:16;$/;"	m	struct:e1000_adv_context_desc::__anon35::__anon36
mss	dev/e1000/e1000_hw.h	/^			__le16 mss;  \/* Maximum segment size *\/$/;"	m	struct:e1000_context_desc::__anon22::__anon23
mss	if_em_hw.h	/^            uint16_t mss;       \/* Maximum segment size *\/$/;"	m	struct:em_context_desc::__anon88::__anon89
mss_l4len_idx	dev/e1000/e1000_82575.h	/^	__le32 mss_l4len_idx;$/;"	m	struct:e1000_adv_tx_context_desc
mss_l4len_idx	dev/e1000/e1000_vf.h	/^	u32 mss_l4len_idx;$/;"	m	struct:e1000_adv_tx_context_desc
mta	dev/e1000/if_em.h	/^	u8		*mta;$/;"	m	struct:adapter
mta	dev/e1000/if_igb.h	/^	u8			*mta;$/;"	m	struct:adapter
mta	dev/e1000/if_lem.h	/^	u8		*mta;$/;"	m	struct:adapter
mta_reg_count	dev/e1000/e1000_hw.h	/^	u16 mta_reg_count;$/;"	m	struct:e1000_mac_info
mta_reg_count	dev/e1000/e1000_vf.h	/^	u16 mta_reg_count;$/;"	m	struct:e1000_mac_info
mta_shadow	dev/e1000/e1000_hw.h	/^	u32 mta_shadow[MAX_MTA_REG];$/;"	m	struct:e1000_mac_info
mtod	if_compat.h	193;"	d
mtu	dev/e1000/e1000_hw.h	/^	u32 mtu;$/;"	m	struct:e1000_dev_spec_82575
mtx_name	dev/e1000/if_em.h	/^        char                    mtx_name[16];$/;"	m	struct:rx_ring
mtx_name	dev/e1000/if_em.h	/^        char                    mtx_name[16];$/;"	m	struct:tx_ring
mtx_name	dev/e1000/if_igb.h	/^	char			mtx_name[16];$/;"	m	struct:rx_ring
mtx_name	dev/e1000/if_igb.h	/^	char			mtx_name[16];$/;"	m	struct:tx_ring
next_avail_desc	dev/e1000/if_em.h	/^        u32                     next_avail_desc;$/;"	m	struct:tx_ring
next_avail_desc	dev/e1000/if_igb.h	/^	u32			next_avail_desc;$/;"	m	struct:tx_ring
next_avail_tx_desc	dev/e1000/if_lem.h	/^	uint32_t		next_avail_tx_desc;$/;"	m	struct:adapter
next_avail_tx_desc	if_em.h	/^        u_int32_t          next_avail_tx_desc;$/;"	m	struct:adapter
next_eop	dev/e1000/if_em.h	/^	int		next_eop;  \/* Index of the desc to watch *\/$/;"	m	struct:em_buffer
next_eop	dev/e1000/if_igb.h	/^	int		next_eop;  \/* Index of the desc to watch *\/$/;"	m	struct:igb_tx_buffer
next_eop	dev/e1000/if_lem.h	/^	int		next_eop;  \/* Index of the desc to watch *\/$/;"	m	struct:em_buffer
next_event	timer.c	/^	bigtime_t		next_event;$/;"	m	struct:timer_info	file:
next_rx_desc_to_check	dev/e1000/if_lem.h	/^	uint32_t		next_rx_desc_to_check;$/;"	m	struct:adapter
next_rx_desc_to_check	if_em.h	/^        u_int32_t          next_rx_desc_to_check;$/;"	m	struct:adapter
next_to_check	dev/e1000/if_em.h	/^        u32			next_to_check;$/;"	m	struct:rx_ring
next_to_check	dev/e1000/if_igb.h	/^	u32			next_to_check;$/;"	m	struct:rx_ring
next_to_clean	dev/e1000/if_em.h	/^        u32                     next_to_clean;$/;"	m	struct:tx_ring
next_to_clean	dev/e1000/if_igb.h	/^	u32			next_to_clean;$/;"	m	struct:tx_ring
next_to_refresh	dev/e1000/if_em.h	/^        u32			next_to_refresh;$/;"	m	struct:rx_ring
next_to_refresh	dev/e1000/if_igb.h	/^	u32			next_to_refresh;$/;"	m	struct:rx_ring
next_tx_to_clean	dev/e1000/if_lem.h	/^	uint32_t		next_tx_to_clean;$/;"	m	struct:adapter
no_desc_avail	dev/e1000/if_em.h	/^        unsigned long		no_desc_avail;$/;"	m	struct:tx_ring
no_desc_avail	dev/e1000/if_igb.h	/^	u64			no_desc_avail;$/;"	m	struct:tx_ring
no_pkts_avail	if_em.h	/^	unsigned long   no_pkts_avail;$/;"	m	struct:adapter
no_tx_desc_avail1	dev/e1000/if_lem.h	/^	unsigned long	no_tx_desc_avail1;$/;"	m	struct:adapter
no_tx_desc_avail1	if_em.h	/^	unsigned long   no_tx_desc_avail1;$/;"	m	struct:adapter
no_tx_desc_avail2	dev/e1000/if_lem.h	/^	unsigned long	no_tx_desc_avail2;$/;"	m	struct:adapter
no_tx_desc_avail2	if_em.h	/^	unsigned long   no_tx_desc_avail2;$/;"	m	struct:adapter
no_tx_dma_setup	dev/e1000/if_em.h	/^        unsigned long	no_tx_dma_setup;$/;"	m	struct:adapter
no_tx_dma_setup	dev/e1000/if_igb.h	/^        unsigned long	no_tx_dma_setup;$/;"	m	struct:adapter
no_tx_dma_setup	dev/e1000/if_lem.h	/^        unsigned long	no_tx_dma_setup;$/;"	m	struct:adapter
no_tx_map_avail	dev/e1000/if_em.h	/^	unsigned long	no_tx_map_avail;$/;"	m	struct:adapter
no_tx_map_avail	dev/e1000/if_igb.h	/^	unsigned long	no_tx_map_avail;$/;"	m	struct:adapter
no_tx_map_avail	dev/e1000/if_lem.h	/^	unsigned long	no_tx_map_avail;$/;"	m	struct:adapter
nonblocking	device.h	/^	volatile bool		nonblocking;$/;"	m	struct:device
num_mc_addrs	if_em_hw.h	/^    uint32_t num_mc_addrs;$/;"	m	struct:em_hw
num_queues	dev/e1000/if_em.h	/^	u16	num_queues;$/;"	m	struct:adapter
num_queues	dev/e1000/if_igb.h	/^        u16		num_queues;$/;"	m	struct:adapter
num_rx_desc	dev/e1000/if_em.h	/^        int             num_rx_desc;$/;"	m	struct:adapter
num_rx_desc	dev/e1000/if_igb.h	/^        u16			num_rx_desc;$/;"	m	struct:adapter
num_rx_desc	dev/e1000/if_lem.h	/^	uint16_t		num_rx_desc;$/;"	m	struct:adapter
num_rx_desc	if_em.h	/^        u_int16_t          num_rx_desc;$/;"	m	struct:adapter
num_tx_desc	dev/e1000/if_em.h	/^        int             num_tx_desc;$/;"	m	struct:adapter
num_tx_desc	dev/e1000/if_igb.h	/^        u16			num_tx_desc;$/;"	m	struct:adapter
num_tx_desc	dev/e1000/if_lem.h	/^        uint16_t		num_tx_desc;$/;"	m	struct:adapter
num_tx_desc	if_em.h	/^        u_int16_t          num_tx_desc;$/;"	m	struct:adapter
num_tx_desc_avail	dev/e1000/if_lem.h	/^	volatile uint16_t	num_tx_desc_avail;$/;"	m	struct:adapter
num_tx_desc_avail	if_em.h	/^        volatile u_int16_t num_tx_desc_avail;$/;"	m	struct:adapter
num_vlans	dev/e1000/if_em.h	/^	u16	num_vlans;$/;"	m	struct:adapter
num_vlans	dev/e1000/if_igb.h	/^	u32		num_vlans;$/;"	m	struct:adapter
num_vlans	dev/e1000/if_lem.h	/^	u32	num_vlans;$/;"	m	struct:adapter
nvm	dev/e1000/e1000_hw.h	/^	struct e1000_nvm_info  nvm;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_nvm_info
nvm_k1_enabled	dev/e1000/e1000_hw.h	/^	bool nvm_k1_enabled;$/;"	m	struct:e1000_dev_spec_ich8lan
nvm_mutex	dev/e1000/e1000_hw.h	/^	E1000_MUTEX nvm_mutex;$/;"	m	struct:e1000_dev_spec_ich8lan
nxtseq_seed	dev/e1000/e1000_82575.h	/^		__le32 nxtseq_seed;$/;"	m	struct:e1000_adv_tx_desc::__anon46
nxtseq_seed	dev/e1000/e1000_vf.h	/^		u32 nxtseq_seed;$/;"	m	struct:e1000_adv_tx_desc::__anon56
o2bgptc	dev/e1000/e1000_hw.h	/^	u64 o2bgptc;$/;"	m	struct:e1000_hw_stats
o2bspc	dev/e1000/e1000_hw.h	/^	u64 o2bspc;$/;"	m	struct:e1000_hw_stats
offset	dev/e1000/if_em.h	/^	int offset;			\/* Register offset to read\/write *\/$/;"	m	struct:em_int_delay_info
offset	dev/e1000/if_lem.h	/^	int offset;			\/* Register offset to read\/write *\/$/;"	m	struct:em_int_delay_info
offset	if_em.h	/^        int offset;                     \/* Register offset to read\/write *\/$/;"	m	struct:em_int_delay_info
oldest_used_tx_desc	if_em.h	/^	u_int32_t          oldest_used_tx_desc;$/;"	m	struct:adapter
olinfo_status	dev/e1000/e1000_82575.h	/^		__le32 olinfo_status;$/;"	m	struct:e1000_adv_tx_desc::__anon45
olinfo_status	dev/e1000/e1000_vf.h	/^		u32 olinfo_status;$/;"	m	struct:e1000_adv_tx_desc::__anon55
opcode_bits	dev/e1000/e1000_hw.h	/^	u16 opcode_bits;$/;"	m	struct:e1000_nvm_info
opcode_bits	if_em_hw.h	/^    uint16_t opcode_bits;$/;"	m	struct:em_eeprom_info
ops	dev/e1000/e1000_hw.h	/^	struct e1000_mac_operations ops;$/;"	m	struct:e1000_mac_info	typeref:struct:e1000_mac_info::e1000_mac_operations
ops	dev/e1000/e1000_hw.h	/^	struct e1000_mbx_operations ops;$/;"	m	struct:e1000_mbx_info	typeref:struct:e1000_mbx_info::e1000_mbx_operations
ops	dev/e1000/e1000_hw.h	/^	struct e1000_nvm_operations ops;$/;"	m	struct:e1000_nvm_info	typeref:struct:e1000_nvm_info::e1000_nvm_operations
ops	dev/e1000/e1000_hw.h	/^	struct e1000_phy_operations ops;$/;"	m	struct:e1000_phy_info	typeref:struct:e1000_phy_info::e1000_phy_operations
ops	dev/e1000/e1000_vf.h	/^	struct e1000_mac_operations ops;$/;"	m	struct:e1000_mac_info	typeref:struct:e1000_mac_info::e1000_mac_operations
ops	dev/e1000/e1000_vf.h	/^	struct e1000_mbx_operations ops;$/;"	m	struct:e1000_mbx_info	typeref:struct:e1000_mbx_info::e1000_mbx_operations
options	dev/e1000/e1000_82575.h	/^		} options;$/;"	m	union:e1000_adv_data_desc::__anon31	typeref:struct:e1000_adv_data_desc::__anon31::__anon32
original_fc	if_em_hw.h	/^    uint32_t original_fc;$/;"	m	struct:em_hw
original_master_slave	if_em_hw.h	/^    em_ms_type original_master_slave;$/;"	m	struct:em_hw
original_ms_type	dev/e1000/e1000_hw.h	/^	enum e1000_ms_type original_ms_type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_ms_type
osdep	dev/e1000/if_em.h	/^	struct e1000_osdep osdep;$/;"	m	struct:adapter	typeref:struct:adapter::e1000_osdep
osdep	dev/e1000/if_igb.h	/^	struct e1000_osdep osdep;$/;"	m	struct:adapter	typeref:struct:adapter::e1000_osdep
osdep	dev/e1000/if_lem.h	/^	struct e1000_osdep osdep;$/;"	m	struct:adapter	typeref:struct:adapter::e1000_osdep
osdep	if_em.h	/^	struct em_osdep osdep;$/;"	m	struct:adapter	typeref:struct:adapter::em_osdep
outl	if_em_osdep.h	110;"	d
override	dev/e1000/e1000_hw.h	/^	enum e1000_nvm_override override;$/;"	m	struct:e1000_nvm_info	typeref:enum:e1000_nvm_info::e1000_nvm_override
packet_buf_alloc_rx	dev/e1000/if_igb.h	/^	unsigned long	packet_buf_alloc_rx;$/;"	m	struct:adapter
packet_buf_alloc_tx	dev/e1000/if_igb.h	/^	unsigned long	packet_buf_alloc_tx;$/;"	m	struct:adapter
packets	dev/e1000/if_igb.h	/^	u32			packets;$/;"	m	struct:rx_ring
packets	dev/e1000/if_igb.h	/^	u32			packets;$/;"	m	struct:tx_ring
page_size	dev/e1000/e1000_hw.h	/^	u16 page_size;$/;"	m	struct:e1000_nvm_info
page_size	if_em_hw.h	/^    uint16_t page_size;$/;"	m	struct:em_eeprom_info
part_num	if_em.h	/^	u_int32_t       part_num;$/;"	m	struct:adapter
pause_frames	dev/e1000/if_em.h	/^	int		pause_frames;$/;"	m	struct:adapter
pause_frames	dev/e1000/if_igb.h	/^	int		pause_frames;$/;"	m	struct:adapter
pause_time	dev/e1000/e1000_hw.h	/^	u16 pause_time;  \/* Flow control pause timer *\/$/;"	m	struct:e1000_fc_info
paylen	dev/e1000/e1000_82575.h	/^			u32 paylen:18; \/* Payload length *\/$/;"	m	struct:e1000_adv_data_desc::__anon31::__anon32
payload	dev/e1000/if_em.h	/^        u32                     payload;$/;"	m	struct:rx_ring
pba_block	dev/e1000/e1000_nvm.h	/^	u16 *pba_block;$/;"	m	struct:e1000_pba
pciBus	device.h	/^	uint8				pciBus;$/;"	m	struct:device
pciDev	device.h	/^	uint8				pciDev;$/;"	m	struct:device
pciFunc	device.h	/^	uint8				pciFunc;$/;"	m	struct:device
pciInfo	device.h	/^	pci_info *			pciInfo;$/;"	m	struct:device
pci_cmd_word	dev/e1000/e1000_hw.h	/^	u16 pci_cmd_word;$/;"	m	struct:e1000_bus_info
pci_cmd_word	if_em_hw.h	/^    uint16_t pci_cmd_word;$/;"	m	struct:em_hw
pci_get_device	if_em_osdep.h	104;"	d
pci_get_vendor	if_em_osdep.h	101;"	d
pci_mem	dev/e1000/if_igb.h	/^	struct resource *pci_mem;$/;"	m	struct:adapter	typeref:struct:adapter::resource
pci_read_config	if_em_osdep.h	95;"	d
pci_write_config	if_em_osdep.h	98;"	d
pcix_82544	dev/e1000/if_lem.h	/^	boolean_t       pcix_82544;$/;"	m	struct:adapter
pcix_82544	if_em.h	/^	boolean_t pcix_82544;$/;"	m	struct:adapter
periodic	timer.c	/^	bool			periodic;$/;"	m	struct:timer_info	file:
perm_addr	dev/e1000/e1000_hw.h	/^	u8 perm_addr[ETH_ADDR_LEN];$/;"	m	struct:e1000_mac_info
perm_addr	dev/e1000/e1000_vf.h	/^	u8 perm_addr[6];$/;"	m	struct:e1000_mac_info
perm_mac_addr	if_em_hw.h	/^    uint8_t perm_mac_addr[NODE_ADDRESS_SIZE];$/;"	m	struct:em_hw
phy	dev/e1000/e1000_hw.h	/^	struct e1000_phy_info  phy;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_phy_info
phy_addr	if_em_hw.h	/^    uint32_t phy_addr;$/;"	m	struct:em_hw
phy_id	if_em_hw.h	/^    uint32_t phy_id;$/;"	m	struct:em_hw
phy_init_script	dev/e1000/e1000_hw.h	/^	bool phy_init_script;$/;"	m	struct:e1000_dev_spec_82541
phy_init_script	if_em_hw.h	/^    uint32_t phy_init_script;$/;"	m	struct:em_hw
phy_reset_disable	if_em_hw.h	/^    boolean_t phy_reset_disable;$/;"	m	struct:em_hw
phy_revision	if_em_hw.h	/^    uint32_t phy_revision;$/;"	m	struct:em_hw
phy_spd_default	if_em_hw.h	/^    uint16_t phy_spd_default;$/;"	m	struct:em_hw
phy_type	if_em_hw.h	/^    em_phy_type phy_type;$/;"	m	struct:em_hw
pkt_addr	dev/e1000/e1000_82575.h	/^		__le64 pkt_addr; \/* Packet buffer address *\/$/;"	m	struct:e1000_adv_rx_desc::__anon37
pkt_addr	dev/e1000/e1000_vf.h	/^		u64 pkt_addr;             \/* Packet buffer address *\/$/;"	m	struct:e1000_adv_rx_desc::__anon47
pkt_info	dev/e1000/e1000_82575.h	/^					__le16 pkt_info; \/*RSS type, Pkt type*\/$/;"	m	struct:e1000_adv_rx_desc::__anon38::__anon39::__anon40::__anon41
pkt_info	dev/e1000/e1000_vf.h	/^					u16 pkt_info;$/;"	m	struct:e1000_adv_rx_desc::__anon48::__anon49::__anon50::__anon51
pmap	dev/e1000/if_igb.h	/^	bus_dmamap_t	pmap;	\/* bus_dma map for packet *\/$/;"	m	struct:igb_rx_buf
polarity_correction	dev/e1000/e1000_hw.h	/^	bool polarity_correction;$/;"	m	struct:e1000_phy_info
polarity_correction	if_em_hw.h	/^    em_polarity_reversal polarity_correction;$/;"	m	struct:em_phy_info
popts	dev/e1000/e1000_82575.h	/^			u32 popts:6;  \/* Packet Options *\/$/;"	m	struct:e1000_adv_data_desc::__anon31::__anon32
popts	dev/e1000/e1000_hw.h	/^			u8 popts;  \/* Packet Options *\/$/;"	m	struct:e1000_data_desc::__anon26::__anon27
popts	if_em_hw.h	/^            uint8_t popts;      \/* Packet Options *\/$/;"	m	struct:em_data_desc::__anon92::__anon93
power_down	dev/e1000/e1000_hw.h	/^	void (*power_down)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
power_up	dev/e1000/e1000_hw.h	/^	void (*power_up)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
power_up_serdes	dev/e1000/e1000_hw.h	/^	void (*power_up_serdes)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
prc1023	dev/e1000/e1000_hw.h	/^	u64 prc1023;$/;"	m	struct:e1000_hw_stats
prc1023	if_em_hw.h	/^    uint64_t prc1023;$/;"	m	struct:em_hw_stats
prc127	dev/e1000/e1000_hw.h	/^	u64 prc127;$/;"	m	struct:e1000_hw_stats
prc127	if_em_hw.h	/^    uint64_t prc127;$/;"	m	struct:em_hw_stats
prc1522	dev/e1000/e1000_hw.h	/^	u64 prc1522;$/;"	m	struct:e1000_hw_stats
prc1522	if_em_hw.h	/^    uint64_t prc1522;$/;"	m	struct:em_hw_stats
prc255	dev/e1000/e1000_hw.h	/^	u64 prc255;$/;"	m	struct:e1000_hw_stats
prc255	if_em_hw.h	/^    uint64_t prc255;$/;"	m	struct:em_hw_stats
prc511	dev/e1000/e1000_hw.h	/^	u64 prc511;$/;"	m	struct:e1000_hw_stats
prc511	if_em_hw.h	/^    uint64_t prc511;$/;"	m	struct:em_hw_stats
prc64	dev/e1000/e1000_hw.h	/^	u64 prc64;$/;"	m	struct:e1000_hw_stats
prc64	if_em_hw.h	/^    uint64_t prc64;$/;"	m	struct:em_hw_stats
prefetch	dev/e1000/e1000_osdep.h	/^void prefetch(void *x)$/;"	f
prefetch	dev/e1000/e1000_osdep.h	130;"	d
ptag	dev/e1000/if_igb.h	/^	bus_dma_tag_t		ptag;		\/* dma tag for rx packet *\/$/;"	m	struct:rx_ring
ptc1023	dev/e1000/e1000_hw.h	/^	u64 ptc1023;$/;"	m	struct:e1000_hw_stats
ptc1023	if_em_hw.h	/^    uint64_t ptc1023;$/;"	m	struct:em_hw_stats
ptc127	dev/e1000/e1000_hw.h	/^	u64 ptc127;$/;"	m	struct:e1000_hw_stats
ptc127	if_em_hw.h	/^    uint64_t ptc127;$/;"	m	struct:em_hw_stats
ptc1522	dev/e1000/e1000_hw.h	/^	u64 ptc1522;$/;"	m	struct:e1000_hw_stats
ptc1522	if_em_hw.h	/^    uint64_t ptc1522;$/;"	m	struct:em_hw_stats
ptc255	dev/e1000/e1000_hw.h	/^	u64 ptc255;$/;"	m	struct:e1000_hw_stats
ptc255	if_em_hw.h	/^    uint64_t ptc255;$/;"	m	struct:em_hw_stats
ptc511	dev/e1000/e1000_hw.h	/^	u64 ptc511;$/;"	m	struct:e1000_hw_stats
ptc511	if_em_hw.h	/^    uint64_t ptc511;$/;"	m	struct:em_hw_stats
ptc64	dev/e1000/e1000_hw.h	/^	u64 ptc64;$/;"	m	struct:e1000_hw_stats
ptc64	if_em_hw.h	/^    uint64_t ptc64;$/;"	m	struct:em_hw_stats
publish_devices	driver.c	/^publish_devices()$/;"	f
que_mask	dev/e1000/if_igb.h	/^	u32		que_mask;$/;"	m	struct:adapter
que_task	dev/e1000/if_em.h	/^	struct task     que_task;$/;"	m	struct:adapter	typeref:struct:adapter::task
que_task	dev/e1000/if_igb.h	/^	struct task		que_task;$/;"	m	struct:igb_queue	typeref:struct:igb_queue::task
queue_status	dev/e1000/if_em.h	/^        int			queue_status;$/;"	m	struct:tx_ring
queue_status	dev/e1000/if_igb.h	/^	int			queue_status;$/;"	m	struct:tx_ring
queues	dev/e1000/if_igb.h	/^	struct igb_queue	*queues;$/;"	m	struct:adapter	typeref:struct:adapter::igb_queue
rar_entry_count	dev/e1000/e1000_hw.h	/^	u16 rar_entry_count;$/;"	m	struct:e1000_mac_info
rar_entry_count	dev/e1000/e1000_vf.h	/^	u16 rar_entry_count;$/;"	m	struct:e1000_mac_info
rar_set	dev/e1000/e1000_hw.h	/^	void (*rar_set)(struct e1000_hw *, u8*, u32);$/;"	m	struct:e1000_mac_operations
rar_set	dev/e1000/e1000_vf.h	/^	void (*rar_set)(struct e1000_hw *, u8*, u32);$/;"	m	struct:e1000_mac_operations
rcvif	if_compat.h	/^	struct ifnet *	rcvif; \/\/ set by receive int$/;"	m	struct:m_pkthdr	typeref:struct:m_pkthdr::ifnet
rdh	dev/e1000/if_igb.h	/^	int			rdh;$/;"	m	struct:rx_ring
rdt	dev/e1000/if_igb.h	/^	int			rdt;$/;"	m	struct:rx_ring
read	dev/e1000/e1000_82575.h	/^	} read;$/;"	m	union:e1000_adv_rx_desc	typeref:struct:e1000_adv_rx_desc::__anon37
read	dev/e1000/e1000_82575.h	/^	} read;$/;"	m	union:e1000_adv_tx_desc	typeref:struct:e1000_adv_tx_desc::__anon45
read	dev/e1000/e1000_hw.h	/^	s32  (*read)(struct e1000_hw *, u16, u16, u16 *);$/;"	m	struct:e1000_nvm_operations
read	dev/e1000/e1000_hw.h	/^	s32 (*read)(struct e1000_hw *, u32 *, u16,  u16);$/;"	m	struct:e1000_mbx_operations
read	dev/e1000/e1000_hw.h	/^	} read;$/;"	m	union:e1000_rx_desc_extended	typeref:struct:e1000_rx_desc_extended::__anon1
read	dev/e1000/e1000_hw.h	/^	} read;$/;"	m	union:e1000_rx_desc_packet_split	typeref:struct:e1000_rx_desc_packet_split::__anon7
read	dev/e1000/e1000_vf.h	/^	s32 (*read)(struct e1000_hw *, u32 *, u16,  u16);$/;"	m	struct:e1000_mbx_operations
read	dev/e1000/e1000_vf.h	/^	} read;$/;"	m	union:e1000_adv_rx_desc	typeref:struct:e1000_adv_rx_desc::__anon47
read	dev/e1000/e1000_vf.h	/^	} read;$/;"	m	union:e1000_adv_tx_desc	typeref:struct:e1000_adv_tx_desc::__anon55
read_i2c_byte	dev/e1000/e1000_hw.h	/^	s32 (*read_i2c_byte)(struct e1000_hw *, u8, u8, u8 *);$/;"	m	struct:e1000_phy_operations
read_mac_addr	dev/e1000/e1000_hw.h	/^	s32  (*read_mac_addr)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
read_mac_addr	dev/e1000/e1000_vf.h	/^	s32  (*read_mac_addr)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
read_posted	dev/e1000/e1000_hw.h	/^	s32 (*read_posted)(struct e1000_hw *, u32 *, u16,  u16);$/;"	m	struct:e1000_mbx_operations
read_posted	dev/e1000/e1000_vf.h	/^	s32 (*read_posted)(struct e1000_hw *, u32 *, u16,  u16);$/;"	m	struct:e1000_mbx_operations
read_reg	dev/e1000/e1000_hw.h	/^	s32  (*read_reg)(struct e1000_hw *, u32, u16 *);$/;"	m	struct:e1000_phy_operations
read_reg_locked	dev/e1000/e1000_hw.h	/^	s32  (*read_reg_locked)(struct e1000_hw *, u32, u16 *);$/;"	m	struct:e1000_phy_operations
read_reg_page	dev/e1000/e1000_hw.h	/^	s32  (*read_reg_page)(struct e1000_hw *, u32, u16 *);$/;"	m	struct:e1000_phy_operations
receive_errors	dev/e1000/e1000_hw.h	/^	u32 receive_errors;$/;"	m	struct:e1000_phy_stats
receive_errors	if_em_hw.h	/^    uint32_t receive_errors;$/;"	m	struct:em_phy_stats
refresh_time	dev/e1000/e1000_hw.h	/^	u16 refresh_time;  \/* Flow control refresh timer *\/$/;"	m	struct:e1000_fc_info
regAddr	device.h	/^	void *				regAddr;$/;"	m	struct:device
regval	dev/e1000/e1000_ich8lan.c	/^	u16 regval;$/;"	m	union:ich8_hws_flash_ctrl	file:
regval	dev/e1000/e1000_ich8lan.c	/^	u16 regval;$/;"	m	union:ich8_hws_flash_regacc	file:
regval	dev/e1000/e1000_ich8lan.c	/^	u16 regval;$/;"	m	union:ich8_hws_flash_status	file:
release	dev/e1000/e1000_hw.h	/^	void (*release)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
release	dev/e1000/e1000_hw.h	/^	void (*release)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
release_swfw_sync	dev/e1000/e1000_hw.h	/^	void (*release_swfw_sync)(struct e1000_hw *, u16);$/;"	m	struct:e1000_mac_operations
reload	dev/e1000/e1000_hw.h	/^	void (*reload)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
remote_rx	dev/e1000/e1000_hw.h	/^	enum e1000_1000t_rx_status remote_rx;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_1000t_rx_status
remote_rx	if_em_hw.h	/^    em_1000t_rx_status remote_rx;$/;"	m	struct:em_phy_info
report_tx_early	dev/e1000/e1000_hw.h	/^	bool report_tx_early;$/;"	m	struct:e1000_mac_info
report_tx_early	if_em_hw.h	/^    boolean_t report_tx_early;$/;"	m	struct:em_hw
reqs	dev/e1000/e1000_hw.h	/^	u32 reqs;$/;"	m	struct:e1000_mbx_stats
reqs	dev/e1000/e1000_vf.h	/^	u32 reqs;$/;"	m	struct:e1000_mbx_stats
requested_mode	dev/e1000/e1000_hw.h	/^	enum e1000_fc_mode requested_mode;  \/* FC mode requested by caller *\/$/;"	m	struct:e1000_fc_info	typeref:enum:e1000_fc_info::e1000_fc_mode
res	dev/e1000/if_em.h	/^	struct resource	*res;$/;"	m	struct:adapter	typeref:struct:adapter::resource
res	dev/e1000/if_em.h	/^	struct resource         *res;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::resource
res	dev/e1000/if_em.h	/^        struct resource         *res;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::resource
res	dev/e1000/if_igb.h	/^	struct resource		*res;$/;"	m	struct:igb_queue	typeref:struct:igb_queue::resource
res	dev/e1000/if_igb.h	/^	struct resource	*res;$/;"	m	struct:adapter	typeref:struct:adapter::resource
res	dev/e1000/if_lem.h	/^	struct resource	*res[3];$/;"	m	struct:adapter	typeref:struct:adapter::resource
res_interrupt	if_em.h	/^	struct resource *res_interrupt;$/;"	m	struct:adapter	typeref:struct:adapter::resource
res_ioport	if_em.h	/^	struct resource *res_ioport;$/;"	m	struct:adapter	typeref:struct:adapter::resource
res_memory	if_em.h	/^	struct resource *res_memory;$/;"	m	struct:adapter	typeref:struct:adapter::resource
reserved	dev/e1000/e1000_hw.h	/^		__le64 reserved;$/;"	m	struct:e1000_rx_desc_extended::__anon1
reserved	dev/e1000/e1000_hw.h	/^		__le64 reserved;$/;"	m	struct:e1000_rx_desc_packet_split::__anon8
reserved	dev/e1000/e1000_ich8lan.c	/^		u16 reserved:5;   \/* 7:3 Reserved  *\/$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl	file:
reserved	if_em_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:em_fflt_entry
reserved	if_em_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:em_ffmt_entry
reserved	if_em_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:em_ffvt_entry
reserved	if_em_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:em_ipv4_at_entry
reserved0	dev/e1000/e1000_hw.h	/^	u8  reserved0;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved1	dev/e1000/e1000_hw.h	/^	u16 reserved1;$/;"	m	struct:e1000_host_mng_command_header
reserved1	dev/e1000/e1000_hw.h	/^	u32 reserved1;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved1	dev/e1000/e1000_ich8lan.c	/^		u16 reserved1:2; \/* bit 13:6 Reserved *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
reserved2	dev/e1000/e1000_hw.h	/^	u16 reserved2;$/;"	m	struct:e1000_host_mng_command_header
reserved2	dev/e1000/e1000_hw.h	/^	u16 reserved2;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved2	dev/e1000/e1000_ich8lan.c	/^		u16 reserved2:6; \/* bit 13:6 Reserved *\/$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts	file:
reserved3	dev/e1000/e1000_hw.h	/^	u8  reserved3;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reset	dev/e1000/e1000_hw.h	/^	s32  (*reset)(struct e1000_hw *);$/;"	m	struct:e1000_phy_operations
reset_delay_us	dev/e1000/e1000_hw.h	/^	u32 reset_delay_us; \/* in usec *\/$/;"	m	struct:e1000_phy_info
reset_hw	dev/e1000/e1000_hw.h	/^	s32  (*reset_hw)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
reset_hw	dev/e1000/e1000_vf.h	/^	s32  (*reset_hw)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
revision	dev/e1000/e1000_hw.h	/^	u32 revision;$/;"	m	struct:e1000_phy_info
revision_id	dev/e1000/e1000_hw.h	/^	u8  revision_id;$/;"	m	struct:e1000_hw
revision_id	dev/e1000/e1000_vf.h	/^	u8  revision_id;$/;"	m	struct:e1000_hw
revision_id	if_em_hw.h	/^    uint8_t revision_id;$/;"	m	struct:em_hw
rfc	dev/e1000/e1000_hw.h	/^	u64 rfc;$/;"	m	struct:e1000_hw_stats
rfc	if_em_hw.h	/^    uint64_t rfc;$/;"	m	struct:em_hw_stats
rid	dev/e1000/if_lem.h	/^	int		rid[3];$/;"	m	struct:adapter
rjc	dev/e1000/e1000_hw.h	/^	u64 rjc;$/;"	m	struct:e1000_hw_stats
rjc	if_em_hw.h	/^    uint64_t rjc;$/;"	m	struct:em_hw_stats
rlec	dev/e1000/e1000_hw.h	/^	u64 rlec;$/;"	m	struct:e1000_hw_stats
rlec	if_em_hw.h	/^    uint64_t rlec;$/;"	m	struct:em_hw_stats
rman_get_start	if_em_osdep.c	/^rman_get_start(struct resource *res)$/;"	f
rmb	dev/e1000/e1000_osdep.h	115;"	d
rmb	dev/e1000/e1000_osdep.h	118;"	d
rnbc	dev/e1000/e1000_hw.h	/^	u64 rnbc;$/;"	m	struct:e1000_hw_stats
rnbc	if_em_hw.h	/^    uint64_t rnbc;$/;"	m	struct:em_hw_stats
roc	dev/e1000/e1000_hw.h	/^	u64 roc;$/;"	m	struct:e1000_hw_stats
roc	if_em_hw.h	/^    uint64_t roc;$/;"	m	struct:em_hw_stats
rpthc	dev/e1000/e1000_hw.h	/^	u64 rpthc;$/;"	m	struct:e1000_hw_stats
rss	dev/e1000/e1000_82575.h	/^				__le32 rss; \/* RSS Hash *\/$/;"	m	union:e1000_adv_rx_desc::__anon38::__anon39::__anon42
rss	dev/e1000/e1000_hw.h	/^				__le32 rss; \/* RSS Hash *\/$/;"	m	union:e1000_rx_desc_extended::__anon2::__anon3::__anon4
rss	dev/e1000/e1000_hw.h	/^				__le32 rss; \/* RSS Hash *\/$/;"	m	union:e1000_rx_desc_packet_split::__anon8::__anon9::__anon10
rss	dev/e1000/e1000_vf.h	/^				u32 rss;          \/* RSS Hash *\/$/;"	m	union:e1000_adv_rx_desc::__anon48::__anon49::__anon52
rsts	dev/e1000/e1000_hw.h	/^	u32 rsts;$/;"	m	struct:e1000_mbx_stats
rsts	dev/e1000/e1000_vf.h	/^	u32 rsts;$/;"	m	struct:e1000_mbx_stats
rsvd	dev/e1000/e1000_82575.h	/^			u32 rsvd:4;$/;"	m	struct:e1000_adv_context_desc::__anon35::__anon36
rsvd	dev/e1000/e1000_82575.h	/^			u32 rsvd:4;$/;"	m	struct:e1000_adv_data_desc::__anon29::__anon30
rsvd	dev/e1000/e1000_82575.h	/^		__le64 rsvd;       \/* Reserved *\/$/;"	m	struct:e1000_adv_tx_desc::__anon46
rsvd	dev/e1000/e1000_vf.h	/^		u64 rsvd;       \/* Reserved *\/$/;"	m	struct:e1000_adv_tx_desc::__anon56
ruc	dev/e1000/e1000_hw.h	/^	u64 ruc;$/;"	m	struct:e1000_hw_stats
ruc	if_em_hw.h	/^    uint64_t ruc;$/;"	m	struct:em_hw_stats
rx_abs_int_delay	dev/e1000/if_em.h	/^	struct em_int_delay_info rx_abs_int_delay;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
rx_abs_int_delay	dev/e1000/if_lem.h	/^	struct em_int_delay_info rx_abs_int_delay;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
rx_abs_int_delay	if_em.h	/^        struct em_int_delay_info rx_abs_int_delay;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
rx_base	dev/e1000/if_em.h	/^        struct e1000_rx_desc	*rx_base;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::e1000_rx_desc
rx_base	dev/e1000/if_igb.h	/^	union e1000_adv_rx_desc	*rx_base;$/;"	m	struct:rx_ring	typeref:union:rx_ring::e1000_adv_rx_desc
rx_buffer_area	dev/e1000/if_lem.h	/^	struct em_buffer	*rx_buffer_area;$/;"	m	struct:adapter	typeref:struct:adapter::em_buffer
rx_buffer_area	if_em.h	/^        struct em_buffer   *rx_buffer_area;$/;"	m	struct:adapter	typeref:struct:adapter::em_buffer
rx_buffer_len	dev/e1000/if_lem.h	/^	uint32_t		rx_buffer_len;$/;"	m	struct:adapter
rx_buffer_len	if_em.h	/^        u_int32_t          rx_buffer_len;$/;"	m	struct:adapter
rx_buffers	dev/e1000/if_em.h	/^        struct em_buffer	*rx_buffers;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::em_buffer
rx_buffers	dev/e1000/if_igb.h	/^	struct igb_rx_buf	*rx_buffers;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::igb_rx_buf
rx_bytes	dev/e1000/if_em.h	/^        unsigned long		rx_bytes;$/;"	m	struct:rx_ring
rx_bytes	dev/e1000/if_igb.h	/^	u64			rx_bytes;$/;"	m	struct:rx_ring
rx_control	dev/e1000/if_igb.h	/^	unsigned long	rx_control;$/;"	m	struct:adapter
rx_desc_base	dev/e1000/if_lem.h	/^	struct e1000_rx_desc	*rx_desc_base;$/;"	m	struct:adapter	typeref:struct:adapter::e1000_rx_desc
rx_desc_base	if_em.h	/^        struct em_rx_desc *rx_desc_base;$/;"	m	struct:adapter	typeref:struct:adapter::em_rx_desc
rx_discarded	dev/e1000/if_em.h	/^        unsigned long		rx_discarded;$/;"	m	struct:rx_ring
rx_discarded	dev/e1000/if_igb.h	/^	u64			rx_discarded;$/;"	m	struct:rx_ring
rx_hdr_split	dev/e1000/if_igb.h	/^	bool			rx_hdr_split;$/;"	m	struct:adapter
rx_int_delay	dev/e1000/if_em.h	/^	struct em_int_delay_info rx_int_delay;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
rx_int_delay	dev/e1000/if_lem.h	/^	struct em_int_delay_info rx_int_delay;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
rx_int_delay	if_em.h	/^        struct em_int_delay_info rx_int_delay;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
rx_irq	dev/e1000/if_em.h	/^        unsigned long		rx_irq;$/;"	m	struct:rx_ring
rx_irq	dev/e1000/if_lem.h	/^	unsigned long	rx_irq;$/;"	m	struct:adapter
rx_mask	dev/e1000/if_igb.h	/^	u32			rx_mask;$/;"	m	struct:adapter
rx_mbuf_sz	dev/e1000/if_em.h	/^	u32		rx_mbuf_sz;$/;"	m	struct:adapter
rx_mbuf_sz	dev/e1000/if_igb.h	/^	u32			rx_mbuf_sz;$/;"	m	struct:adapter
rx_mtx	dev/e1000/if_em.h	/^        struct mtx              rx_mtx;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::mtx
rx_mtx	dev/e1000/if_igb.h	/^	struct mtx		rx_mtx;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::mtx
rx_mtx	dev/e1000/if_lem.h	/^	struct mtx	rx_mtx;$/;"	m	struct:adapter	typeref:struct:adapter::mtx
rx_overruns	dev/e1000/if_em.h	/^	unsigned long	rx_overruns;$/;"	m	struct:adapter
rx_overruns	dev/e1000/if_igb.h	/^	unsigned long	rx_overruns;$/;"	m	struct:adapter
rx_overruns	dev/e1000/if_lem.h	/^	unsigned long	rx_overruns;$/;"	m	struct:adapter
rx_packets	dev/e1000/if_em.h	/^        unsigned long		rx_packets;$/;"	m	struct:rx_ring
rx_packets	dev/e1000/if_igb.h	/^	u64			rx_packets;$/;"	m	struct:rx_ring
rx_process_limit	dev/e1000/if_em.h	/^        u32             rx_process_limit;$/;"	m	struct:adapter
rx_process_limit	dev/e1000/if_igb.h	/^	int			rx_process_limit;$/;"	m	struct:adapter
rx_process_limit	dev/e1000/if_lem.h	/^	int			rx_process_limit;$/;"	m	struct:adapter
rx_ring	dev/e1000/if_em.h	/^struct rx_ring {$/;"	s
rx_ring	dev/e1000/if_igb.h	/^struct rx_ring {$/;"	s
rx_rings	dev/e1000/if_em.h	/^        struct rx_ring  *rx_rings;$/;"	m	struct:adapter	typeref:struct:adapter::rx_ring
rx_rings	dev/e1000/if_igb.h	/^	struct rx_ring		*rx_rings;$/;"	m	struct:adapter	typeref:struct:adapter::rx_ring
rx_sparemap	dev/e1000/if_lem.h	/^	bus_dmamap_t		rx_sparemap;$/;"	m	struct:adapter
rx_split_packets	dev/e1000/if_igb.h	/^	u64			rx_split_packets;$/;"	m	struct:rx_ring
rx_task	dev/e1000/if_em.h	/^        struct task             rx_task;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::task
rx_task	dev/e1000/if_lem.h	/^	struct task     rx_task;$/;"	m	struct:adapter	typeref:struct:adapter::task
rxdma	dev/e1000/if_em.h	/^        struct em_dma_alloc	rxdma;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::em_dma_alloc
rxdma	dev/e1000/if_igb.h	/^	struct igb_dma_alloc	rxdma;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::igb_dma_alloc
rxdma	dev/e1000/if_lem.h	/^	struct em_dma_alloc	rxdma;		\/* bus_dma glue for rx desc *\/$/;"	m	struct:adapter	typeref:struct:adapter::em_dma_alloc
rxerrc	dev/e1000/e1000_hw.h	/^	u64 rxerrc;$/;"	m	struct:e1000_hw_stats
rxerrc	if_em_hw.h	/^    uint64_t rxerrc;$/;"	m	struct:em_hw_stats
rxr	dev/e1000/if_igb.h	/^	struct rx_ring		*rxr;$/;"	m	struct:igb_queue	typeref:struct:igb_queue::rx_ring
rxtag	dev/e1000/if_em.h	/^        bus_dma_tag_t           rxtag;$/;"	m	struct:rx_ring
rxtag	dev/e1000/if_lem.h	/^	bus_dma_tag_t		rxtag;$/;"	m	struct:adapter
rxtx_task	dev/e1000/if_lem.h	/^	struct task     rxtx_task;$/;"	m	struct:adapter	typeref:struct:adapter::task
s16	dev/e1000/e1000_osdep.h	/^typedef int16_t		s16;$/;"	t
s32	dev/e1000/e1000_osdep.h	/^typedef int32_t		s32;$/;"	t
s64	dev/e1000/e1000_osdep.h	/^typedef int64_t		s64;$/;"	t
s8	dev/e1000/e1000_osdep.h	/^typedef int8_t		s8;$/;"	t
sTimerCount	timer.c	/^static int					sTimerCount;$/;"	v	file:
sTimerData	timer.c	/^static struct timer_info	sTimerData[MAX_TIMERS];$/;"	v	typeref:struct:timer_info	file:
sTimerNextId	timer.c	/^static timer_id				sTimerNextId;$/;"	v	file:
sTimerSem	timer.c	/^static sem_id				sTimerSem;$/;"	v	file:
sTimerSpinlock	timer.c	/^static spinlock				sTimerSpinlock;$/;"	v	file:
sTimerThread	timer.c	/^static thread_id			sTimerThread;$/;"	v	file:
scc	dev/e1000/e1000_hw.h	/^	u64 scc;$/;"	m	struct:e1000_hw_stats
scc	if_em_hw.h	/^    uint64_t scc;$/;"	m	struct:em_hw_stats
scvpc	dev/e1000/e1000_hw.h	/^	u64 scvpc;$/;"	m	struct:e1000_hw_stats
sec	dev/e1000/e1000_hw.h	/^	u64 sec;$/;"	m	struct:e1000_hw_stats
sec	if_em_hw.h	/^    uint64_t sec;$/;"	m	struct:em_hw_stats
send_xon	dev/e1000/e1000_hw.h	/^	bool send_xon;  \/* Flow control send XON *\/$/;"	m	struct:e1000_fc_info
seq_num	dev/e1000/e1000_82575.h	/^	u32 seq_num;$/;"	m	struct:e1000_adv_context_desc
seqnum_seed	dev/e1000/e1000_82575.h	/^	__le32 seqnum_seed;$/;"	m	struct:e1000_adv_tx_context_desc
seqnum_seed	dev/e1000/e1000_vf.h	/^	u32 seqnum_seed;$/;"	m	struct:e1000_adv_tx_context_desc
serdes_has_link	dev/e1000/e1000_hw.h	/^	bool serdes_has_link;$/;"	m	struct:e1000_mac_info
serdes_link_down	if_em_hw.h	/^    boolean_t serdes_link_down;$/;"	m	struct:em_hw
serdes_link_state	dev/e1000/e1000_hw.h	/^	enum e1000_serdes_link_state serdes_link_state;$/;"	m	struct:e1000_mac_info	typeref:enum:e1000_mac_info::e1000_serdes_link_state
set_d0_lplu_state	dev/e1000/e1000_hw.h	/^	s32  (*set_d0_lplu_state)(struct e1000_hw *, bool);$/;"	m	struct:e1000_phy_operations
set_d3_lplu_state	dev/e1000/e1000_hw.h	/^	s32  (*set_d3_lplu_state)(struct e1000_hw *, bool);$/;"	m	struct:e1000_phy_operations
set_lan_id	dev/e1000/e1000_hw.h	/^	void (*set_lan_id)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
set_obff_timer	dev/e1000/e1000_hw.h	/^	s32  (*set_obff_timer)(struct e1000_hw *, u32);$/;"	m	struct:e1000_mac_operations
set_page	dev/e1000/e1000_hw.h	/^	s32  (*set_page)(struct e1000_hw *, u16);$/;"	m	struct:e1000_phy_operations
setup_led	dev/e1000/e1000_hw.h	/^	s32  (*setup_led)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
setup_link	dev/e1000/e1000_hw.h	/^	s32  (*setup_link)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
setup_link	dev/e1000/e1000_vf.h	/^	s32  (*setup_link)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
setup_physical_interface	dev/e1000/e1000_hw.h	/^	s32  (*setup_physical_interface)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
sfp_e1000_flags	dev/e1000/e1000_phy.h	/^struct sfp_e1000_flags {$/;"	s
sgmii_active	dev/e1000/e1000_hw.h	/^	bool sgmii_active;$/;"	m	struct:e1000_dev_spec_82575
shadow_ram	dev/e1000/e1000_hw.h	/^	struct e1000_shadow_ram shadow_ram[E1000_SHADOW_RAM_WORDS];$/;"	m	struct:e1000_dev_spec_ich8lan	typeref:struct:e1000_dev_spec_ich8lan::e1000_shadow_ram
shadow_vfta	dev/e1000/if_em.h	/^	u32		shadow_vfta[EM_VFTA_SIZE];$/;"	m	struct:adapter
shadow_vfta	dev/e1000/if_igb.h	/^	u32		shadow_vfta[IGB_VFTA_SIZE];$/;"	m	struct:adapter
shadow_vfta	dev/e1000/if_lem.h	/^	u32		shadow_vfta[EM_VFTA_SIZE];$/;"	m	struct:adapter
shutdown_serdes	dev/e1000/e1000_hw.h	/^	void (*shutdown_serdes)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
signature	dev/e1000/e1000_hw.h	/^	u32 signature;$/;"	m	struct:e1000_host_mng_dhcp_cookie
size	dev/e1000/e1000_hw.h	/^	u16 size;$/;"	m	struct:e1000_mbx_info
size	dev/e1000/e1000_vf.h	/^	u16 size;$/;"	m	struct:e1000_mbx_info
smart_speed	dev/e1000/e1000_hw.h	/^	enum e1000_smart_speed smart_speed;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_smart_speed
smartspeed	dev/e1000/if_em.h	/^	u32		smartspeed;$/;"	m	struct:adapter
smartspeed	dev/e1000/if_igb.h	/^	u32		smartspeed;$/;"	m	struct:adapter
smartspeed	dev/e1000/if_lem.h	/^	uint32_t	smartspeed;$/;"	m	struct:adapter
smartspeed	if_em.h	/^	u_int32_t       smartspeed;$/;"	m	struct:adapter
smb_counter	dev/e1000/e1000_hw.h	/^	u32 smb_counter;$/;"	m	struct:e1000_dev_spec_82571
spd_default	dev/e1000/e1000_hw.h	/^	u16 spd_default;$/;"	m	struct:e1000_dev_spec_82541
special	dev/e1000/e1000_hw.h	/^			__le16 special;$/;"	m	struct:e1000_data_desc::__anon26::__anon27
special	dev/e1000/e1000_hw.h	/^			__le16 special;$/;"	m	struct:e1000_tx_desc::__anon16::__anon17
special	dev/e1000/e1000_hw.h	/^	__le16 special;$/;"	m	struct:e1000_rx_desc
special	if_em_hw.h	/^            uint16_t special;   \/* *\/$/;"	m	struct:em_data_desc::__anon92::__anon93
special	if_em_hw.h	/^            uint16_t special;$/;"	m	struct:em_tx_desc::__anon82::__anon83
special	if_em_hw.h	/^    uint16_t special;$/;"	m	struct:em_rx_desc
speed	dev/e1000/e1000_hw.h	/^	enum e1000_bus_speed speed;$/;"	m	struct:e1000_bus_info	typeref:enum:e1000_bus_info::e1000_bus_speed
speed_downgraded	dev/e1000/e1000_hw.h	/^	bool speed_downgraded;$/;"	m	struct:e1000_phy_info
speed_downgraded	if_em_hw.h	/^    boolean_t speed_downgraded;$/;"	m	struct:em_hw
splimp	if_em_osdep.h	56;"	d
splx	if_em_osdep.h	55;"	d
start_event_thread	if_em.c	/^start_event_thread(struct adapter *adapter)$/;"	f	file:
stats	dev/e1000/e1000_hw.h	/^	struct e1000_mbx_stats stats;$/;"	m	struct:e1000_mbx_info	typeref:struct:e1000_mbx_info::e1000_mbx_stats
stats	dev/e1000/e1000_vf.h	/^	struct e1000_mbx_stats stats;$/;"	m	struct:e1000_mbx_info	typeref:struct:e1000_mbx_info::e1000_mbx_stats
stats	dev/e1000/if_em.h	/^	struct e1000_hw_stats stats;$/;"	m	struct:adapter	typeref:struct:adapter::e1000_hw_stats
stats	dev/e1000/if_igb.h	/^	void 			*stats;$/;"	m	struct:adapter
stats	dev/e1000/if_lem.h	/^	struct e1000_hw_stats stats;$/;"	m	struct:adapter	typeref:struct:adapter::e1000_hw_stats
stats	if_em.h	/^	struct em_hw_stats stats;$/;"	m	struct:adapter	typeref:struct:adapter::em_hw_stats
status	dev/e1000/e1000_82575.h	/^			u32 status:4;  \/* Descriptor status *\/$/;"	m	struct:e1000_adv_data_desc::__anon31::__anon32
status	dev/e1000/e1000_82575.h	/^		__le32 status;$/;"	m	struct:e1000_adv_tx_desc::__anon46
status	dev/e1000/e1000_hw.h	/^			u8 status;  \/* Descriptor status *\/$/;"	m	struct:e1000_context_desc::__anon22::__anon23
status	dev/e1000/e1000_hw.h	/^			u8 status;  \/* Descriptor status *\/$/;"	m	struct:e1000_data_desc::__anon26::__anon27
status	dev/e1000/e1000_hw.h	/^			u8 status; \/* Descriptor status *\/$/;"	m	struct:e1000_tx_desc::__anon16::__anon17
status	dev/e1000/e1000_hw.h	/^	u8  status;  \/* Descriptor status *\/$/;"	m	struct:e1000_rx_desc
status	dev/e1000/e1000_hw.h	/^	u8  status;$/;"	m	struct:e1000_host_mng_dhcp_cookie
status	dev/e1000/e1000_vf.h	/^		u32 status;$/;"	m	struct:e1000_adv_tx_desc::__anon56
status	if_em_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:em_context_desc::__anon88::__anon89
status	if_em_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:em_data_desc::__anon92::__anon93
status	if_em_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:em_tx_desc::__anon82::__anon83
status	if_em_hw.h	/^    uint8_t status;      \/* Descriptor status *\/$/;"	m	struct:em_rx_desc
status_error	dev/e1000/e1000_82575.h	/^			__le32 status_error; \/* ext status\/error *\/$/;"	m	struct:e1000_adv_rx_desc::__anon38::__anon44
status_error	dev/e1000/e1000_hw.h	/^			__le32 status_error;  \/* ext status\/error *\/$/;"	m	struct:e1000_rx_desc_extended::__anon2::__anon6
status_error	dev/e1000/e1000_hw.h	/^			__le32 status_error;  \/* ext status\/error *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon8::__anon12
status_error	dev/e1000/e1000_vf.h	/^			u32 status_error;     \/* ext status\/error *\/$/;"	m	struct:e1000_adv_rx_desc::__anon48::__anon54
stop_event_thread	if_em.c	/^stop_event_thread(struct adapter *adapter)$/;"	f	file:
strict_ieee	dev/e1000/e1000_hw.h	/^	bool strict_ieee;  \/* Strict IEEE mode *\/$/;"	m	struct:e1000_fc_info
subdevice_id	dev/e1000/if_em.h	/^	unsigned int subdevice_id;$/;"	m	struct:_em_vendor_info_t
subdevice_id	dev/e1000/if_igb.h	/^	unsigned int subdevice_id;$/;"	m	struct:_igb_vendor_info_t
subdevice_id	dev/e1000/if_lem.h	/^	unsigned int subdevice_id;$/;"	m	struct:_em_vendor_info_t
subsystem_device_id	dev/e1000/e1000_hw.h	/^	u16 subsystem_device_id;$/;"	m	struct:e1000_hw
subsystem_device_id	dev/e1000/e1000_vf.h	/^	u16 subsystem_device_id;$/;"	m	struct:e1000_hw
subsystem_id	if_em_hw.h	/^    uint16_t subsystem_id;$/;"	m	struct:em_hw
subsystem_vendor_id	dev/e1000/e1000_hw.h	/^	u16 subsystem_vendor_id;$/;"	m	struct:e1000_hw
subsystem_vendor_id	dev/e1000/e1000_vf.h	/^	u16 subsystem_vendor_id;$/;"	m	struct:e1000_hw
subsystem_vendor_id	if_em_hw.h	/^    uint16_t subsystem_vendor_id;$/;"	m	struct:em_hw
subvendor_id	dev/e1000/if_em.h	/^	unsigned int subvendor_id;$/;"	m	struct:_em_vendor_info_t
subvendor_id	dev/e1000/if_igb.h	/^	unsigned int subvendor_id;$/;"	m	struct:_igb_vendor_info_t
subvendor_id	dev/e1000/if_lem.h	/^	unsigned int subvendor_id;$/;"	m	struct:_em_vendor_info_t
swflag_mutex	dev/e1000/e1000_hw.h	/^	E1000_MUTEX swflag_mutex;$/;"	m	struct:e1000_dev_spec_82571
swflag_mutex	dev/e1000/e1000_hw.h	/^	E1000_MUTEX swflag_mutex;$/;"	m	struct:e1000_dev_spec_ich8lan
symerrs	dev/e1000/e1000_hw.h	/^	u64 symerrs;$/;"	m	struct:e1000_hw_stats
symerrs	if_em_hw.h	/^    uint64_t symerrs;$/;"	m	struct:em_hw_stats
sysctl_ctx	if_em.h	/^	struct sysctl_ctx_list sysctl_ctx;$/;"	m	struct:adapter	typeref:struct:adapter::sysctl_ctx_list
sysctl_ctx_free	if_compat.h	100;"	d
sysctl_ctx_init	if_compat.h	99;"	d
sysctl_ctx_list	if_compat.h	/^struct sysctl_ctx_list$/;"	s
sysctl_oid	if_compat.h	/^struct sysctl_oid$/;"	s
sysctl_tree	if_em.h	/^        struct sysctl_oid *sysctl_tree;$/;"	m	struct:adapter	typeref:struct:adapter::sysctl_oid
tag	dev/e1000/if_em.h	/^	void		*tag;$/;"	m	struct:adapter
tag	dev/e1000/if_em.h	/^	void                    *tag;$/;"	m	struct:tx_ring
tag	dev/e1000/if_em.h	/^        void                    *tag;$/;"	m	struct:rx_ring
tag	dev/e1000/if_igb.h	/^	void			*tag;$/;"	m	struct:igb_queue
tag	dev/e1000/if_igb.h	/^	void		*tag;$/;"	m	struct:adapter
tag	dev/e1000/if_lem.h	/^	void		*tag[3];$/;"	m	struct:adapter
tbi_compatibility	dev/e1000/e1000_hw.h	/^	u32  tbi_compatibility;$/;"	m	struct:e1000_dev_spec_82543
tbi_compatibility_en	if_em_hw.h	/^    boolean_t tbi_compatibility_en;$/;"	m	struct:em_hw
tbi_compatibility_on	if_em_hw.h	/^    boolean_t tbi_compatibility_on;$/;"	m	struct:em_hw
tcp_config	dev/e1000/e1000_hw.h	/^		__le32 tcp_config;$/;"	m	union:e1000_context_desc::__anon20
tcp_config	if_em_hw.h	/^        uint32_t tcp_config;$/;"	m	union:em_context_desc::__anon86
tcp_fields	dev/e1000/e1000_hw.h	/^		} tcp_fields;$/;"	m	union:e1000_context_desc::__anon20	typeref:struct:e1000_context_desc::__anon20::__anon21
tcp_fields	if_em_hw.h	/^        } tcp_fields;$/;"	m	union:em_context_desc::__anon86	typeref:struct:em_context_desc::__anon86::__anon87
tcp_seg_setup	dev/e1000/e1000_hw.h	/^	} tcp_seg_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon22
tcp_seg_setup	if_em_hw.h	/^    } tcp_seg_setup;$/;"	m	struct:em_context_desc	typeref:union:em_context_desc::__anon88
tdh	dev/e1000/if_igb.h	/^	int			tdh;$/;"	m	struct:tx_ring
tdt	dev/e1000/if_igb.h	/^	int			tdt;$/;"	m	struct:tx_ring
terminate_timer	timer.c	/^terminate_timer(void)$/;"	f
timeout	dev/e1000/e1000_hw.h	/^	u32 timeout;$/;"	m	struct:e1000_mbx_info
timeout	dev/e1000/e1000_vf.h	/^	u32 timeout;$/;"	m	struct:e1000_mbx_info
timeout	if_em_osdep.c	/^timeout(timer_function func, void *cookie, bigtime_t timeout)$/;"	f
timer	dev/e1000/if_em.h	/^	struct callout	timer;$/;"	m	struct:adapter	typeref:struct:adapter::callout
timer	dev/e1000/if_igb.h	/^	struct callout	timer;$/;"	m	struct:adapter	typeref:struct:adapter::callout
timer	dev/e1000/if_lem.h	/^	struct callout	timer;$/;"	m	struct:adapter	typeref:struct:adapter::callout
timer	if_em_osdep.h	/^	timer_id timer;$/;"	m	struct:callout_handle
timer_function	timer.h	/^typedef void (*timer_function)(void *cookie);$/;"	t
timer_handle	if_em.h	/^	struct callout_handle timer_handle;$/;"	m	struct:adapter	typeref:struct:adapter::callout_handle
timer_id	timer.h	/^typedef int32 timer_id;$/;"	t
timer_info	timer.c	/^struct timer_info$/;"	s	file:
timer_thread	timer.c	/^timer_thread(void *cookie)$/;"	f	file:
tncrs	dev/e1000/e1000_hw.h	/^	u64 tncrs;$/;"	m	struct:e1000_hw_stats
tncrs	if_em_hw.h	/^    uint64_t tncrs;$/;"	m	struct:em_hw_stats
tor	dev/e1000/e1000_hw.h	/^	u64 tor;$/;"	m	struct:e1000_hw_stats
torh	if_em_hw.h	/^    uint64_t torh;$/;"	m	struct:em_hw_stats
torl	if_em_hw.h	/^    uint64_t torl;$/;"	m	struct:em_hw_stats
tot	dev/e1000/e1000_hw.h	/^	u64 tot;$/;"	m	struct:e1000_hw_stats
toth	if_em_hw.h	/^    uint64_t toth;$/;"	m	struct:em_hw_stats
totl	if_em_hw.h	/^    uint64_t totl;$/;"	m	struct:em_hw_stats
tpr	dev/e1000/e1000_hw.h	/^	u64 tpr;$/;"	m	struct:e1000_hw_stats
tpr	if_em_hw.h	/^    uint64_t tpr;$/;"	m	struct:em_hw_stats
tpt	dev/e1000/e1000_hw.h	/^	u64 tpt;$/;"	m	struct:e1000_hw_stats
tpt	if_em_hw.h	/^    uint64_t tpt;$/;"	m	struct:em_hw_stats
tq	dev/e1000/if_em.h	/^	struct taskqueue *tq;           \/* private task queue *\/$/;"	m	struct:adapter	typeref:struct:adapter::taskqueue
tq	dev/e1000/if_em.h	/^        struct taskqueue        *tq;$/;"	m	struct:rx_ring	typeref:struct:rx_ring::taskqueue
tq	dev/e1000/if_em.h	/^        struct taskqueue        *tq;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::taskqueue
tq	dev/e1000/if_igb.h	/^	struct taskqueue	*tq;$/;"	m	struct:igb_queue	typeref:struct:igb_queue::taskqueue
tq	dev/e1000/if_lem.h	/^	struct taskqueue *tq;           \/* private task queue *\/$/;"	m	struct:adapter	typeref:struct:adapter::taskqueue
true	dev/e1000/e1000_osdep.h	80;"	d
tsctc	dev/e1000/e1000_hw.h	/^	u64 tsctc;$/;"	m	struct:e1000_hw_stats
tsctc	if_em_hw.h	/^    uint64_t tsctc;$/;"	m	struct:em_hw_stats
tsctfc	dev/e1000/e1000_hw.h	/^	u64 tsctfc;$/;"	m	struct:e1000_hw_stats
tsctfc	if_em_hw.h	/^    uint64_t tsctfc;$/;"	m	struct:em_hw_stats
tucmd	dev/e1000/e1000_82575.h	/^			u32 tucmd:11;$/;"	m	struct:e1000_adv_context_desc::__anon35::__anon36
tucse	dev/e1000/e1000_hw.h	/^			__le16 tucse;  \/* TCP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon20::__anon21
tucse	if_em_hw.h	/^            uint16_t tucse;     \/* TCP checksum end *\/$/;"	m	struct:em_context_desc::__anon86::__anon87
tucso	dev/e1000/e1000_hw.h	/^			u8 tucso;  \/* TCP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon20::__anon21
tucso	if_em_hw.h	/^            uint8_t tucso;      \/* TCP checksum offset *\/$/;"	m	struct:em_context_desc::__anon86::__anon87
tucss	dev/e1000/e1000_hw.h	/^			u8 tucss;  \/* TCP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon20::__anon21
tucss	if_em_hw.h	/^            uint8_t tucss;      \/* TCP checksum start *\/$/;"	m	struct:em_context_desc::__anon86::__anon87
tx_abs_int_delay	dev/e1000/if_em.h	/^	struct em_int_delay_info tx_abs_int_delay;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
tx_abs_int_delay	dev/e1000/if_lem.h	/^	struct em_int_delay_info tx_abs_int_delay;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
tx_abs_int_delay	if_em.h	/^        struct em_int_delay_info tx_abs_int_delay;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
tx_avail	dev/e1000/if_em.h	/^        volatile u16            tx_avail;$/;"	m	struct:tx_ring
tx_avail	dev/e1000/if_igb.h	/^	volatile u16		tx_avail;$/;"	m	struct:tx_ring
tx_base	dev/e1000/if_em.h	/^	struct e1000_tx_desc	*tx_base;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::e1000_tx_desc
tx_base	dev/e1000/if_igb.h	/^	struct e1000_tx_desc	*tx_base;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::e1000_tx_desc
tx_buffer_area	dev/e1000/if_lem.h	/^	struct em_buffer	*tx_buffer_area;$/;"	m	struct:adapter	typeref:struct:adapter::em_buffer
tx_buffer_area	if_em.h	/^        struct em_buffer   *tx_buffer_area;$/;"	m	struct:adapter	typeref:struct:adapter::em_buffer
tx_buffers	dev/e1000/if_em.h	/^        struct em_buffer	*tx_buffers;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::em_buffer
tx_buffers	dev/e1000/if_igb.h	/^	struct igb_tx_buffer	*tx_buffers;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::igb_tx_buffer
tx_desc_base	dev/e1000/if_lem.h	/^	struct e1000_tx_desc	*tx_desc_base;$/;"	m	struct:adapter	typeref:struct:adapter::e1000_tx_desc
tx_desc_base	if_em.h	/^        struct em_tx_desc *tx_desc_base;$/;"	m	struct:adapter	typeref:struct:adapter::em_tx_desc
tx_fifo_head	dev/e1000/if_lem.h	/^	uint32_t	tx_fifo_head;$/;"	m	struct:adapter
tx_fifo_head	if_em.h	/^	u_int16_t          tx_fifo_head;$/;"	m	struct:adapter
tx_fifo_head_addr	dev/e1000/if_lem.h	/^	uint32_t	tx_fifo_head_addr;$/;"	m	struct:adapter
tx_fifo_reset	if_em.h	/^	u_int64_t       tx_fifo_reset;$/;"	m	struct:adapter
tx_fifo_reset_cnt	dev/e1000/if_lem.h	/^	uint64_t	tx_fifo_reset_cnt;$/;"	m	struct:adapter
tx_fifo_size	dev/e1000/if_lem.h	/^	uint32_t	tx_fifo_size;$/;"	m	struct:adapter
tx_fifo_timer	dev/e1000/if_lem.h	/^	struct callout	tx_fifo_timer;$/;"	m	struct:adapter	typeref:struct:adapter::callout
tx_fifo_timer_handle	if_em.h	/^	struct callout_handle tx_fifo_timer_handle;$/;"	m	struct:adapter	typeref:struct:adapter::callout_handle
tx_fifo_wrk	if_em.h	/^	u_int64_t       tx_fifo_wrk;$/;"	m	struct:adapter
tx_fifo_wrk_cnt	dev/e1000/if_lem.h	/^	uint64_t	tx_fifo_wrk_cnt;$/;"	m	struct:adapter
tx_head_addr	dev/e1000/if_lem.h	/^	uint32_t	tx_head_addr;$/;"	m	struct:adapter
tx_int_delay	dev/e1000/if_em.h	/^	struct em_int_delay_info tx_int_delay;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
tx_int_delay	dev/e1000/if_lem.h	/^	struct em_int_delay_info tx_int_delay;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
tx_int_delay	if_em.h	/^	struct em_int_delay_info tx_int_delay;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
tx_irq	dev/e1000/if_em.h	/^        unsigned long		tx_irq;$/;"	m	struct:tx_ring
tx_irq	dev/e1000/if_lem.h	/^	unsigned long	tx_irq;$/;"	m	struct:adapter
tx_itr	dev/e1000/if_em.h	/^	struct em_int_delay_info tx_itr;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
tx_itr	dev/e1000/if_lem.h	/^	struct em_int_delay_info tx_itr;$/;"	m	struct:adapter	typeref:struct:adapter::em_int_delay_info
tx_mtx	dev/e1000/if_em.h	/^        struct mtx              tx_mtx;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::mtx
tx_mtx	dev/e1000/if_igb.h	/^	struct mtx		tx_mtx;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::mtx
tx_mtx	dev/e1000/if_lem.h	/^	struct mtx	tx_mtx;$/;"	m	struct:adapter	typeref:struct:adapter::mtx
tx_packet_delta	dev/e1000/e1000_hw.h	/^	u32 tx_packet_delta;$/;"	m	struct:e1000_mac_info
tx_packet_delta	if_em_hw.h	/^    uint32_t tx_packet_delta;$/;"	m	struct:em_hw
tx_packets	dev/e1000/if_igb.h	/^	u64			tx_packets;$/;"	m	struct:tx_ring
tx_pkt_filtering	dev/e1000/e1000_hw.h	/^	bool tx_pkt_filtering;$/;"	m	struct:e1000_mac_info
tx_ring	dev/e1000/if_em.h	/^struct tx_ring {$/;"	s
tx_ring	dev/e1000/if_igb.h	/^struct tx_ring {$/;"	s
tx_rings	dev/e1000/if_em.h	/^        struct tx_ring  *tx_rings;$/;"	m	struct:adapter	typeref:struct:adapter::tx_ring
tx_rings	dev/e1000/if_igb.h	/^	struct tx_ring		*tx_rings;$/;"	m	struct:adapter	typeref:struct:adapter::tx_ring
tx_task	dev/e1000/if_em.h	/^        struct task             tx_task;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::task
tx_task	dev/e1000/if_lem.h	/^	struct task     tx_task;$/;"	m	struct:adapter	typeref:struct:adapter::task
tx_tso	dev/e1000/if_em.h	/^	u32			tx_tso;		\/* last tx was tso *\/$/;"	m	struct:tx_ring
tx_tso	dev/e1000/if_lem.h	/^	uint32_t	   	tx_tso;		\/* last tx was tso *\/$/;"	m	struct:adapter
txcw	dev/e1000/e1000_hw.h	/^	u32 txcw;$/;"	m	struct:e1000_mac_info
txcw	if_em_hw.h	/^    uint32_t txcw;$/;"	m	struct:em_hw
txd_cmd	dev/e1000/if_em.h	/^        u32		txd_cmd;$/;"	m	struct:adapter
txd_cmd	dev/e1000/if_lem.h	/^        uint32_t		txd_cmd;$/;"	m	struct:adapter
txd_cmd	if_em.h	/^        u_int32_t          txd_cmd;$/;"	m	struct:adapter
txdma	dev/e1000/if_em.h	/^	struct em_dma_alloc	txdma;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::em_dma_alloc
txdma	dev/e1000/if_igb.h	/^	struct igb_dma_alloc	txdma;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::igb_dma_alloc
txdma	dev/e1000/if_lem.h	/^	struct em_dma_alloc	txdma;		\/* bus_dma glue for tx desc *\/$/;"	m	struct:adapter	typeref:struct:adapter::em_dma_alloc
txq_task	dev/e1000/if_igb.h	/^	struct task		txq_task;$/;"	m	struct:tx_ring	typeref:struct:tx_ring::task
txr	dev/e1000/if_igb.h	/^	struct tx_ring		*txr;$/;"	m	struct:igb_queue	typeref:struct:igb_queue::tx_ring
txtag	dev/e1000/if_em.h	/^        bus_dma_tag_t           txtag;$/;"	m	struct:tx_ring
txtag	dev/e1000/if_igb.h	/^	bus_dma_tag_t		txtag;$/;"	m	struct:tx_ring
txtag	dev/e1000/if_lem.h	/^	bus_dma_tag_t		txtag;		\/* dma tag for tx *\/$/;"	m	struct:adapter
typ_len_ext	dev/e1000/e1000_hw.h	/^			u8 typ_len_ext;$/;"	m	struct:e1000_data_desc::__anon24::__anon25
typ_len_ext	if_em_hw.h	/^            uint8_t typ_len_ext;        \/* *\/$/;"	m	struct:em_data_desc::__anon90::__anon91
type	dev/e1000/e1000_hw.h	/^	enum e1000_bus_type type;$/;"	m	struct:e1000_bus_info	typeref:enum:e1000_bus_info::e1000_bus_type
type	dev/e1000/e1000_hw.h	/^	enum e1000_mac_type type;$/;"	m	struct:e1000_mac_info	typeref:enum:e1000_mac_info::e1000_mac_type
type	dev/e1000/e1000_hw.h	/^	enum e1000_nvm_type type;$/;"	m	struct:e1000_nvm_info	typeref:enum:e1000_nvm_info::e1000_nvm_type
type	dev/e1000/e1000_hw.h	/^	enum e1000_phy_type type;$/;"	m	struct:e1000_phy_info	typeref:enum:e1000_phy_info::e1000_phy_type
type	dev/e1000/e1000_vf.h	/^	enum e1000_mac_type type;$/;"	m	struct:e1000_mac_info	typeref:enum:e1000_mac_info::e1000_mac_type
type	if_em_hw.h	/^    em_eeprom_type type;$/;"	m	struct:em_eeprom_info
type_tucmd_mlhl	dev/e1000/e1000_82575.h	/^	__le32 type_tucmd_mlhl;$/;"	m	struct:e1000_adv_tx_context_desc
type_tucmd_mlhl	dev/e1000/e1000_vf.h	/^	u32 type_tucmd_mlhl;$/;"	m	struct:e1000_adv_tx_context_desc
u16	dev/e1000/e1000_osdep.h	/^typedef uint16_t	u16;$/;"	t
u32	dev/e1000/e1000_osdep.h	/^typedef uint32_t	u32;$/;"	t
u64	dev/e1000/e1000_osdep.h	/^typedef uint64_t	u64;$/;"	t
u8	dev/e1000/e1000_osdep.h	/^typedef uint8_t		u8;$/;"	t
uninit_driver	driver.c	/^uninit_driver(void)$/;"	f
unit	if_em.h	/^	u_int8_t        unit;$/;"	m	struct:adapter
untimeout	if_em_osdep.c	/^untimeout(timer_function func, void *cookie, struct callout_handle handle)$/;"	f
update	dev/e1000/e1000_hw.h	/^	s32  (*update)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
update_mc_addr_list	dev/e1000/e1000_hw.h	/^	void (*update_mc_addr_list)(struct e1000_hw *, u8 *, u32);$/;"	m	struct:e1000_mac_operations
update_mc_addr_list	dev/e1000/e1000_vf.h	/^	void (*update_mc_addr_list)(struct e1000_hw *, u8 *, u32);$/;"	m	struct:e1000_mac_operations
upper	dev/e1000/e1000_82575.h	/^		} upper;$/;"	m	struct:e1000_adv_rx_desc::__anon38	typeref:struct:e1000_adv_rx_desc::__anon38::__anon44
upper	dev/e1000/e1000_82575.h	/^	} upper;$/;"	m	struct:e1000_adv_data_desc	typeref:union:e1000_adv_data_desc::__anon31
upper	dev/e1000/e1000_hw.h	/^		} upper;$/;"	m	struct:e1000_rx_desc_extended::__anon2	typeref:struct:e1000_rx_desc_extended::__anon2::__anon6
upper	dev/e1000/e1000_hw.h	/^		} upper;$/;"	m	struct:e1000_rx_desc_packet_split::__anon8	typeref:struct:e1000_rx_desc_packet_split::__anon8::__anon13
upper	dev/e1000/e1000_hw.h	/^	} upper;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon26
upper	dev/e1000/e1000_hw.h	/^	} upper;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon16
upper	dev/e1000/e1000_vf.h	/^		} upper;$/;"	m	struct:e1000_adv_rx_desc::__anon48	typeref:struct:e1000_adv_rx_desc::__anon48::__anon54
upper	if_em_hw.h	/^    } upper;$/;"	m	struct:em_data_desc	typeref:union:em_data_desc::__anon92
upper	if_em_hw.h	/^    } upper;$/;"	m	struct:em_tx_desc	typeref:union:em_tx_desc::__anon82
upper_setup	dev/e1000/e1000_hw.h	/^	} upper_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon20
upper_setup	if_em_hw.h	/^    } upper_setup;$/;"	m	struct:em_context_desc	typeref:union:em_context_desc::__anon86
usec_delay	dev/e1000/e1000_hw.h	/^	u32 usec_delay;$/;"	m	struct:e1000_mbx_info
usec_delay	dev/e1000/e1000_osdep.h	62;"	d
usec_delay	dev/e1000/e1000_vf.h	/^	u32 usec_delay;$/;"	m	struct:e1000_mbx_info
usec_delay	if_em_osdep.h	51;"	d
uta_reg_count	dev/e1000/e1000_hw.h	/^	u16 uta_reg_count;$/;"	m	struct:e1000_mac_info
v2p_mailbox	dev/e1000/e1000_hw.h	/^	u32 v2p_mailbox;$/;"	m	struct:e1000_dev_spec_vf
v2p_mailbox	dev/e1000/e1000_vf.h	/^	u32 v2p_mailbox;$/;"	m	struct:e1000_dev_spec_vf
valid_led_default	dev/e1000/e1000_hw.h	/^	s32  (*valid_led_default)(struct e1000_hw *, u16 *);$/;"	m	struct:e1000_nvm_operations
validate	dev/e1000/e1000_hw.h	/^	s32  (*validate)(struct e1000_hw *);$/;"	m	struct:e1000_nvm_operations
validate_mdi_setting	dev/e1000/e1000_hw.h	/^	s32  (*validate_mdi_setting)(struct e1000_hw *);$/;"	m	struct:e1000_mac_operations
value	dev/e1000/e1000_hw.h	/^	u16  value;$/;"	m	struct:e1000_shadow_ram
value	dev/e1000/if_em.h	/^	int value;			\/* Current value in usecs *\/$/;"	m	struct:em_int_delay_info
value	dev/e1000/if_lem.h	/^	int value;			\/* Current value in usecs *\/$/;"	m	struct:em_int_delay_info
value	if_em.h	/^        int value;                      \/* Current value in usecs *\/$/;"	m	struct:em_int_delay_info
value	if_em_hw.h	/^    volatile uint32_t value;    \/* Flexible Filter Value (RW) *\/$/;"	m	struct:em_ffvt_entry
vendor_id	dev/e1000/e1000_hw.h	/^	u16 vendor_id;$/;"	m	struct:e1000_hw
vendor_id	dev/e1000/e1000_vf.h	/^	u16 vendor_id;$/;"	m	struct:e1000_hw
vendor_id	dev/e1000/if_em.h	/^	unsigned int vendor_id;$/;"	m	struct:_em_vendor_info_t
vendor_id	dev/e1000/if_igb.h	/^	unsigned int vendor_id;$/;"	m	struct:_igb_vendor_info_t
vendor_id	dev/e1000/if_lem.h	/^	unsigned int vendor_id;$/;"	m	struct:_em_vendor_info_t
vendor_id	if_em_hw.h	/^    uint16_t vendor_id;$/;"	m	struct:em_hw
vf	dev/e1000/e1000_hw.h	/^		struct e1000_dev_spec_vf vf;$/;"	m	union:e1000_hw::__anon28	typeref:struct:e1000_hw::__anon28::e1000_dev_spec_vf
vf	dev/e1000/e1000_vf.h	/^		struct e1000_dev_spec_vf vf;$/;"	m	union:e1000_hw::__anon57	typeref:struct:e1000_hw::__anon57::e1000_dev_spec_vf
vf_ifp	dev/e1000/if_igb.h	/^	u16		vf_ifp;  \/* a VF interface *\/$/;"	m	struct:adapter
vf_number	dev/e1000/e1000_hw.h	/^	u32 vf_number;$/;"	m	struct:e1000_dev_spec_vf
vf_number	dev/e1000/e1000_vf.h	/^	u32 vf_number;$/;"	m	struct:e1000_dev_spec_vf
vlan	dev/e1000/e1000_82575.h	/^			__le16 vlan; \/* VLAN tag *\/$/;"	m	struct:e1000_adv_rx_desc::__anon38::__anon44
vlan	dev/e1000/e1000_hw.h	/^			__le16 vlan;  \/* VLAN tag *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon8::__anon12
vlan	dev/e1000/e1000_hw.h	/^			__le16 vlan; \/* VLAN tag *\/$/;"	m	struct:e1000_rx_desc_extended::__anon2::__anon6
vlan	dev/e1000/e1000_vf.h	/^			u16 vlan;             \/* VLAN tag *\/$/;"	m	struct:e1000_adv_rx_desc::__anon48::__anon54
vlan_attach	dev/e1000/if_em.h	/^	eventhandler_tag vlan_attach;$/;"	m	struct:adapter
vlan_attach	dev/e1000/if_igb.h	/^	eventhandler_tag vlan_attach;$/;"	m	struct:adapter
vlan_attach	dev/e1000/if_lem.h	/^	eventhandler_tag vlan_attach;$/;"	m	struct:adapter
vlan_detach	dev/e1000/if_em.h	/^	eventhandler_tag vlan_detach;$/;"	m	struct:adapter
vlan_detach	dev/e1000/if_igb.h	/^	eventhandler_tag vlan_detach;$/;"	m	struct:adapter
vlan_detach	dev/e1000/if_lem.h	/^	eventhandler_tag vlan_detach;$/;"	m	struct:adapter
vlan_id	dev/e1000/e1000_hw.h	/^	u16 vlan_id;$/;"	m	struct:e1000_host_mng_dhcp_cookie
vlan_macip_lens	dev/e1000/e1000_82575.h	/^	__le32 vlan_macip_lens;$/;"	m	struct:e1000_adv_tx_context_desc
vlan_macip_lens	dev/e1000/e1000_vf.h	/^	u32 vlan_macip_lens;$/;"	m	struct:e1000_adv_tx_context_desc
vlan_tag	dev/e1000/e1000_82575.h	/^			u32 vlan_tag:16;$/;"	m	struct:e1000_adv_context_desc::__anon33::__anon34
vm_offset_t	if_em_osdep.h	/^typedef unsigned long vm_offset_t;$/;"	t
vtophys	if_em_osdep.h	/^static inline u_int64_t vtophys(unsigned long virtual_addr)$/;"	f
wait_autoneg_complete	if_em_hw.h	/^    uint8_t wait_autoneg_complete;$/;"	m	struct:em_hw
watchdog_check	dev/e1000/if_lem.h	/^	bool		watchdog_check;$/;"	m	struct:adapter
watchdog_events	dev/e1000/if_em.h	/^	unsigned long	watchdog_events;$/;"	m	struct:adapter
watchdog_events	dev/e1000/if_igb.h	/^	unsigned long	watchdog_events;$/;"	m	struct:adapter
watchdog_events	dev/e1000/if_lem.h	/^	unsigned long	watchdog_events;$/;"	m	struct:adapter
watchdog_time	dev/e1000/if_em.h	/^        int                     watchdog_time;$/;"	m	struct:tx_ring
watchdog_time	dev/e1000/if_igb.h	/^	int			watchdog_time;$/;"	m	struct:tx_ring
watchdog_time	dev/e1000/if_lem.h	/^	int		watchdog_time;$/;"	m	struct:adapter
wb	dev/e1000/e1000_82575.h	/^	} wb;  \/* writeback *\/$/;"	m	union:e1000_adv_rx_desc	typeref:struct:e1000_adv_rx_desc::__anon38
wb	dev/e1000/e1000_82575.h	/^	} wb;$/;"	m	union:e1000_adv_tx_desc	typeref:struct:e1000_adv_tx_desc::__anon46
wb	dev/e1000/e1000_hw.h	/^	} wb;  \/* writeback *\/$/;"	m	union:e1000_rx_desc_extended	typeref:struct:e1000_rx_desc_extended::__anon2
wb	dev/e1000/e1000_hw.h	/^	} wb; \/* writeback *\/$/;"	m	union:e1000_rx_desc_packet_split	typeref:struct:e1000_rx_desc_packet_split::__anon8
wb	dev/e1000/e1000_vf.h	/^	} wb;  \/* writeback *\/$/;"	m	union:e1000_adv_rx_desc	typeref:struct:e1000_adv_rx_desc::__anon48
wb	dev/e1000/e1000_vf.h	/^	} wb;$/;"	m	union:e1000_adv_tx_desc	typeref:struct:e1000_adv_tx_desc::__anon56
width	dev/e1000/e1000_hw.h	/^	enum e1000_bus_width width;$/;"	m	struct:e1000_bus_info	typeref:enum:e1000_bus_info::e1000_bus_width
wmb	dev/e1000/e1000_osdep.h	114;"	d
wmb	dev/e1000/e1000_osdep.h	119;"	d
wol	dev/e1000/if_em.h	/^	u32		wol;$/;"	m	struct:adapter
wol	dev/e1000/if_igb.h	/^	int		wol;$/;"	m	struct:adapter
wol	dev/e1000/if_lem.h	/^	u32		wol;$/;"	m	struct:adapter
word	dev/e1000/e1000_nvm.h	/^	u16 word[2];$/;"	m	struct:e1000_pba
word_size	dev/e1000/e1000_hw.h	/^	u16 word_size;$/;"	m	struct:e1000_nvm_info
word_size	if_em_hw.h	/^    uint16_t word_size;$/;"	m	struct:em_eeprom_info
write	dev/e1000/e1000_hw.h	/^	s32  (*write)(struct e1000_hw *, u16, u16, u16 *);$/;"	m	struct:e1000_nvm_operations
write	dev/e1000/e1000_hw.h	/^	s32 (*write)(struct e1000_hw *, u32 *, u16, u16);$/;"	m	struct:e1000_mbx_operations
write	dev/e1000/e1000_vf.h	/^	s32 (*write)(struct e1000_hw *, u32 *, u16, u16);$/;"	m	struct:e1000_mbx_operations
write_i2c_byte	dev/e1000/e1000_hw.h	/^	s32 (*write_i2c_byte)(struct e1000_hw *, u8, u8, u8);$/;"	m	struct:e1000_phy_operations
write_posted	dev/e1000/e1000_hw.h	/^	s32 (*write_posted)(struct e1000_hw *, u32 *, u16, u16);$/;"	m	struct:e1000_mbx_operations
write_posted	dev/e1000/e1000_vf.h	/^	s32 (*write_posted)(struct e1000_hw *, u32 *, u16, u16);$/;"	m	struct:e1000_mbx_operations
write_reg	dev/e1000/e1000_hw.h	/^	s32  (*write_reg)(struct e1000_hw *, u32, u16);$/;"	m	struct:e1000_phy_operations
write_reg_locked	dev/e1000/e1000_hw.h	/^	s32  (*write_reg_locked)(struct e1000_hw *, u32, u16);$/;"	m	struct:e1000_phy_operations
write_reg_page	dev/e1000/e1000_hw.h	/^	s32  (*write_reg_page)(struct e1000_hw *, u32, u16);$/;"	m	struct:e1000_phy_operations
write_vfta	dev/e1000/e1000_hw.h	/^	void (*write_vfta)(struct e1000_hw *, u32, u32);$/;"	m	struct:e1000_mac_operations
write_vfta	dev/e1000/e1000_vf.h	/^	void (*write_vfta)(struct e1000_hw *, u32, u32);$/;"	m	struct:e1000_mac_operations
xoffrxc	dev/e1000/e1000_hw.h	/^	u64 xoffrxc;$/;"	m	struct:e1000_hw_stats
xoffrxc	if_em_hw.h	/^    uint64_t xoffrxc;$/;"	m	struct:em_hw_stats
xofftxc	dev/e1000/e1000_hw.h	/^	u64 xofftxc;$/;"	m	struct:e1000_hw_stats
xofftxc	if_em_hw.h	/^    uint64_t xofftxc;$/;"	m	struct:em_hw_stats
xonrxc	dev/e1000/e1000_hw.h	/^	u64 xonrxc;$/;"	m	struct:e1000_hw_stats
xonrxc	if_em_hw.h	/^    uint64_t xonrxc;$/;"	m	struct:em_hw_stats
xontxc	dev/e1000/e1000_hw.h	/^	u64 xontxc;$/;"	m	struct:e1000_hw_stats
xontxc	if_em_hw.h	/^    uint64_t xontxc;$/;"	m	struct:em_hw_stats
